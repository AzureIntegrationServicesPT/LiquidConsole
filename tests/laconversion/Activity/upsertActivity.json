{
	"$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"$connections": {
			"defaultValue": {},
			"type": "Object"
		}
	},
	"triggers": {
		"manual": {
			"type": "Request",
			"kind": "Http",
			"inputs": {}
		}
	},
	"actions": {
		"Catch": {
			"actions": {
				"Response": {
					"runAfter": {},
					"type": "Response",
					"kind": "Http",
					"inputs": {
						"body": "@if(contains(triggerOutputs()?['headers']?['Content-Type'],'application/json'),json(variables('Initialize upsertEventDetailsResponse'))?['Response']?['Envelope']?['Body']?['ActivitiesResponse'],variables('Initialize upsertEventDetailsResponse'))",
						"headers": {
							"Content-Type": "@{if(contains(triggerOutputs()?['headers']?['Content-Type'],'application/json'),'application/json','application/xml')}"
						},
						"statusCode": 500
					}
				},
				"Terminate": {
					"runAfter": {
						"Response": [
							"Succeeded"
						]
					},
					"type": "Terminate",
					"inputs": {
						"runError": {
							"code": "500",
							"message": "catch block"
						},
						"runStatus": "Failed"
					}
				}
			},
			"runAfter": {
				"Try": [
					"Failed",
					"TimedOut"
				]
			},
			"type": "Scope"
		},
		"Initialize_ContactResponse": {
			"runAfter": {
				"Initialize_Request": [
					"Succeeded"
				]
			},
			"type": "InitializeVariable",
			"inputs": {
				"variables": [
					{
						"name": "ContactResponse",
						"type": "array"
					}
				]
			}
		},
		"Initialize_Object_Response": {
			"runAfter": {
				"Initialize_upsertEventDetailsResponse": [
					"Succeeded"
				]
			},
			"type": "InitializeVariable",
			"inputs": {
				"variables": [
					{
						"name": "ObjectResponse",
						"type": "array"
					}
				]
			}
		},
		"Initialize_Request": {
			"runAfter": {
				"Initialize_Object_Response": [
					"Succeeded"
				]
			},
			"type": "InitializeVariable",
			"inputs": {
				"variables": [
					{
						"name": "Request",
						"type": "object",
						"value": {}
					}
				]
			}
		},
		"Initialize_upsertEventDetailsResponse": {
			"runAfter": {},
			"type": "InitializeVariable",
			"inputs": {
				"variables": [
					{
						"name": "Initialize upsertEventDetailsResponse",
						"type": "string",
						"value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Envelope>\n    <Body>\n        <ActivitiesResponse>\n            <Events>\n                <Created>false</Created>\n                <Id/>\n                <Message>Generic Error in the Logic App</Message>\n                <Status>failure</Status>\n            </Events>\n            <Tasks>\n                <Created>false</Created>\n                <Id/>\n                <Message>Generic Error in the Logic App</Message>\n                <Status>failure</Status>\n            </Tasks>\n        </ActivitiesResponse>\n    </Body>\n</Envelope>"
					}
				]
			}
		},
		"Try": {
			"actions": {
				"For_each_Relation": {
					"foreach": "@body('Transform_Upsert_Responses_to_Upsert_Relations')?['Relation']",
					"actions": {
						"upsertObject_-_Event_or_Task_Relation": {
							"runAfter": {},
							"type": "Workflow",
							"inputs": {
								"body": {
									"Object": {
										"EventId": "@items('For_each_Relation')?['EventId']",
										"RelationId": "@items('For_each_Relation')?['RelationId']",
										"isInvitee": true
									}
								},
								"headers": {
									"Object": "EventRelation"
								},
								"host": {
									"triggerName": "manual",
									"workflow": {
										"id": "${int_upsertObject_logicAppId}"
									}
								}
							}
						}
					},
					"runAfter": {
						"Transform_Upsert_Responses_to_Upsert_Relations": [
							"Succeeded"
						]
					},
					"type": "Foreach"
				},
				"Loop_over_Upsert": {
					"foreach": "@ body('Transform_JSON_Payload_into_Generic_Object')?['Objects']",
					"actions": {
						"Condition_delete_Contacts": {
							"actions": {
								"logic-c00031-int_deleteData": {
									"runAfter": {},
									"type": "Workflow",
									"inputs": {
										"body": {
											"EventId": "@{items('Loop_Over_Upsert')?['Information']?['Id']}"
										},
										"host": {
											"triggerName": "manual",
											"workflow": {
												"id": "${int_deleteEventRelation_logicAppId}"
											}
										}
									}
								}
							},
							"runAfter": {
								"Current_Item": [
									"Succeeded"
								]
							},
							"expression": {
								"and": [
									{
										"not": {
											"equals": [
												"@items('Loop_over_Upsert')?['Information']?['deleteContacts']",
												"@null"
											]
										}
									}
								]
							},
							"type": "If"
						},
						"Current_Item": {
							"runAfter": {},
							"type": "Compose",
							"inputs": "@items('Loop_Over_Upsert')?['Information']"
						},
						"Success_getting_UserID": {
							"actions": {
								"Which_Object": {
									"runAfter": {},
									"cases": {
										"Contact": {
											"case": "Contact",
											"actions": {
												"Success_getting_AccountId": {
													"actions": {
														"Append_Contact_to_Variable": {
															"runAfter": {
																"upsertContact": [
																	"Succeeded"
																]
															},
															"type": "AppendToArrayVariable",
															"inputs": {
																"name": "ContactResponse",
																"value": "@body('upsertContact')"
															}
														},
														"upsertContact": {
															"runAfter": {},
															"type": "Workflow",
															"inputs": {
																"body": {
																	"Contact": {
																		"AccountId": "@{body('getAccountId')?['Id']}",
																		"AssistantName": "@items('Loop_Over_Upsert')?['Information']?['AssistantName']",
																		"AssistantPhone": "@items('Loop_Over_Upsert')?['Information']?['AssistantPhone']",
																		"Birthdate": "@items('Loop_Over_Upsert')?['Information']?['Birthdate']",
																		"CurrencyIsoCode": "@items('Loop_Over_Upsert')?['Information']?['CurrencyIsoCode']",
																		"DPML__Employee_Number__c": "@items('Loop_Over_Upsert')?['Information']?['DPML__Employee_Number__c']",
																		"Department": "@items('Loop_Over_Upsert')?['Information']?['Department']",
																		"Description": "@items('Loop_Over_Upsert')?['Information']?['Description']",
																		"DoNotCall": "@items('Loop_Over_Upsert')?['Information']?['DoNotCall']",
																		"Email": "@items('Loop_Over_Upsert')?['Information']?['Email']",
																		"Fax": "@items('Loop_Over_Upsert')?['Information']?['Fax']",
																		"FirstName": "@{items('Loop_Over_Upsert')?['Information']?['FirstName']}",
																		"HasOptedOutOfEmail": "@items('Loop_Over_Upsert')?['Information']?['HasOptedOutOfEmail']",
																		"HasOptedOutOfFax": "@items('Loop_Over_Upsert')?['Information']?['HasOptedOutOfFax']",
																		"HomePhone": "@items('Loop_Over_Upsert')?['Information']?['HomePhone']",
																		"Id": "@{items('Loop_Over_Upsert')?['Information']?['Id']}",
																		"IndividualId": "@items('Loop_Over_Upsert')?['Information']?['IndividualId']",
																		"Jigsaw": "@items('Loop_Over_Upsert')?['Information']?['Jigsaw']",
																		"LID__LinkedIn_Company_Id__c": "@items('Loop_Over_Upsert')?['Information']?['LID__LinkedIn_Company_Id__c']",
																		"LID__LinkedIn_Member_Token__c": "@items('Loop_Over_Upsert')?['Information']?['LID__LinkedIn_Member_Token__c']",
																		"LastName": "@items('Loop_Over_Upsert')?['Information']?['LastName']",
																		"LeadSource": "@items('Loop_Over_Upsert')?['Information']?['LeadSource']",
																		"MobilePhone": "@items('Loop_Over_Upsert')?['Information']?['MobilePhone']",
																		"OtherPhone": "@items('Loop_Over_Upsert')?['Information']?['OtherPhone']",
																		"OwnerId": "@{body('getUserID')?['Id']}",
																		"Phone": "@items('Loop_Over_Upsert')?['Information']?['Phone']",
																		"RecordTypeId": "@items('Loop_Over_Upsert')?['Information']?['RecordTypeId']",
																		"ReportsToId": "@items('Loop_Over_Upsert')?['Information']?['ReportsToId']",
																		"S4SAcademic_Title__c": "@items('Loop_Over_Upsert')?['Information']?['S4SAcademic_Title__c']",
																		"S4SAlternative_First_Name__c": "@items('Loop_Over_Upsert')?['Information']?['S4SAlternative_First_Name__c']",
																		"S4SAlternative_Last_Name__c": "@items('Loop_Over_Upsert')?['Information']?['S4SAlternative_Last_Name__c']",
																		"S4SCONTACT_LegacyID__c": "@items('Loop_Over_Upsert')?['Information']?['S4SCONTACT_LegacyID__c']",
																		"S4SData_Admin__c": "@items('Loop_Over_Upsert')?['Information']?['S4SData_Admin__c']",
																		"S4SDepartment_Type__c": "@items('Loop_Over_Upsert')?['Information']?['S4SDepartment_Type__c']",
																		"S4SDepartment_converted__c": "@items('Loop_Over_Upsert')?['Information']?['S4SDepartment_converted__c']",
																		"S4SDouble_Opt_In_Date__c": "@items('Loop_Over_Upsert')?['Information']?['S4SDouble_Opt_In_Date__c']",
																		"S4SDouble_Opt_In__c": "@items('Loop_Over_Upsert')?['Information']?['S4SDouble_Opt_In__c']",
																		"S4SEmail_Duplicate__c": "@items('Loop_Over_Upsert')?['Information']?['S4SEmail_Duplicate__c']",
																		"S4SEmail_encoding__c": "@items('Loop_Over_Upsert')?['Information']?['S4SEmail_encoding__c']",
																		"S4SExternal_Source__c": "@items('Loop_Over_Upsert')?['Information']?['S4SExternal_Source__c']",
																		"S4SGender__c": "@items('Loop_Over_Upsert')?['Information']?['S4SGender__c']",
																		"S4SInitial__c": "@items('Loop_Over_Upsert')?['Information']?['S4SInitial__c']",
																		"S4SJob_Description__c": "@items('Loop_Over_Upsert')?['Information']?['S4SJob_Description__c']",
																		"S4SJob_Level__c": "@items('Loop_Over_Upsert')?['Information']?['S4SJob_Level__c']",
																		"S4SJob_Role__c": "@items('Loop_Over_Upsert')?['Information']?['S4SJob_Role__c']",
																		"S4SJob_Specification__c": "@items('Loop_Over_Upsert')?['Information']?['S4SJob_Specification__c']",
																		"S4SLanguage__c": "@items('Loop_Over_Upsert')?['Information']?['S4SLanguage__c']",
																		"S4SLanguage_encoding__c": "@items('Loop_Over_Upsert')?['Information']?['S4SLanguage_encoding__c']",
																		"S4SLead_Central_Enabled_Contact__c": "@items('Loop_Over_Upsert')?['Information']?['S4SLead_Central_Enabled_Contact__c']",
																		"S4SLegitimate_Interest__c": "@items('Loop_Over_Upsert')?['Information']?['S4SLegitimate_Interest__c']",
																		"S4SLinkedIn_URL__c": "@items('Loop_Over_Upsert')?['Information']?['S4SLinkedIn_URL__c']",
																		"S4SLocale_encoding__c": "@items('Loop_Over_Upsert')?['Information']?['S4SLocale_encoding__c']",
																		"S4SManagement_Level__c": "@items('Loop_Over_Upsert')?['Information']?['S4SManagement_Level__c']",
																		"S4SNever_Email__c": "@items('Loop_Over_Upsert')?['Information']?['S4SNever_Email__c']",
																		"S4SNever_Mail__c": "@items('Loop_Over_Upsert')?['Information']?['S4SNever_Mail__c']",
																		"S4SNever_Survey__c": "@items('Loop_Over_Upsert')?['Information']?['S4SNever_Survey__c']",
																		"S4SNo_Marketing__c": "@items('Loop_Over_Upsert')?['Information']?['S4SNo_Marketing__c']",
																		"S4SOpt_Out_Date__c": "@items('Loop_Over_Upsert')?['Information']?['S4SOpt_Out_Date__c']",
																		"S4SOpt_Out__c": "@items('Loop_Over_Upsert')?['Information']?['S4SOpt_Out__c']",
																		"S4SPartner_Contact_Role__c": "@items('Loop_Over_Upsert')?['Information']?['S4SPartner_Contact_Role__c']",
																		"S4SRestricted_Phone__c": "@items('Loop_Over_Upsert')?['Information']?['S4SRestricted_Phone__c']",
																		"S4SSelf_Employed__c": "@items('Loop_Over_Upsert')?['Information']?['S4SSelf_Employed__c']",
																		"S4SSpecification_converted__c": "@items('Loop_Over_Upsert')?['Information']?['S4SSpecification_converted__c']",
																		"S4SStatus__c": "@items('Loop_Over_Upsert')?['Information']?['S4SStatus__c']",
																		"S4STimezone__c": "@items('Loop_Over_Upsert')?['Information']?['S4STimezone__c']",
																		"S4SUser_ID__c": "@items('Loop_Over_Upsert')?['Information']?['S4SUser_ID__c']",
																		"S4SVisibility__c": "@items('Loop_Over_Upsert')?['Information']?['S4SVisibility__c']",
																		"S4S_Converted_from_Lead__c": "@items('Loop_Over_Upsert')?['Information']?['S4S_Converted_from_Lead__c']",
																		"Title": "@items('Loop_Over_Upsert')?['Information']?['Title']"
																	},
																	"FirstName": "",
																	"LastName": ""
																},
																"host": {
																	"triggerName": "manual",
																	"workflow": {
																		"id": "${int_upsertContact_logicAppId}"
																	}
																},
																"retryPolicy": {
																	"count": 1,
																	"interval": "PT5S",
																	"type": "fixed"
																}
															}
														}
													},
													"runAfter": {
														"getAccountId": [
															"Succeeded"
														]
													},
													"else": {
														"actions": {
															"Append_Contact_Fail_to_Variable": {
																"runAfter": {},
																"type": "AppendToArrayVariable",
																"inputs": {
																	"name": "ContactResponse",
																	"value": {
																		"Created": "false",
																		"Id": "",
																		"Message": "@{coalesce(body('getAccountId')?['message'],body('getUserId')?['message'],'')}",
																		"Status": ""
																	}
																}
															}
														}
													},
													"expression": {
														"and": [
															{
																"equals": [
																	"@ body('getAccountId')?['status']",
																	"success"
																]
															}
														]
													},
													"type": "If"
												},
												"getAccountId": {
													"runAfter": {},
													"type": "Workflow",
													"inputs": {
														"body": {
															"S4SIdentification_Number__c": "@{items('Loop_Over_Upsert')?['Information']?['Account']?['IdentificationNumber']}",
															"S4SIfA__c": "@{items('Loop_Over_Upsert')?['Information']?['Account']?['IFA']}"
														},
														"host": {
															"triggerName": "manual",
															"workflow": {
																"id": "${int_getAccountId_logicAppId}"
															}
														}
													}
												}
											}
										},
										"Event": {
											"case": "Event",
											"actions": {
												"Append_Event_to_Variable": {
													"runAfter": {
														"upsertObject_-_Event": [
															"Succeeded"
														]
													},
													"type": "AppendToArrayVariable",
													"inputs": {
														"name": "ObjectResponse",
														"value": {
															"Response": "@body('upsertObject_-_Event')",
															"Type": "Events"
														}
													}
												},
												"getContactId": {
													"runAfter": {},
													"type": "Workflow",
													"inputs": {
														"body": {
															"Email": "@items('Loop_Over_Upsert')?['Information']?['Who']?['Email']"
														},
														"host": {
															"triggerName": "manual",
															"workflow": {
																"id": "${int_getContactId_logicAppId}"
															}
														}
													}
												},
												"upsertObject_-_Event": {
													"runAfter": {
														"getContactId": [
															"Succeeded"
														]
													},
													"type": "Workflow",
													"inputs": {
														"body": {
															"Object": {
																"Id": "@{items('Loop_Over_Upsert')?['Information']?['Id']}",
																"ActivityDate": "@{items('Loop_Over_Upsert')?['Information']?['ActivityDate']}",
																"ActivityDateTime": "@{items('Loop_Over_Upsert')?['Information']?['ActivityDateTime']}",
																"CurrencyIsoCode": "@{items('Loop_Over_Upsert')?['Information']?['CurrencyIsoCode']}",
																"Description": "@{items('Loop_Over_Upsert')?['Information']?['Description']}",
																"DurationInMinutes": "@{items('Loop_Over_Upsert')?['Information']?['DurationInMinutes']}",
																"Email": "@{items('Loop_Over_Upsert')?['Information']?['Email']}",
																"EndDateTime": "@{items('Loop_Over_Upsert')?['Information']?['EndDateTime']}",
																"EventSubtype": "@{items('Loop_Over_Upsert')?['Information']?['EventSubtype']}",
																"IsAllDayEvent": "@{items('Loop_Over_Upsert')?['Information']?['IsAllDayEvent']}",
																"IsPrivate": "@{items('Loop_Over_Upsert')?['Information']?['IsPrivate']}",
																"IsRecurrence2": "@{items('Loop_Over_Upsert')?['Information']?['IsRecurrence2']}",
																"IsReminderSet": "@{items('Loop_Over_Upsert')?['Information']?['IsReminderSet']}",
																"IsVisibleInSelfService": "@{items('Loop_Over_Upsert')?['Information']?['IsVisibleInSelfService']}",
																"Location": "@{items('Loop_Over_Upsert')?['Information']?['Location']}",
																"OwnerId": "@{body('getUserId')?['Id']} ",
																"Phone": "@{items('Loop_Over_Upsert')?['Information']?['Phone']}",
																"S4SNumber_of_Participants__c": "@{items('Loop_Over_Upsert')?['Information']?['S4SNumber_of_Participants__c']}",
																"S4SOther_Topics__c": "@{items('Loop_Over_Upsert')?['Information']?['S4SOther_Topics__c']}",
																"S4SStatus__c": "@{items('Loop_Over_Upsert')?['Information']?['S4SStatus__c']}",
																"S4STraining_Topic__c": "@{items('Loop_Over_Upsert')?['Information']?['S4STraining_Topic__c']}",
																"ShowAs": "@{items('Loop_Over_Upsert')?['Information']?['ShowAs']}",
																"StartDateTime": "@{items('Loop_Over_Upsert')?['Information']?['StartDateTime']}",
																"Subject": "@{items('Loop_Over_Upsert')?['Information']?['Subject']}",
																"Type": "@{items('Loop_Over_Upsert')?['Information']?['Type']}",
																"WhatId": "@{coalesce(items('Loop_Over_Upsert')?['Information']?['WhatId'])}",
																"WhoId": "@{coalesce(body('getContactId')?['Id'])}"
															}
														},
														"headers": {
															"Id": "@{items('Loop_Over_Upsert')?['Information']?['Id']}",
															"Object": "Event"
														},
														"host": {
															"triggerName": "manual",
															"workflow": {
																"id": "${int_upsertObject_logicAppId}"
															}
														}
													}
												}
											}
										},
										"Task": {
											"case": "Task",
											"actions": {
												"Append_Task_to_Variable": {
													"runAfter": {
														"upsertObject_-_Task": [
															"Succeeded"
														]
													},
													"type": "AppendToArrayVariable",
													"inputs": {
														"name": "ObjectResponse",
														"value": {
															"Response": "@body('upsertObject_-_Task')",
															"Type": "Tasks"
														}
													}
												},
												"Compose_Task": {
													"runAfter": {
														"getContactId-Task": [
															"Succeeded",
															"Failed"
														]
													},
													"type": "Compose",
													"inputs": {
														"AccountId": "@{body('getAccountId-Task')?['Id']}",
														"ActivityDate": "@{items('Loop_Over_Upsert')?['Information']?['ActivityDate']}",
														"CallDisposition": "@{items('Loop_Over_Upsert')?['Information']?['CallDisposition']}",
														"CallDurationInSeconds": "@{items('Loop_Over_Upsert')?['Information']?['CallDurationInSecondsd']}",
														"CallObject": "@{items('Loop_Over_Upsert')?['Information']?['CallObject']}",
														"CallType": "@{items('Loop_Over_Upsert')?['Information']?['CallType']}",
														"CompletedDateTime": "@{items('Loop_Over_Upsert')?['Information']?['CompletedDateTime']}",
														"CurrencyIsoCode": "@{items('Loop_Over_Upsert')?['Information']?['CurrencyIsoCode']}",
														"ReminderDateTime": "@{items('Loop_Over_Upsert')?['Information']?['ReminderDateTime']}",
														"S4SOpportunity_Milestone__c": "@{items('Loop_Over_Upsert')?['Information']?['S4SOpportunity_Milestone__c']}",
														"Description": "@{items('Loop_Over_Upsert')?['Information']?['Description']}",
														"IsRecurrence": "@{items('Loop_Over_Upsert')?['Information']?['IsRecurrence']}",
														"IsReminderSet": "@{items('Loop_Over_Upsert')?['Information']?['IsReminderSet']}",
														"IsVisibleInSelfService": "@{items('Loop_Over_Upsert')?['Information']?['IsVisibleInSelfService']}",
														"OwnerId": "@{body('getUserId')?['Id']}",
														"Phone": "@items('Loop_Over_Upsert')?['Information']?['Phone']",
														"Priority": "@{items('Loop_Over_Upsert')?['Information']?['Priority']}",
														"RecordTypeId": "@{body('Get_Record_Type')?['Id']}",
														"RecurrenceInterval": "@{items('Loop_Over_Upsert')?['Information']?['RecurrenceInterval']}",
														"RecurrenceRegeneratedType": "@{items('Loop_Over_Upsert')?['Information']?['RecurrenceRegeneratedType']}",
														"S4SDelegated_By__c": "@{body('getDelegatedBy')?['Id']}",
														"Status": "@{items('Loop_Over_Upsert')?['Information']?['Status']}",
														"Subject": "@{items('Loop_Over_Upsert')?['Information']?['Subject']}",
														"TaskSubtype": "@{items('Loop_Over_Upsert')?['Information']?['TaskSubtype']}",
														"Type": "@{items('Loop_Over_Upsert')?['Information']?['Type']}",
														"WhatId": "@{coalesce(items('Loop_Over_Upsert')?['Information']?['WhatId'])}",
														"WhoId": "@{body('getContactId-Task')?['Id']}"
													}
												},
												"Get_Record_Type": {
													"runAfter": {},
													"type": "ApiConnection",
													"inputs": {
														"host": {
															"connection": {
																"name": "@parameters('$connections')['salesForceConnection']['connectionId']"
															}
														},
														"method": "get",
														"path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('RecordType'))}/items",
														"queries": {
															"$filter": "Name eq '@{items('Loop_Over_Upsert')?['Information']?['RecordType']?['Name']}'",
															"$select": "Id"
														}
													}
												},
												"JsonRemoveNullOrEmptyFunc": {
													"runAfter": {
														"Compose_Task": [
															"Succeeded"
														]
													},
													"type": "Function",
													"inputs": {
														"body": {
															"CorrelationId": "@{triggerOutputs()['headers']?['correlationid']}",
															"InputRequestBase64": "@{base64(outputs('Compose_Task'))}",
															"InterfaceName": "upsertActivity",
															"Username": "@{triggerOutputs()['headers']?['Username']}",
															"operation": "JsonRemoveNullOrEmpty"
														},
														"authentication": {
															"type": "Raw",
															"value": "[parameters('functionAppKey')]"
														},
														"function": {
															"id": "[concat(parameters('funcApp'), '/functions/JsonRemoveNullOrEmptyFunc')]"
														}
													}
												},
												"getAccountId-Task": {
													"runAfter": {
														"getDelegatedBy": [
															"Succeeded",
															"Failed"
														]
													},
													"type": "Workflow",
													"inputs": {
														"body": {
															"S4SIdentification_Number__c": "@{null}",
															"S4SIfA__c": "@{items('Loop_Over_Upsert')?['Information']?['Account']?['S4SIfA__c']}"
														},
														"host": {
															"triggerName": "manual",
															"workflow": {
																"id": "${int_getAccountId_logicAppId}"
															}
														}
													}
												},
												"getContactId-Task": {
													"runAfter": {
														"getAccountId-Task": [
															"Succeeded"
														]
													},
													"type": "Workflow",
													"inputs": {
														"body": {
															"Email": "@{items('Loop_Over_Upsert')?['Information']?['Who']?['Email']}"
														},
														"host": {
															"triggerName": "manual",
															"workflow": {
																"id": "${int_getContactId_logicAppId}"
															}
														}
													}
												},
												"getDelegatedBy": {
													"runAfter": {
														"Get_Record_Type": [
															"Succeeded",
															"Failed"
														]
													},
													"type": "Workflow",
													"inputs": {
														"body": {
															"Email": "@{items('Loop_Over_Upsert')?['Information']?['S4SDelegated_By__c']?['Email']}",
															"Id": "@{items('Loop_Over_Upsert')?['Information']?['S4SDelegated_By__c']?['Id']}",
															"S4SGID_Technical__c": "@{items('Loop_Over_Upsert')?['Information']?['S4SDelegated_By__c']?['GIDTechnical']}"
														},
														"host": {
															"triggerName": "manual",
															"workflow": {
																"id": "${int_getUserId_logicAppId}"
															}
														}
													}
												},
												"upsertObject_-_Task": {
													"runAfter": {
														"JsonRemoveNullOrEmptyFunc": [
															"Succeeded"
														]
													},
													"type": "Workflow",
													"inputs": {
														"body": {
															"Object": "@json(body('JsonRemoveNullOrEmptyFunc')?['result']?['restructuredJson'])"
														},
														"headers": {
															"Id": "@{items('Loop_Over_Upsert')?['Information']?['Id']}",
															"Object": "Task"
														},
														"host": {
															"triggerName": "manual",
															"workflow": {
																"id": "${int_upsertObject_logicAppId}"
															}
														}
													}
												}
											}
										}
									},
									"default": {
										"actions": {}
									},
									"expression": "@ items('Loop_over_Upsert')?['Type']",
									"type": "Switch"
								}
							},
							"runAfter": {
								"getUserId": [
									"Succeeded"
								]
							},
							"else": {
								"actions": {
									"Which_Type": {
										"actions": {
											"Append_to_ContactResponse": {
												"runAfter": {},
												"type": "AppendToArrayVariable",
												"inputs": {
													"name": "ContactResponse",
													"value": {
														"Created": "false",
														"Id": "@{items('Loop_over_Upsert')?['Information']?['Id']}",
														"Message": "Provided User Information could not be found in SieSales",
														"Status": "false"
													}
												}
											}
										},
										"runAfter": {},
										"else": {
											"actions": {
												"Append_to_ObjectResponse": {
													"runAfter": {},
													"type": "AppendToArrayVariable",
													"inputs": {
														"name": "ObjectResponse",
														"value": {
															"Response": {
																"Created": "false",
																"Id": "@{items('Loop_over_Upsert')?['Information']?['Id']}",
																"Message": "Provided User Information could not be found in SieSales",
																"Status": "failure"
															},
															"Type": "@{items('Loop_over_Upsert')?['Type']}s"
														}
													}
												}
											}
										},
										"expression": {
											"and": [
												{
													"equals": [
														"@items('Loop_over_Upsert')?['Type']",
														"Contact"
													]
												}
											]
										},
										"type": "If"
									}
								}
							},
							"expression": {
								"and": [
									{
										"equals": [
											"@body('getUserId')?['status']",
											"success"
										]
									}
								]
							},
							"type": "If"
						},
						"getUserId": {
							"runAfter": {
								"Current_Item": [
									"Succeeded"
								]
							},
							"type": "Workflow",
							"inputs": {
								"body": {
									"Email": "@{items('Loop_Over_Upsert')?['Information']?['Email']}",
									"Id": "@{items('Loop_Over_Upsert')?['Information']?['Owner']?['Id']}",
									"S4SGID_Technical__c": "@{if(equals(items('Loop_Over_Upsert')?['Type'],'Contact'),items('Loop_Over_Upsert')?['Information']?['Owner']?['S4SGID_Technical__c'],items('Loop_Over_Upsert')?['Information']?['Owner']?['GIDTechnical'])}"
								},
								"host": {
									"triggerName": "manual",
									"workflow": {
										"id": "${int_getUserId_logicAppId}"
									}
								}
							}
						}
					},
					"runAfter": {
						"Transform_JSON_Payload_into_Generic_Object": [
							"Succeeded"
						]
					},
					"type": "Foreach",
					"runtimeConfiguration": {
						"concurrency": {
							"repetitions": 50
						}
					}
				},
				"Response_upsertEvents": {
					"runAfter": {
						"For_each_Relation": [
							"Succeeded"
						]
					},
					"type": "Response",
					"kind": "Http",
					"inputs": {
						"body": "@if(contains(triggerOutputs()?['headers']?['Content-Type'],'application/json'),body('Transform_Upsert_Responses_to_Upsert_Relations')?['Response']?['Envelope']?['Body']?['ActivitiesResponse'],concat('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n',xml(body('Transform_Upsert_Responses_to_Upsert_Relations')?['Response'])))",
						"headers": {
							"Content-Type": "@{if(contains(triggerOutputs()?['headers']?['Content-Type'],'application/json'),'application/json','application/xml')}"
						},
						"statusCode": 200
					}
				},
				"Transform_JSON_Payload_into_Generic_Object": {
					"runAfter": {
						"Transform_XML_to_JSON": [
							"Succeeded",
							"Failed"
						]
					},
					"type": "Function",
					"inputs": {
						"body": "@if(contains(triggerOutputs()?['headers']?['Content-Type'],'application/json'),triggerBody(),body('Transform_XML_to_JSON'))",
						"authentication": {
							"type": "Raw",
							"value": "[parameters('functionAppKey')]"
						},
						"function": {
							"id": "[concat(parameters('funcApp'), '/functions/LiquidTransformer')]"
						},
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json",
							"Filename": "${liquid_UpsertActivity}"
						},
						"method": "POST",
						"retryPolicy": {
							"type": "none"
						}
					}
				},
				"Transform_Upsert_Responses_to_Upsert_Relations": {
					"runAfter": {
						"Loop_over_Upsert": [
							"Succeeded"
						]
					},
					"type": "Function",
					"inputs": {
						"body": {
							"Contact": "@variables('ContactResponse')",
							"Object": "@variables('ObjectResponse')"
						},
						"authentication": {
							"type": "Raw",
							"value": "[parameters('functionAppKey')]"
						},
						"function": {
							"id": "[concat(parameters('funcApp'), '/functions/LiquidTransformer')]"
						},
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json",
							"Filename": "${liquid_Upsert_Relations}"
						},
						"retryPolicy": {
							"type": "none"
						}
					}
				},
				"Transform_XML_to_JSON": {
					"runAfter": {},
					"type": "Function",
					"inputs": {
						"body": "@triggerBody()",
						"authentication": {
							"type": "Raw",
							"value": "[parameters('functionAppKey')]"
						},
						"function": {
							"id": "[concat(parameters('funcApp'), '/functions/LiquidTransformer')]"
						},
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/xml",
							"Filename": "${liquid_XML_to_JSON}"
						},
						"retryPolicy": {
							"type": "none"
						}
					}
				}
			},
			"runAfter": {
				"Initialize_ContactResponse": [
					"Succeeded"
				]
			},
			"type": "Scope"
		}
	},
	"outputs": {}
}
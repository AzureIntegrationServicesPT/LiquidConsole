{
    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
    "actions": {
        "Check-OpportunityOwnerRole": {
            "actions": {
                "Condition_OpportunityOwnerRole": {
                    "actions": {
                        "Failed_Response_SieSmart1": {
                            "inputs": {
                                "body": "@replace(variables('varAckResponse'),'##RESULT##','0')",
                                "headers": {
                                    "Content-Type": "application/xml"
                                },
                                "statusCode": 500
                            },
                            "kind": "Http",
                            "runAfter": {
                                "HTTP-Call_OBM-SieSmart_us_endpoint": [
                                    "Failed",
                                    "TimedOut"
                                ]
                            },
                             "runtimeConfiguration": {
       "secureData": {
          "properties": [
              "inputs"
         ]      
      }
  },
                            "type": "Response"
                        },
                        "HTTP-Call_OBM-SieSmart_us_endpoint": {
                            "inputs": {
                                "authentication": {
                                    "password": "@json(body('GetConfiguration'))?['SieSmart']?['password']",
                                        "type": "Basic",
                                        "username": "@json(body('GetConfiguration'))?['SieSmart']?['username']"
                                },
                                "body": "@json(variables('varInputRequestEndpoint'))",
                                "headers": {
                                    "Content-Type": "application/json"
                                },
                                "method": "POST",
                                "uri": "@{json(body('GetConfiguration'))?['SieSmart']?['url1']}"
                            },
                            "runAfter": {},
                             "runtimeConfiguration": {
       "secureData": {
          "properties": [
              "inputs",
              "outputs"
         ]      
      }
  },
                            "type": "Http"
                        },
                        "Success_Response_SieSmart1": {
                            "inputs": {
                                "body": "@replace(variables('varAckResponse'),'##RESULT##','1')",
                                "headers": {
                                    "Content-Type": "application/xml"
                                },
                                "statusCode": 200
                            },
                            "kind": "Http",
                            "runAfter": {
                                "HTTP-Call_OBM-SieSmart_us_endpoint": [
                                    "Succeeded"
                                ]
                            },
                             "runtimeConfiguration": {
       "secureData": {
          "properties": [
              "inputs"
         ]      
      }
  },
                            "type": "Response"
                        },
                        "Terminate-Failed_Response_SieSmart1": {
                            "inputs": {
                                "runStatus": "Failed"
                            },
                            "runAfter": {
                                "Failed_Response_SieSmart1": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Terminate"
                        }
                    },
                    "else": {
                        "actions": {
                            "Condition": {
                                "actions": {
                                    "Failed_Response_SieSmart2": {
                                        "inputs": {
                                            "body": "@replace(variables('varAckResponse'),'##RESULT##','0')",
                                            "headers": {
                                                "Content-Type": "application/xml"
                                            },
                                            "statusCode": 500
                                        },
                                        "kind": "Http",
                                        "runAfter": {
                                            "HTTP-Call_OBM-SieSmart_eu_endpoint": [
                                                "TimedOut",
                                                "Failed"
                                            ]
                                        },
                                         "runtimeConfiguration": {
       "secureData": {
          "properties": [
              "inputs"
         ]      
      }
  },
                                        "type": "Response"
                                    },
                                    "HTTP-Call_OBM-SieSmart_eu_endpoint": {
                                        "inputs": {
                                                "authentication": {
                                                    "password": "@json(body('GetConfiguration'))?['SieSmart']?['password']",
                                                    "type": "Basic",
                                                    "username": "@json(body('GetConfiguration'))?['SieSmart']?['username']"
                                                },
                                                "body": "@json(variables('varInputRequestEndpoint'))",
                                                "headers": {
                                                    "Content-Type": "application/json"
                                                },
                                                "method": "POST",
                                                "uri": "@{json(body('GetConfiguration'))?['SieSmart']?['url2']}"
                                            },
                                        "runAfter": {},
                                         "runtimeConfiguration": {
       "secureData": {
          "properties": [
              "inputs",
              "outputs"
         ]      
      }
  },
                                        "type": "Http"
                                    },
                                    "Success_Response_SieSmart2": {
                                        "inputs": {
                                            "body": "@replace(variables('varAckResponse'),'##RESULT##','1')",
                                            "headers": {
                                                "Content-Type": "application/xml"
                                            },
                                            "statusCode": 200
                                        },
                                        "kind": "Http",
                                        "runAfter": {
                                            "HTTP-Call_OBM-SieSmart_eu_endpoint": [
                                                "Succeeded"
                                            ]
                                        },
                                         "runtimeConfiguration": {
       "secureData": {
          "properties": [
              "inputs"
         ]      
      }
  },
                                        "type": "Response"
                                    },
                                    "Terminate-Failed_Response_SieSmart2": {
                                        "inputs": {
                                            "runStatus": "Failed"
                                        },
                                        "runAfter": {
                                            "Failed_Response_SieSmart2": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Terminate"
                                    }
                                },
                                "else": {
                                    "actions": {
                                        "Condition_COF_FR": {
                                            "actions": {
                                                "Failed_Response_SieSmart_FR": {
                                                    "inputs": {
                                                        "body": "@replace(variables('varAckResponse'),'##RESULT##','0')",
                                                        "headers": {
                                                            "Content-Type": "application/xml"
                                                        },
                                                        "statusCode": 500
                                                    },
                                                    "kind": "Http",
                                                    "runAfter": {
                                                        "HTTP-Call_OBM-SieSmart_FR_endpoint": [
                                                            "Failed",
                                                            "TimedOut"
                                                        ]
                                                    },
                                                    "type": "Response"
                                                },
                                                "HTTP-Call_OBM-SieSmart_FR_endpoint": {
                                                    "inputs": {
                                                        "authentication": {
                                                            "password": "@json(body('GetConfiguration'))?['SieSmart']?['password']",
                                                            "type": "Basic",
                                                            "username": "@json(body('GetConfiguration'))?['SieSmart']?['username']"
                                                        },
                                                        "body": "@json(variables('varInputRequestEndpoint'))",
                                                        "headers": {
                                                            "Content-Type": "application/json"
                                                        },
                                                        "method": "POST",
                                                        "uri": "@{json(body('GetConfiguration'))?['SieSmart']?['url3']}"
                                                    },
                                                    "runAfter": {},
                                                     "runtimeConfiguration": {
       "secureData": {
          "properties": [
              "inputs",
              "outputs"
         ]      
      }
  },
                                                    "type": "Http"
                                                },
                                                "Success_Response_SieSmart_FR": {
                                                    "inputs": {
                                                        "body": "@replace(variables('varAckResponse'),'##RESULT##','1')",
                                                        "headers": {
                                                            "Content-Type": "application/xml"
                                                        },
                                                        "statusCode": 200
                                                    },
                                                    "kind": "Http",
                                                    "runAfter": {
                                                        "HTTP-Call_OBM-SieSmart_FR_endpoint": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Response"
                                                },
                                                "Terminate": {
                                                    "inputs": {
                                                        "runStatus": "Failed"
                                                    },
                                                    "runAfter": {
                                                        "Failed_Response_SieSmart_FR": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Terminate"
                                                }
                                            },
                                            "else": {
                                                "actions": {
                                                    "Response_2": {
                                                        "inputs": {
                                                            "body": "@xml(replace(variables('varAckResponse'),'##RESULT##','1'))",
                                                            "headers": {
                                                                "Content-Type": "application/xml"
                                                            },
                                                            "statusCode": 200
                                                        },
                                                        "kind": "Http",
                                                        "runAfter": {},
                                                        "type": "Response"
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@variables('opportunityOwnerRole')",
                                                            "@string('FS COF FR')"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {},
                                            "type": "If"
                                        }
                                    }
                                },
                                "expression": {
                                    "or": [
                                        {
                                            "equals": [
                                                "@variables('opportunityOwnerRole')",
                                                "@string('FS COF Nordics')"
                                            ]
                                        },
                                        {
                                            "equals": [
                                                "@variables('opportunityOwnerRole')",
                                                "@string('FS COF UK')"
                                            ]
                                        },
                                        {
                                            "equals": [
                                                "@variables('opportunityOwnerRole')",
                                                "@string('FS COF ES')"
                                            ]
                                        },
                                        {
                                            "equals": [
                                                "@variables('opportunityOwnerRole')",
                                                "@string('FS COF IN')"
                                            ]
                                        }
                                    ]
                                },
                                "runAfter": {},
                                "type": "If"
                            }
                        }
                    },
                    "expression": {
                        "and": [
                            {
                                "equals": [
                                    "@variables('opportunityOwnerRole')",
                                    "@string('FS COF RG AM')"
                                ]
                            }
                        ]
                    },
                    "runAfter": {},
                    "type": "If"
                }
            },
            "else": {
                "actions": {
                    "Response": {
                        "inputs": {
                            "body": "@xml(replace(variables('varAckResponse'),'##RESULT##','1'))",
                            "headers": {
                                "Content-Type": "application/xml"
                            },
                            "statusCode": 200
                        },
                        "kind": "Http",
                        "runAfter": {},
                         "runtimeConfiguration": {
       "secureData": {
          "properties": [
              "inputs"
         ]      
      }
  },
                        "type": "Response"
                    }
                }
            },
            "expression": {
                "and": [
                    {
                        "greater": [
                            "@length(variables('opportunityOwnerRole'))",
                            0
                        ]
                    }
                ]
            },
            "runAfter": {
                "GetConfiguration": [
                    "Succeeded"
                ],
                "Initialize_variable-AcKresponse": [
                    "Succeeded"
                ],
                "Initialize_variable-RequestCompose": [
                    "Succeeded"
                ],
                "Initialize_variable-opportunityOwnerRole": [
                    "Succeeded"
                ],
                "log-OpportunityID": [
                    "Succeeded"
                ]
            },
            "type": "If"
        },
        "GetConfiguration": {
            "inputs": {
                "body": {
                    "key": "obm-config"
                },
                "host": {
                    "triggerName": "manual",
                    "workflow": {
                        "id": "${getConfiguration_logicAppId}"
                    }
                },
                "retryPolicy": {
                    "type": "none"
                }
            },
            "runAfter": {},
             "runtimeConfiguration": {
       "secureData": {
          "properties": [
              "inputs",
              "outputs"
         ]      
      }
  },
            "type": "Workflow"
        },
        "Initialize_variable-AcKresponse": {
            "inputs": {
                "variables": [
                    {
                        "name": "varAckResponse",
                        "type": "string",
                        "value": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:out=\"http://soap.sforce.com/2005/09/outbound\">\n<soapenv:Header/>\n<soapenv:Body>\n<out:notificationsResponse>\n<out:Ack>##RESULT##</out:Ack>\n</out:notificationsResponse>\n</soapenv:Body>\n</soapenv:Envelope>"
                    }
                ]
            },
            "runAfter": {},
            "type": "InitializeVariable"
        },
        "Initialize_variable-RequestCompose": {
            "inputs": {
                "variables": [
                    {
                        "name": "varInputRequestEndpoint",
                        "type": "string",
                        "value": "{\n        \"ids\" : [\"@{variables('opportuintyId')}\"]\n}"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable-opportunityId": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable-opportunityId": {
            "inputs": {
                "variables": [
                    {
                        "name": "opportuintyId",
                        "type": "string",
                        "value": "@{xpath(xml(triggerBody()), 'string(/*[local-name()=\"Envelope\"]/*[local-name()=\"Body\"]/*[local-name()=\"notifications\"]/*[local-name()=\"Notification\"]/*[local-name()=\"sObject\"]/*[local-name()=\"Id\"])')}"
                    }
                ]
            },
            "runAfter": {},
            "type": "InitializeVariable"
        },
        "Initialize_variable-opportunityOwnerRole": {
            "inputs": {
                "variables": [
                    {
                        "name": "opportunityOwnerRole",
                        "type": "string",
                        "value": "@{xpath(xml(triggerBody()), 'string(/*[local-name()=\"Envelope\"]/*[local-name()=\"Body\"]/*[local-name()=\"notifications\"]/*[local-name()=\"Notification\"]/*[local-name()=\"sObject\"]/*[local-name()=\"S4SOpportunity_Owner_Role__c\"])')}"
                    }
                ]
            },
            "runAfter": {},
            "type": "InitializeVariable"
        },
        "log-OpportunityID": {
            "inputs": {
                "body": {
                    "message": "Opportunity Id is @{xpath(xml(triggerBody()), 'string(/*[local-name()=\"Envelope\"]/*[local-name()=\"Body\"]/*[local-name()=\"notifications\"]/*[local-name()=\"Notification\"]/*[local-name()=\"sObject\"]/*[local-name()=\"Id\"])')} for OBM SFS Siesamrt Opportunity",
                    "severity": "INFO"
                },
                "host": {
                    "triggerName": "manual",
                    "workflow": {
                        "id": "[parameters('sf4sLog_logicApp_id')]"
                    }
                }
            },
            "runAfter": {},
             "runtimeConfiguration": {
       "secureData": {
          "properties": [
              "inputs",
              "outputs"
         ]      
      }
  },
            "type": "Workflow"
        }
    },
    "contentVersion": "1.0.0.0",
    "outputs": {},
    "parameters": {},
    "triggers": {
        "manual": {
            "inputs": {},
            "kind": "Http",
             "runtimeConfiguration": {
       "secureData": {
          "properties": [
              "inputs",
              "outputs"
         ]      
      }
  },
            "type": "Request"
            
        }
    }
}
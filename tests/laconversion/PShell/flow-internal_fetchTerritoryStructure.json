{
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Initialize_where_clause": {
                "inputs": {
                    "variables": [
                        {
                            "name": "BookingWhere Clause",
                            "type": "string",
                            "value": "@{null}"
                        }
                    ]
                },
                "runAfter": {},
                "type": "InitializeVariable"
            },
            "Initialize_SFDC_ID": {
                "inputs": {
                    "variables": [
                        {
                            "name": "SFDC_ID",
                            "type": "string",
                            "value": "@{triggerBody()?['records']?[0]?['S4STerritory_Structure__c']}"
                        }
                    ]
                },
                "runAfter": {},
                "type": "InitializeVariable"
            },
            "Initialize_SOQLquery_fetchTerritory": {
                "inputs": {
                    "variables": [
                        {
                            "name": "varSQLfetchTerritory",
                            "type": "string",
                            "value": "select Id,OwnerId,IsDeleted,Name,CurrencyIsoCode,CreatedDate,CreatedById,LastModifiedDate,LastModifiedById,SystemModstamp,LastActivityDate,LastViewedDate,LastReferencedDate,S4SActive__c,S4SLead_Country__c,S4SLevel__c,S4SParent_TerritoryPath__c,S4SSale_Country__c,S4SSales_Branch__c,S4SSales_Department__c,S4SSales_District__c,S4SSales_Office__c,S4SSales_SubRegion__c,S4SSales_Territory__c,S4SSiemens_Territory_Structure_LegacyID__c,S4SUnique_ID__c from S4SSiemens_Territory_Structure__c"
                        }
                    ]
                },
                "runAfter": {},
                "type": "InitializeVariable"
            },
            "Scope-Catch": {
                "actions": {
                    "Failed_Response": {
                        "inputs": {
                            "body": {
                                "Message": "@concat('Some error occurred while processing the request. Please find more details using tracking id : ', workflow()['run']['name'])",
                                "Status": "Failure"
                            },
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "statusCode": 500
                        },
                        "kind": "Http",
                        "runAfter": {},
                        "type": "Response"
                    },
                    "Terminate_in_Catch": {
                        "inputs": {
                            "runStatus": "Failed"
                        },
                        "runAfter": {
                            "Failed_Response": [
                                "Succeeded"
                            ]
                        },
                        "type": "Terminate"
                    }
                },
                "runAfter": {
                    "Scope-Try": [
                        "Failed",
                        "Skipped",
                        "TimedOut"
                    ]
                },
                "type": "Scope"
            },
            "Scope-Try": {
                "actions": {
                    "Condition_to_check_SFDC_ID": {
                        "actions": {
                            "Condition_to_check_statusCode": {
                                "actions": {
                                    "Final_Response": {
                                        "inputs": {
                                            "body": "@body('Execute_Booking_Line_SOQL_query')",
                                            "headers": {
                                                "Content-Type": "application/json"
                                            },
                                            "statusCode": 200
                                        },
                                        "kind": "http",
                                        "runAfter": {},
                                        "type": "Response"
                                    }
                                },
                                "else": {
                                    "actions": {
                                        "Error_Response": {
                                            "inputs": {
                                                "body": "@body('Execute_Booking_Line_SOQL_query')?['message']",
                                                "headers": {
                                                    "Content-Type": "application/json"
                                                },
                                                "statusCode": "@outputs('Execute_Booking_Line_SOQL_query')?['statusCode']"
                                            },
                                            "kind": "http",
                                            "runAfter": {},
                                            "type": "Response"
                                        },
                                        "Failure_Terminate": {
                                            "inputs": {
                                                "runStatus": "Failed"
                                            },
                                            "runAfter": {
                                                "Error_Response": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Terminate"
                                        }
                                    }
                                },
                                "expression": {
                                    "and": [
                                        {
                                            "equals": [
                                                "@outputs('Execute_Booking_Line_SOQL_query')?['statusCode']",
                                                200
                                            ]
                                        }
                                    ]
                                },
                                "runAfter": {
                                    "Execute_Booking_Line_SOQL_query": [
                                        "Succeeded",
                                        "Failed"
                                    ]
                                },
                                "type": "If"
                            },
                            "Execute_Booking_Line_SOQL_query": {
                                "inputs": {
                                    "body": {
                                        "query": "@{variables('varSQLfetchTerritory')} where @{variables('BookingWhere Clause')}"
                                    },
                                    "host": {
                                        "connection": {
                                            "name": "@parameters('$connections')['salesForceConnection']['connectionId']"
                                        }
                                    },
                                    "method": "post",
                                    "path": "/soql/executesoqlquery",
                                    "retryPolicy": {
                                        "type": "none"
                                    }
                                },
                                "runAfter": {
                                    "Set_opportunityId_where_clause_append": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "ApiConnection"
                            },
                            "Set_opportunityId_where_clause_append": {
                                "inputs": {
                                    "name": "BookingWhere Clause",
                                    "value": "@{concat('Id =  ',string(''''),variables('SFDC_ID'),string(''''))}"
                                },
                                "runAfter": {},
                                "type": "SetVariable"
                            }
                        },
                        "else": {
                            "actions": {
                                "Empty_Response": {
                                    "inputs": {
                                        "body": {
                                            "response": "Empty SFDC ID provided"
                                        },
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "statusCode": 200
                                    },
                                    "kind": "Http",
                                    "runAfter": {},
                                    "type": "Response"
                                },
                                "Terminate_when_SFDC_ID_DOESNOTEXISTS": {
                                    "inputs": {
                                        "runStatus": "Failed"
                                    },
                                    "runAfter": {
                                        "Empty_Response": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Terminate"
                                }
                            }
                        },
                        "expression": {
                            "and": [
                                {
                                    "not": {
                                        "equals": [
                                            "@variables('SFDC_ID')",
                                            "@null"
                                        ]
                                    }
                                },
                                {
                                    "not": {
                                        "equals": [
                                            "@variables('SFDC_ID')",
                                            "@string('')"
                                        ]
                                    }
                                }
                            ]
                        },
                        "runAfter": {},
                        "type": "If"
                    }
                },
                "runAfter": {
                    "Initialize_where_clause": [
                        "Succeeded"
                    ],
                    "Initialize_SFDC_ID": [
                        "Succeeded"
                    ],
                    "Initialize_SOQLquery_fetchTerritory": [
                        "Succeeded"
                    ]
                },
                "trackedProperties": {
                    "apimRouting": "@{coalesce(triggerOutputs()?['headers']?['apimRouting'], 'external')}",
                    "citizenName": "c00031",
                    "correlationId": "@{coalesce(triggerOutputs()?['headers']?['correlationId'], triggerOutputs()?['headers']?['x-ms-client-tracking-id'], 'not-defined')}",
                    "interfaceName": "@{coalesce(triggerOutputs()?['headers']?['interfaceName'], 'PShell')}",
                    "interfacePartner": "@{coalesce(triggerOutputs()?['headers']?['Username'], 'not-defined')}",
                    "interfaceVersion": "@{coalesce(triggerOutputs()?['headers']?['interfaceVersion'], 'not-defined')}",
                    "operationName": "@{coalesce(triggerOutputs()?['headers']?['operationName'], 'fetchTerritoryStructure')}",
                    "parentWorkflow": "@{coalesce(triggerOutputs()?['headers']?['x-ms-workflow-name'],'not-defined')}"
                },
                "type": "Scope"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "$connections": {
                "defaultValue": {},
                "type": "Object"
            }
        },
        "triggers": {
            "manual": {
                "inputs": {},
                "kind": "Http",
                "type": "Request"
            }
        }
}
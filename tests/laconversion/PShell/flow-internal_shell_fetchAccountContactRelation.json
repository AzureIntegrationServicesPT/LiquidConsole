{
    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
    "actions": {
        "Initialize_variable_'finalResponse'": {
            "inputs": {
                "variables": [
                    {
                        "name": "finalResponse",
                        "type": "string"
                    }
                ]
            },
            "runAfter": {},
            "type": "InitializeVariable"
        },
        "Initialize_variable_'whereClause'": {
            "inputs": {
                "variables": [
                    {
                        "name": "whereClause",
                        "type": "string"
                    }
                ]
            },
            "runAfter": {},
            "type": "InitializeVariable"
        },
        "Scope-Catch": {
            "actions": {
                "Error_Response": {
                    "inputs": {
                        "body": {
                            "Message": "@concat('Some error occurred while processing the request. Please find more details using tracking id : ', workflow()['run']['name'])",
                            "Status": "Failure"
                        },
                        "headers": {
                            "Content-Type": "application/json"
                        },
                        "statusCode": 500
                    },
                    "kind": "Http",
                    "runAfter": {},
                    "type": "Response"
                },
                "Terminate_in_Catch": {
                    "inputs": {
                        "runStatus": "Failed"
                    },
                    "runAfter": {
                        "Error_Response": [
                            "Succeeded"
                        ]
                    },
                    "type": "Terminate"
                }
            },
            "runAfter": {
                "Scope-Try": [
                    "Failed",
                    "Skipped",
                    "TimedOut"
                ]
            },
            "type": "Scope"
        },
        "Scope-Try": {
            "actions": {
                "Compose_to_get_requestBody": {
                    "inputs": "@triggerBody()",
                    "runAfter": {},
                    "type": "Compose"
                },
                "Compose_Response": {
                    "inputs": "@concat('{\"Contact\":[',variables('finalResponse'),']}')",
                    "runAfter": {
                        "For_each_record_in_Query_Result": [
                            "Succeeded"
                        ]
                    },
                    "type": "Compose"
                },
                "Condition_check_for_'accountId'": {
                    "actions": {
                        "Append_to_string_variable-whereClause": {
                            "inputs": {
                                "name": "whereClause",
                                "value": "@concat('AccountId = ',string(''''),outputs('Compose_to_get_requestBody')?['accountId'],string(''''))"
                            },
                            "runAfter": {},
                            "type": "AppendToStringVariable"
                        }
                    },
                    "expression": {
                        "and": [
                            {
                                "not": {
                                    "equals": [
                                        "@outputs('Compose_to_get_requestBody')?['accountId']",
                                        "@null"
                                    ]
                                }
                            },
                            {
                                "not": {
                                    "equals": [
                                        "@outputs('Compose_to_get_requestBody')?['accountId']",
                                        "@string('')"
                                    ]
                                }
                            }
                        ]
                    },
                    "runAfter": {
                        "Compose_to_get_requestBody": [
                            "Succeeded"
                        ]
                    },
                    "type": "If"
                },
                "Condition_to_check_'whereClause'": {
                    "actions": {
                        "Condition_check_for_'contactId'": {
                            "actions": {
                                "Append_to_string_variable_whereClause": {
                                    "inputs": {
                                        "name": "whereClause",
                                        "value": "@concat(' AND ','ContactId = ',string(''''),outputs('Compose_to_get_requestBody')?['contactId'],string(''''))"
                                    },
                                    "runAfter": {},
                                    "type": "AppendToStringVariable"
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "not": {
                                            "equals": [
                                                "@outputs('Compose_to_get_requestBody')?['contactId']",
                                                "@string('')"
                                            ]
                                        }
                                    },
                                    {
                                        "not": {
                                            "equals": [
                                                "@outputs('Compose_to_get_requestBody')?['contactId']",
                                                "@null"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "runAfter": {},
                            "type": "If"
                        }
                    },
                    "else": {
                        "actions": {
                            "Condition_to_check_contactId": {
                                "actions": {
                                    "Set_variable_whereClause": {
                                        "inputs": {
                                            "name": "whereClause",
                                            "value": "@{concat('ContactId = ',string(''''),outputs('Compose_to_get_requestBody')?['contactId'],string(''''))}"
                                        },
                                        "runAfter": {},
                                        "type": "SetVariable"
                                    }
                                },
                                "expression": {
                                    "and": [
                                        {
                                            "not": {
                                                "equals": [
                                                    "@outputs('Compose_to_get_requestBody')?['contactId']",
                                                    "@string('')"
                                                ]
                                            }
                                        },
                                        {
                                            "not": {
                                                "equals": [
                                                    "@outputs('Compose_to_get_requestBody')?['contactId']",
                                                    "@null"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "runAfter": {},
                                "type": "If"
                            }
                        }
                    },
                    "expression": {
                        "and": [
                            {
                                "not": {
                                    "equals": [
                                        "@variables('whereClause')",
                                        "@string('')"
                                    ]
                                }
                            },
                            {
                                "not": {
                                    "equals": [
                                        "@variables('whereClause')",
                                        "@null"
                                    ]
                                }
                            }
                        ]
                    },
                    "runAfter": {
                        "Condition_check_for_'accountId'": [
                            "Succeeded"
                        ]
                    },
                    "type": "If"
                },
                "Execute_a_SOQL_query": {
                    "inputs": {
                        "body": {
                            "query": "select Id,AccountId,ContactId,Roles,IsDirect,IsActive,StartDate,EndDate,CurrencyIsoCode,IsDeleted,CreatedDate,CreatedById,LastModifiedDate,LastModifiedById,SystemModstamp,Relationship_Strength__c,Account.Id,Account.IsDeleted,Account.Name,Account.Type,Account.RecordTypeId,Account.ParentId,Account.BillingStreet,Account.BillingCity,Account.BillingState,Account.BillingPostalCode,Account.BillingCountry,Account.ShippingStreet,Account.ShippingCity,Account.ShippingState,Account.ShippingPostalCode,Account.ShippingCountry,Account.Phone,Account.S4SAccount_Name_International__c,Account.S4SCMD_NAME1__c,Account.S4SCMD_NAME2__c,Account.S4SCMD_NAME3__c,Account.S4SCity_PO_Box_International__c,Account.S4SCity_PO_Box__c,Account.S4SIfA__c,Account.S4SInternational_City__c,Account.S4SInternational_CountryGP__c,Account.S4SInternational_Country__c,Account.S4SInternational_Postal_Code__c,Account.S4SInternational_Steet_Name_2__c,Account.S4SInternational_Street_Name_1__c,Account.S4SNat_Company_ID__c,Account.S4SPO_Box_Postcode__c,Account.S4SPO_box__c,Account.S4STax_ID__c,Account.S4SData_Visibility__c,Contact.Id,Contact.IsDeleted,Contact.AccountId,Contact.LastName,Contact.FirstName,Contact.Salutation,Contact.MiddleName,Contact.Suffix,Contact.Name,Contact.OtherStreet,Contact.OtherCity,Contact.OtherState,Contact.OtherPostalCode,Contact.OtherCountry,Contact.MailingStreet,Contact.MailingCity,Contact.MailingState,Contact.MailingPostalCode,Contact.MailingCountry,Contact.Phone,Contact.Fax,Contact.MobilePhone,Contact.HomePhone,Contact.Email,Contact.Title,Contact.Department,Contact.S4SAcademic_Title__c,Contact.S4SDepartment_Type__c,Contact.S4SGender__c,Contact.S4SInitial__c,Contact.S4SJob_Description__c,Contact.S4SLanguage__c,Contact.S4SNever_Email__c,Contact.S4SNever_Mail__c,Contact.S4SStatus__c,Contact.S4SSFS_Confidential__c,Contact.Owner.Id,Contact.Owner.Name from AccountContactRelation where @{variables('whereClause')}"
                        },
                        "host": {
                            "connection": {
                                "name": "@parameters('$connections')['salesForceConnection']['connectionId']"
                            }
                        },
                        "method": "post",
                        "path": "/soql/executesoqlquery"
                    },
                    "runAfter": {
                        "Condition_to_check_'whereClause'": [
                            "Succeeded"
                        ]
                    },
                    "type": "ApiConnection"
                },
                
                "For_each_record_in_Query_Result": {
                    "actions": {
                        "Compose_Contact_Details": {
                            "inputs": {
                                "AccountId": "@{items('For_each_record_in_Query_Result')?['Contact']?['AccountId']}",
                                "AssistantName": "@{items('For_each_record_in_Query_Result')?['Contact']?['AssistantName']}",
                                "AssistantPhone": "@{items('For_each_record_in_Query_Result')?['Contact']?['AssistantPhone']}",
                                "Birthdate": "@replace(coalesce(items('For_each_record_in_Query_Result')?['Contact']?['Birthdate'],''),'+00:00','.000Z')",
                                "CreatedById": "@{items('For_each_record_in_Query_Result')?['Contact']?['CreatedById']}",
                                "CreatedDate": "@replace(coalesce(items('For_each_record_in_Query_Result')?['Contact']?['CreatedDate'],''),'+00:00','.000Z')",
                                "CurrencyIsoCode": "@{items('For_each_record_in_Query_Result')?['Contact']?['CurrencyIsoCode']}",
                                "DPML__Employee_Number__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['DPML__Employee_Number__c']}",
                                "Department": "@{items('For_each_record_in_Query_Result')?['Contact']?['Department']}",
                                "Description": "@{items('For_each_record_in_Query_Result')?['Contact']?['Description']}",
                                "DoNotCall": "@{items('For_each_record_in_Query_Result')?['Contact']?['DoNotCall']}",
                                "Email": "@{items('For_each_record_in_Query_Result')?['Contact']?['Email']}",
                                "EmailBouncedDate": "@replace(coalesce(items('For_each_record_in_Query_Result')?['Contact']?['EmailBouncedDate'],''),'+00:00','.000Z')",
                                "EmailBouncedReason": "@{items('For_each_record_in_Query_Result')?['Contact']?['EmailBouncedReason']}",
                                "Fax": "@{items('For_each_record_in_Query_Result')?['Contact']?['Fax']}",
                                "FirstName": "@{items('For_each_record_in_Query_Result')?['Contact']?['FirstName']}",
                                "HasOptedOutOfEmail": "@{items('For_each_record_in_Query_Result')?['Contact']?['HasOptedOutOfEmail']}",
                                "HasOptedOutOfFax": "@{items('For_each_record_in_Query_Result')?['Contact']?['HasOptedOutOfFax']}",
                                "HomePhone": "@{items('For_each_record_in_Query_Result')?['Contact']?['HomePhone']}",
                                "Id": "@{items('For_each_record_in_Query_Result')?['Contact']?['Id']}",
                                "IsDeleted": "@{items('For_each_record_in_Query_Result')?['Contact']?['IsDeleted']}",
                                "IsEmailBounced": "@{items('For_each_record_in_Query_Result')?['Contact']?['IsEmailBounced']}",
                                "Jigsaw": "@{items('For_each_record_in_Query_Result')?['Contact']?['Jigsaw']}",
                                "JigsawContactId": "@{items('For_each_record_in_Query_Result')?['Contact']?['JigsawContactId']}",
                                "LastActivityDate": "@replace(coalesce(items('For_each_record_in_Query_Result')?['Contact']?['LastActivityDate'],''),'+00:00','.000Z')",
                                "LastCURequestDate": "@replace(coalesce(items('For_each_record_in_Query_Result')?['Contact']?['LastCURequestDate'],''),'+00:00','.000Z')",
                                "LastCUUpdateDate": "@replace(coalesce(items('For_each_record_in_Query_Result')?['Contact']?['LastCUUpdateDate'],''),'+00:00','.000Z')",
                                "LastModifiedById": "@{items('For_each_record_in_Query_Result')?['Contact']?['LastModifiedById']}",
                                "LastModifiedDate": "@replace(coalesce(items('For_each_record_in_Query_Result')?['Contact']?['LastModifiedDate'],''),'+00:00','.000Z')",
                                "LastName": "@{items('For_each_record_in_Query_Result')?['Contact']?['LastName']}",
                                "LastReferencedDate": "@replace(coalesce(items('For_each_record_in_Query_Result')?['Contact']?['LastReferenceDate'],''),'+00:00','.000Z')",
                                "LastViewedDate": "@replace(coalesce(items('For_each_record_in_Query_Result')?['Contact']?['LastViewedDate'],''),'+00:00','.000Z')",
                                "LeadSource": "@{items('For_each_record_in_Query_Result')?['Contact']?['LeadSource']}",
                                "MailingAddress": "@{items('For_each_record_in_Query_Result')?['Contact']?['MailingAddress']}",
                                "MailingCity": "@{items('For_each_record_in_Query_Result')?['Contact']?['MailingCity']}",
                                "MailingCountry": "@{items('For_each_record_in_Query_Result')?['Contact']?['MailingCountry']}",
                                "MailingCountryCode": "@{items('For_each_record_in_Query_Result')?['Contact']?['MailingCountryCode']}",
                                "MailingGeocodeAccuracy": "@{items('For_each_record_in_Query_Result')?['Contact']?['MailingGeoCodeAccuracy']}",
                                "MailingLatitude": "@{items('For_each_record_in_Query_Result')?['Contact']?['MailingLatitude']}",
                                "MailingLongitude": "@{items('For_each_record_in_Query_Result')?['Contact']?['MailingLongitude']}",
                                "MailingPostalCode": "@{items('For_each_record_in_Query_Result')?['Contact']?['MailingPostalCode']}",
                                "MailingState": "@{items('For_each_record_in_Query_Result')?['Contact']?['MailingState']}",
                                "MailingStateCode": "@{items('For_each_record_in_Query_Result')?['Contact']?['MailingStateCode']}",
                                "MailingStreet": "@{items('For_each_record_in_Query_Result')?['Contact']?['MailingStreet']}",
                                "MasterRecordId": "@{items('For_each_record_in_Query_Result')?['Contact']?['MasterRecordId']}",
                                "MiddleName": "@{items('For_each_record_in_Query_Result')?['Contact']?['MiddleName']}",
                                "MobilePhone": "@{items('For_each_record_in_Query_Result')?['Contact']?['MobilePhone']}",
                                "Name": "@{items('For_each_record_in_Query_Result')?['Contact']?['Name']}",
                                "OtherAddress": "@{items('For_each_record_in_Query_Result')?['Contact']?['OtherAddress']}",
                                "OtherCity": "@{items('For_each_record_in_Query_Result')?['Contact']?['OtherCity']}",
                                "OtherCountry": "@{items('For_each_record_in_Query_Result')?['Contact']?['OtherCountry']}",
                                "OtherCountryCode": "@{items('For_each_record_in_Query_Result')?['Contact']?['OtherCountryCode']}",
                                "OtherGeocodeAccuracy": "@{items('For_each_record_in_Query_Result')?['Contact']?['OtherGeocodeAccuracy']}",
                                "OtherLatitude": "@{items('For_each_record_in_Query_Result')?['Contact']?['OtherLatitude']}",
                                "OtherLongitude": "@{items('For_each_record_in_Query_Result')?['Contact']?['OtherLongitude']}",
                                "OtherPostalCode": "@{items('For_each_record_in_Query_Result')?['Contact']?['OtherPostalCode']}",
                                "OtherState": "@{items('For_each_record_in_Query_Result')?['Contact']?['OtherState']}",
                                "OtherStateCode": "@{items('For_each_record_in_Query_Result')?['Contact']?['OtherStateCode']}",
                                "OtherStreet": "@{items('For_each_record_in_Query_Result')?['Contact']?['OtherStreet']}",
                                "Owner": {
                                    "Id": "@{items('For_each_record_in_Query_Result')?['Contact']?['Owner']?['Id']}",
                                    "Name": "@{items('For_each_record_in_Query_Result')?['Contact']?['Owner']?['Name']}"
                                },
                                "Phone": "@{items('For_each_record_in_Query_Result')?['Contact']?['Phone']}",
                                "PhotoUrl": "@{items('For_each_record_in_Query_Result')?['Contact']?['PhotoUrl']}",
                                "ReportsToId": "@{items('For_each_record_in_Query_Result')?['Contact']?['ReportsToId']}",
                                "S4SAcademic_Title__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SAcademic_Title__c']}",
                                "S4SAccount_Address__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SAccount_Address__c']}",
                                "S4SBranch_Office__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SBranch_Office__c']}",
                                "S4SCONTACT_LegacyID__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SCONTACT_LeagcyID__c']}",
                                "S4SContact_Name__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SContact_Name__c']}",
                                "S4SDepartment_Type__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SDepartment_Type__c']}",
                                "S4SDistrict__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SDistrict__c']}",
                                "S4SDouble_Opt_In_Date__c": "@replace(coalesce(items('For_each_record_in_Query_Result')?['Contact']?['S4SDouble_Opt_In_Date__c'],''),'+00:00','.000Z')",
                                "S4SDouble_Opt_In__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SDouble_Opt_In__c']}",
                                "S4SEmail_Duplicate__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SEmail_Duplicate__c']}",
                                "S4SExcluded_from_Eloqua_Sync__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SExcluded_from_Eloqua_Sync__c']}",
                                "S4SFull_Name__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SFull_Name__c']}",
                                "S4SFurigana_First_Name__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SFurigana_First_Name__c']}",
                                "S4SFurigana_Last_Name__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SFurigana_Last_Name__c']}",
                                "S4SGender__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SGender__c']}",
                                "S4SInitial__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SInitial__c']}",
                                "S4SJob_Description__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SJob_Description__c']}",
                                "S4SJob_Role__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SJob_Role__c']}",
                                "S4SJob_Specification__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SJob_Description__c']}",
                                "S4SLanguage__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SLanguage__c']}",
                                "S4SLead_Source_Type_Eloqua__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SLead_Source_Type_Eloqua__c']}",
                                "S4SLegitimate_Interest__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SLegitimate_Interest__c']}",
                                "S4SManagement_Level__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SManagement_Level__c']}",
                                "S4SMarked_for_Deletion__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SMarked_for_Deletion__c']}",
                                "S4SMarketing_Block_Text__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SMarketing_Block_Text__c']}",
                                "S4SNever_Email__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SNever_Email__c']}",
                                "S4SNever_Mail__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SNever_Mail__c']}",
                                "S4SNever_Survey__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SNever_Survey__c']}",
                                "S4SNo_Marketing__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SNo_Marketing__c']}",
                                "S4SOpt_Out_Date__c": "@replace(coalesce(items('For_each_record_in_Query_Result')?['Contact']?['S4SDouble_Out_Date__c'],''),'+00:00','.000Z')",
                                "S4SOpt_Out__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SOpt_Out__c']}",
                                "S4SPartner_Contact_Role__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SPartner_Contact_Role__c']}",
                                "S4SRestricted_Email_Address__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SRestricted_Email_Address__c']}",
                                "S4SRestricted_Phone__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SRestricted_Phone__c']}",
                                "S4SSFS_Confidential__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SSFS_Confidential__c']}",
                                "S4SSelf_Employed__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SSelf_Employed__c']}",
                                "S4SStatus__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SStatus__c']}",
                                "S4SSubregion__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SSubregion__c']}",
                                "S4SSynced_with_Eloqua__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SSynced_with_Eloqua__c']}",
                                "S4SVisibility__c": "@{items('For_each_record_in_Query_Result')?['Contact']?['S4SVisibilty__c']}",
                                "Salutation": "@{items('For_each_record_in_Query_Result')?['Contact']?['Salutation']}",
                                "Suffix": "@{items('For_each_record_in_Query_Result')?['Contact']?['Suffix']}",
                                "SystemModstamp": "@replace(coalesce(items('For_each_record_in_Query_Result')?['Contact']?['SystemModstamp'],''),'+00:00','.000Z')",
                                "Title": "@{items('For_each_record_in_Query_Result')?['Contact']?['Title']}"
                            },
                            "runAfter": {},
                            "type": "Compose"
                        },
                        "Compose_ForEach_Record": {
                            "inputs": "@if(equals(variables('finalResponse'),''),outputs('Compose_Contact_Details'),concat(variables('finalResponse'),',',outputs('Compose_Contact_Details')))",
                            "runAfter": {
                                "Compose_Contact_Details": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose"
                        },
                        "Set_variable_'finalResponse'": {
                            "inputs": {
                                "name": "finalResponse",
                                "value": "@{outputs('Compose_ForEach_Record')}"
                            },
                            "runAfter": {
                                "Compose_ForEach_Record": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable"
                        }
                    },
                    "foreach": "@body('Execute_a_SOQL_query')['records']",
                    "runAfter": {
                        "Execute_a_SOQL_query": [
                            "Succeeded"
                        ]
                    },
                    "runtimeConfiguration": {
                        "concurrency": {
                            "repetitions": 1
                        }
                    },
                    "type": "Foreach"
                },
                "Final_Response": {
                    "inputs": {
                        "body": "@json(outputs('Compose_Response'))",
                        "statusCode": 200
                    },
                    "kind": "Http",
                    "runAfter": {
                        "Compose_Response": [
                            "Succeeded"
                        ]
                    },
                    "type": "Response"
                }
            },
            "runAfter": {
                "Initialize_variable_'finalResponse'": [
                    "Succeeded"
                ],
                "Initialize_variable_'whereClause'": [
                    "Succeeded"
                ]
            },
            "trackedProperties": {
                "citizenName": "c00031",
                "correlationId": "@{coalesce(triggerOutputs()?['headers']?['correlationId'], triggerOutputs()?['headers']?['x-ms-client-tracking-id'], 'not-defined')}",
                "interfaceName": "@{coalesce(triggerOutputs()?['headers']?['interfaceName'], 'PShell')}",
                "interfacePartner": "@{coalesce(triggerOutputs()?['headers']?['Username'], 'not-defined')}",
                "interfaceVersion": "@{coalesce(triggerOutputs()?['headers']?['interfaceVersion'], 'not-defined')}",
                "operationName": "@{coalesce(triggerOutputs()?['headers']?['operationName'], 'fetchAccountContactRelation')}",
                "apimRouting": "@{coalesce(triggerOutputs()?['headers']?['apimRouting'], 'external')}",
                "parentWorkflow" : "@{coalesce(triggerOutputs()?['headers']?['x-ms-workflow-name'],'not-defined')}"
            },
            "type": "Scope"
        }
    },
    "contentVersion": "1.0.0.0",
    "outputs": {},
    "parameters": {
        "$connections": {
            "defaultValue": {},
            "type": "Object"
        }
    },
    "triggers": {
        "manual": {
            "inputs": {},
            "kind": "Http",
            "type": "Request"
        }
    }
}
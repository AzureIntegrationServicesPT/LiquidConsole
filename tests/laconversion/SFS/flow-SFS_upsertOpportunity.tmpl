{
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Initialize_variable-configSeverity": {
                "inputs": {
                    "variables": [
                        {
                            "name": "configSeverity",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {},
                "type": "InitializeVariable"
            },
            "Initialize_variable-getSession": {
                "inputs": {
                    "variables": [
                        {
                            "name": "getSession",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {},
                "type": "InitializeVariable"
            },
            "Initialize_variable-index": {
                "inputs": {
                    "variables": [
                        {
                            "name": "index",
                            "type": "integer"
                        }
                    ]
                },
                "runAfter": {},
                "type": "InitializeVariable"
            },
            "Initialize_variable-message": {
                "inputs": {
                    "variables": [
                        {
                            "name": "message",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {},
                "type": "InitializeVariable"
            },
            "Initialize_variable-object": {
                "inputs": {
                    "variables": [
                        {
                            "name": "object",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {},
                "type": "InitializeVariable"
            },
            "Initialize_variable-severity": {
                "inputs": {
                    "variables": [
                        {
                            "name": "severity",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {},
                "type": "InitializeVariable"
            },
            "Initialize_variable-userName": {
                "inputs": {
                    "variables": [
                        {
                            "name": "userName",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {},
                "type": "InitializeVariable"
            },
            "Scope-catch-main": {
                "actions": {
                    "Response_Catch_": {
                        "inputs": {
                            "statusCode": 500
                        },
                        "kind": "Http",
                        "runAfter": {},
                        "type": "Response"
                    },
                    "Terminate": {
                        "inputs": {
                            "runStatus": "Failed"
                        },
                        "runAfter": {
                            "Response_Catch_": [
                                "Succeeded"
                            ]
                        },
                        "type": "Terminate"
                    }
                },
                "runAfter": {
                    "Scope-try-main": [
                        "Failed",
                        "Skipped",
                        "TimedOut"
                    ]
                },
                "type": "Scope"
            },
            "Scope-try-main": {
                "actions": {
                    "Condition_username": {
                        "actions": {
                            "Check_-Opportunity": {
                                "actions": {
                                    "Failure_Response_Log": {
                                        "inputs": {
                                            "body": {
                                                "message": "@{body('logic-c00031-SFS_int_userBasedLogic')}",
                                                "severity": "INFO"
                                            },
                                            "headers": {
                                                "interfaceName": "@{coalesce(triggerOutputs()?['headers']?['inerfaceName'], 'not-defined')}",
                                                "username": "@{coalesce(triggerOutputs()?['headers']?['username'], 'not-defined')}",
                                                "workflowRunId": "@{coalesce(triggerOutputs()?['headers']?['workflowRunId'], triggerOutputs()?['headers']?['x-ms-workflow-name'])}"
                                            },
                                            "host": {
                                                "triggerName": "manual",
                                                "workflow": {
                                                    "id": "[parameters('sf4sLog_logicApp_id')]"
                                                }
                                            }
                                        },
                                        "runAfter": {
                                            "Response_3": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Workflow"
                                    },
                                    "JsonRemoveNullOrEmptyFunc": {
                                        "inputs": {
                                            "body": {
                                                "CorrelationId": "@{triggerOutputs()['headers']?['correlationid']}",
                                                "InputRequestBase64": "@{base64(body('logic-c00031-SFS_int_userBasedLogic')?['Opportunity'])}",
                                                "InterfaceName": "internal_insert_update_opportunity",
                                                "Username": "@{coalesce(triggerOutputs()?['headers']?['username'], triggerOutputs()?['queries']?['username'])}",
                                                "operation": "JsonRemoveNullOrEmpty"
                                            },
                        					"authentication": {
												"type": "Raw",
												"value": "[parameters('functionAppKey')]"
											},
											"function": {
                                                "id": "[concat(parameters('funcApp'), '/functions/JsonRemoveNullOrEmptyFunc')]"
                                            }
                                        },
                                        "runAfter": {
                                            "logic-c00031-SFS_int_userBasedLogic": [
                                                "Succeeded"
                                            ]
                                        },
                                         "runtimeConfiguration": {
       "secureData": {
          "properties": [
              "inputs",
              "outputs"
         ]      
      }
  },
                                        "type": "Function"
                                    },
                                    "Response": {
                                        "inputs": {
                                            "body": {
                                                "SIE_SF4S_upsertOppObjectsRes": "@body('logic-c00031-SFS_internal_upsertOppObjects')?['SIE_SF4S_upsertOppObjectsRes']"
                                            },
                                            "statusCode": 200
                                        },
                                        "kind": "Http",
                                        "runAfter": {
                                            "logic-c00031-SFS_internal_upsertOppObjects": [
                                                "Succeeded",
                                                "Failed"
                                            ]
                                        },
                                           "runtimeConfiguration": {
       "secureData": {
          "properties": [
              "inputs"
         ]      
      }
  },
                                        "type": "Response"
                                    },
                                    "Response_3": {
                                        "inputs": {
                                            "body": "@body('logic-c00031-SFS_int_userBasedLogic')",
                                            "statusCode": "@outputs('logic-c00031-SFS_int_userBasedLogic')?['statusCode']"
                                        },
                                        "kind": "Http",
                                        "runAfter": {
                                            "logic-c00031-SFS_int_userBasedLogic": [
                                               "Failed"
                                            ]
                                        },
                                          "runtimeConfiguration": {
       "secureData": {
          "properties": [
              "inputs"
         ]      
      }
  },
                                        "type": "Response"
                                    },
                                    "Set_variable_username": {
                                        "inputs": {
                                            "name": "userName",
                                            "value": "@{coalesce(triggerOutputs()?['headers']?['username'], triggerOutputs()?['queries']?['username'])}"
                                        },
                                        "runAfter": {},
                                        "type": "SetVariable"
                                    },
                                    "SubLogic-sf4sLog": {
                                        "inputs": {
                                            "body": {
                                                "message": "Request:@{base64(triggerBody())}",
                                                "severity": "DEBUG"
                                            },
                                            "headers": {
                                                "interfaceName": "@{coalesce(triggerOutputs()?['headers']?['inerfaceName'], 'UpsertOpportunity')}",
                                                "username": "@{coalesce(triggerOutputs()?['headers']?['username'], triggerOutputs()?['queries']?['username'])}",
                                                "workflowRunId": "@{workflow()?['run']?['name']}"
                                            },
                                            "host": {
                                                "triggerName": "manual",
                                                "workflow": {
                                                "id": "[parameters('sf4sLog_logicApp_id')]"
                                            
                                    }
                                            },
                                            "retryPolicy": {
                                                "type": "none"
                                            }
                                        },
                                        "runAfter": {},
                                         "runtimeConfiguration": {
       "secureData": {
          "properties": [
              "inputs",
              "outputs"
         ]      
      }
  },
                                        "type": "Workflow"
                                    },
                                    "SubLogic-sf4sLog2": {
                                        "inputs": {
                                            "body": {
                                                "message": "@{concat('Map Upsert Opportunity for ',variables('userName'),'with External Source:',triggerBody()?['Opportunity']?['S4SExternal_Source__c'])}",
                                                "severity": "INFO"
                                            },
                                            "headers": {
                                                "interfaceName": "@{coalesce(triggerOutputs()?['headers']?['inerfaceName'], 'UpsertOpportunity')}",
                                                "username": "@{coalesce(triggerOutputs()?['headers']?['username'], triggerOutputs()?['queries']?['username'])}",
                                                "workflowRunId": "@{workflow()?['run']?['name']}"
                                            },
                                            "host": {
                                                "triggerName": "manual",
                                                "workflow": {
                                                 "id": "[parameters('sf4sLog_logicApp_id')]"
                                                }
                                            },
                                            "retryPolicy": {
                                                "type": "none"
                                            }
                                        },
                                        "runAfter": {
                                            "SubLogic-sf4sLog": [
                                                "Succeeded"
                                            ]
                                        },
                                         "runtimeConfiguration": {
       "secureData": {
          "properties": [
              "inputs",
              "outputs"
         ]      
      }
  },                            
                                        "type": "Workflow"
                                    },
                                    "logic-c00031-SFS_internal_upsertOppObjects": {
                                        "inputs": {
                                            "body": "@outputs('_Compose_Opp_request')",
                                            "headers": {
                                                "interfaceName": "@{coalesce(triggerOutputs()?['headers']?['inerfaceName'], 'UpsertOpportunity')}",
                                                "username": "@{coalesce(triggerOutputs()?['headers']?['username'], triggerOutputs()?['queries']?['username'])}",
                                                "workflowRunId": "@{coalesce(triggerOutputs()?['headers']?['workflowRunId'], workflow()?['run']?['name'])}"
                                            },
                                            "host": {
                                                "triggerName": "manual",
                                                "workflow": {
                                                    "id": "[parameters('upsertOppObjects_logicApp_id')]"
                                                }
                                            },
                                            "retryPolicy": {
                                                "type": "none"
                                            }
                                        },
                                        "runAfter": {
                                            "_Compose_Opp_request": [
                                                "Succeeded"
                                            ]
                                        },
                                         "runtimeConfiguration": {
       "secureData": {
          "properties": [
              "inputs",
              "outputs"
         ]      
      }
  },
                                        "type": "Workflow"
                                    },
                                    "logic-c00031-SFS_int_userBasedLogic": {
                                        "inputs": {
                                            "body": {
                                                "interface": "@{triggerBody()?['Opportunity']?['S4SExternal_Source__c']}",
                                                "opportunity": "@{triggerBody()?['Opportunity']}",
                                                "userName": "@variables('userName')"
                                            },
                                            "headers": {
                                                "interfaceName": "@{coalesce(triggerOutputs()?['headers']?['inerfaceName'], 'UpsertOpportunity')}",
                                                "username": "@{coalesce(triggerOutputs()?['headers']?['username'], triggerOutputs()?['queries']?['username'])}",
                                                "workflowRunId": "@{coalesce(triggerOutputs()?['headers']?['workflowRunId'], workflow()?['run']?['name'])}",
                                                "defaultOwner": "@{coalesce(if(equals(variables('UserName'),string('SF4S_LOS_API_USER_IC')),triggerOutputs()?['headers']?['defaultOwner'],triggerBody()?['defaultOwner']),string(''))}"
                                            },
                                            "host": {
                                                "triggerName": "manual",
                                                "workflow": {
                                                     "id": "[parameters('userBasedLogic_logicApp_id')]"
                                                }
                                            },
                                            "retryPolicy": {
                                                "type": "none"
                                            }
                                        },
                                        "runAfter": {
                                            "Set_variable_username": [
                                                "Succeeded"
                                            ]
                                        },
                                         "runtimeConfiguration": {
       "secureData": {
          "properties": [
              "inputs",
              "outputs"
         ]      
      }
  },
                                        "type": "Workflow"
                                    },
                                    "Success_Response_Log_": {
                                        "inputs": {
                                            "body": {
                                                "message": "Final Response:@{base64(body('logic-c00031-SFS_internal_upsertOppObjects')?['SIE_SF4S_upsertOppObjectsRes'])}",
                                                "severity": "INFO"
                                            },
                                            "headers": {
                                                "interfaceName": "@{coalesce(triggerOutputs()?['headers']?['inerfaceName'], 'not-defined')}",
                                                "username": "@{coalesce(triggerOutputs()?['headers']?['username'], 'not-defined')}",
                                                "workflowRunId": "@{coalesce(triggerOutputs()?['headers']?['workflowRunId'], triggerOutputs()?['headers']?['x-ms-workflow-name'])}"
                                            },
                                            "host": {
                                                "triggerName": "manual",
                                                "workflow": {
                                                    "id": "[parameters('sf4sLog_logicApp_id')]"
                                                }
                                            }
                                        },
                                        "runAfter": {
                                            "Response": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Workflow"
                                    },
                                    "Terminate_Failed": {
                                        "inputs": {
                                            "runStatus": "Failed"
                                        },
                                        "runAfter": {
                                            "Failure_Response_Log": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Terminate"
                                    },
                                    "_Compose_Opp_request": {
                                        "inputs": {
                                            "Opportunity": "@json(body('JsonRemoveNullOrEmptyFunc')?['result']?['restructuredJson'])"
                                        },
                                        "runAfter": {
                                            "JsonRemoveNullOrEmptyFunc": [
                                                "Succeeded"
                                            ]
                                        },
                                         "runtimeConfiguration": {
       "secureData": {
          "properties": [
              "inputs"
         ]      
      }
  },
                                        "type": "Compose"
                                    }
                                },
                                "else": {
                                    "actions": {
                                        "Response_Log_Empty": {
                                            "inputs": {
                                                "body": {
                                                    "message": "Empty input",
                                                    "severity": "INFO"
                                                },
                                                "headers": {
                                                    "interfaceName": "@{coalesce(triggerOutputs()?['headers']?['inerfaceName'], 'not-defined')}",
                                                    "username": "@{coalesce(triggerOutputs()?['headers']?['username'], 'not-defined')}",
                                                    "workflowRunId": "@{coalesce(triggerOutputs()?['headers']?['workflowRunId'], triggerOutputs()?['headers']?['x-ms-workflow-name'])}"
                                                },
                                                "host": {
                                                    "triggerName": "manual",
                                                    "workflow": {
                                                        "id": "[parameters('sf4sLog_logicApp_id')]"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Response_emptyInput": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Workflow"
                                        },
                                        "Response_emptyInput": {
                                            "inputs": {
                                                "body": "Empty input",
                                                "statusCode": 400
                                            },
                                            "kind": "Http",
                                            "runAfter": {},
                                             "runtimeConfiguration": {
       "secureData": {
          "properties": [
              "inputs"
         ]      
      }
  },
                                            "type": "Response"
                                        },
                                        "Terminate_empty_failed": {
                                            "inputs": {
                                                "runStatus": "Failed"
                                            },
                                            "runAfter": {
                                                "Response_Log_Empty": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Terminate"
                                        }
                                    }
                                },
                                "expression": {
                                    "and": [
                                        {
                                            "not": {
                                                "equals": [
                                                    "@triggerBody()?['Opportunity']",
                                                    "@null"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "runAfter": {},
                                "type": "If"
                            }
                        },
                        "else": {
                            "actions": {
                                "Response_2": {
                                    "inputs": {
                                        "body": "Please set username value in header",
                                        "statusCode": 400
                                    },
                                    "kind": "Http",
                                    "runAfter": {},
                                     "runtimeConfiguration": {
       "secureData": {
          "properties": [
              "inputs"
         ]      
      }
  },
                                    "type": "Response"
                                },
                                "Response_Log_UserName": {
                                    "inputs": {
                                        "body": {
                                            "message": "Please set username value in header",
                                            "severity": "INFO"
                                        },
                                        "headers": {
                                            "interfaceName": "@{coalesce(triggerOutputs()?['headers']?['inerfaceName'], 'not-defined')}",
                                            "username": "@{coalesce(triggerOutputs()?['headers']?['username'], 'not-defined')}",
                                            "workflowRunId": "@{coalesce(triggerOutputs()?['headers']?['workflowRunId'], triggerOutputs()?['headers']?['x-ms-workflow-name'])}"
                                        },
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[parameters('sf4sLog_logicApp_id')]"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Response_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Workflow"
                                },
                                "Terminate_Failed_Log_Username": {
                                    "inputs": {
                                        "runStatus": "Failed"
                                    },
                                    "runAfter": {
                                        "Response_Log_UserName": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Terminate"
                                }
                            }
                        },
                        "expression": {
                            "and": [
                                {
                                    "not": {
                                        "equals": [
                                            "@ triggerOutputs()?['headers']?['username']",
                                            "@string('')"
                                        ]
                                    }
                                },
                                {
                                    "not": {
                                        "equals": [
                                            "@ triggerOutputs()?['headers']?['username']",
                                            "@null"
                                        ]
                                    }
                                }
                            ]
                        },
                        "runAfter": {},
                        "type": "If"
                    }
                },
                "runAfter": {
                    "Initialize_variable-configSeverity": [
                        "Succeeded"
                    ],
                    "Initialize_variable-getSession": [
                        "Succeeded"
                    ],
                    "Initialize_variable-index": [
                        "Succeeded"
                    ],
                    "Initialize_variable-message": [
                        "Succeeded"
                    ],
                    "Initialize_variable-object": [
                        "Succeeded"
                    ],
                    "Initialize_variable-severity": [
                        "Succeeded"
                    ],
                    "Initialize_variable-userName": [
                        "Succeeded"
                    ],
                "logic-c00031-SFS_internal_sf4sLog-weu-dev": [
                    "Succeeded"
                ]
                },
                "trackedProperties": {
                    "apimRouting": "not-defined",
                    "citizenName": "c00031",
                    "correlationId": "not-defined",
                    "interfaceName": "SFS",
                    "interfacePartner": "not-defined",
                    "interfaceVersion": "not-defined",
                    "operationName": "upsertOpportunity",
                    "parentWorkflow": "not-defined"
                },
                "type": "Scope"
           },
        "logic-c00031-SFS_internal_sf4sLog-weu-dev": {
            "inputs": {
                "body": {
                    "message": "Logic app name is 'Logic-c00031-SFS_UpsertOpportunity'",
                    "severity": "INFO"
                },
                "headers": {
                    "interfaceName": "@{coalesce(triggerOutputs()?['headers']?['inerfaceName'], 'UpsertOpportunity')}",
                    "username": "@{coalesce(triggerOutputs()?['headers']?['username'], triggerOutputs()?['queries']?['username'])}",
                    "workflowRunId": "@{workflow()?['run']?['name']}"
                },
                "host": {
                    "triggerName": "manual",
                    "workflow": {
                        "id": "[parameters('sf4sLog_logicApp_id')]"
                    }
                }
            },
            "runAfter": {},
            "type": "Workflow"
        }
    },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {},
        "triggers": {
            "manual": {
                "inputs": {},
                "kind": "Http",
                 "runtimeConfiguration": {
       "secureData": {
          "properties": [
              "inputs",
              "outputs"
         ]      
      }
  },
                "type": "Request"
            }
        }
    }
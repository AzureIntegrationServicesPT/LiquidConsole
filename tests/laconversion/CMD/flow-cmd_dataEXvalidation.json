{
  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
  "actions": {
    "Initialize_variable_COUNTRY": {
      "inputs": {
        "variables": [
          {
            "name": "COUNTRY",
            "type": "String",
            "value": "@{triggerBody()?['COUNTRY']}"
          }
        ]
      },
      "runAfter": {},
      "type": "InitializeVariable"
    },
    "Initialize_variable_NAME1": {
      "inputs": {
        "variables": [
          {
            "name": "NAME1",
            "type": "String",
            "value": "@{triggerBody()?['NAME1']}"
          }
        ]
      },
      "runAfter": {},
      "type": "InitializeVariable"
    },
    "Initialize_variable_NAME1_I": {
      "inputs": {
        "variables": [
          {
            "name": "NAME1_I",
            "type": "String",
            "value": "@{triggerBody()?['NAME1_I']}"
          }
        ]
      },
      "runAfter": {},
      "type": "InitializeVariable"
    },
    "Initialize_variable_NAME2": {
      "inputs": {
        "variables": [
          {
            "name": "NAME2",
            "type": "String",
            "value": "@{triggerBody()?['NAME2']}"
          }
        ]
      },
      "runAfter": {},
      "type": "InitializeVariable"
    },
    "Initialize_variable_NAME2_I": {
      "inputs": {
        "variables": [
          {
            "name": "NAME2_I",
            "type": "String",
            "value": "@{triggerBody()?['NAME2_I']}"
          }
        ]
      },
      "runAfter": {},
      "type": "InitializeVariable"
    },
    "Initialize_variable_NAME3": {
      "inputs": {
        "variables": [
          {
            "name": "NAME3",
            "type": "String",
            "value": "@{triggerBody()?['NAME3']}"
          }
        ]
      },
      "runAfter": {},
      "type": "InitializeVariable"
    },
    "Initialize_variable_NAME3_I": {
      "inputs": {
        "variables": [
          {
            "name": "NAME3_I",
            "type": "String",
            "value": "@{triggerBody()?['NAME3_I']}"
          }
        ]
      },
      "runAfter": {},
      "type": "InitializeVariable"
    },
    "Initialize_variable_Name_Concat": {
      "inputs": {
        "variables": [
          {
            "name": "Name_Concat",
            "type": "String"
          }
        ]
      },
      "runAfter": {},
      "type": "InitializeVariable"
    },
    "Initialize_variable_Name_Inter_Concat": {
      "inputs": {
        "variables": [
          {
            "name": "Name_Inter_Concat",
            "type": "String"
          }
        ]
      },
      "runAfter": {},
      "type": "InitializeVariable"
    },
    "Initialize_variable_STREET": {
      "inputs": {
        "variables": [
          {
            "name": "STREET",
            "type": "String",
            "value": "@{triggerBody()?['STREET']}"
          }
        ]
      },
      "runAfter": {},
      "type": "InitializeVariable"
    },
    "Initialize_variable_STREET_2": {
      "inputs": {
        "variables": [
          {
            "name": "STREET_2",
            "type": "String",
            "value": "@{triggerBody()?['STREET_2']}"
          }
        ]
      },
      "runAfter": {},
      "type": "InitializeVariable"
    },
    "Initialize_variable_Street_Concat": {
      "inputs": {
        "variables": [
          {
            "name": "Street_Concat",
            "type": "String"
          }
        ]
      },
      "runAfter": {},
      "type": "InitializeVariable"
    },
    "Initialize_variable_concat": {
      "inputs": {
        "variables": [
          {
            "name": "concat",
            "type": "String"
          }
        ]
      },
      "runAfter": {},
      "type": "InitializeVariable"
    },
    "Scope_-_Catch": {
      "actions": {
        "Failed_Response": {
          "inputs": {
            "statusCode": 500
          },
          "kind": "Http",
          "runAfter": {},
          "type": "Response"
        },
        "Terminate": {
          "inputs": {
            "runError": {
              "code": "500",
              "message": ""
            },
            "runStatus": "Failed"
          },
          "runAfter": {
            "Failed_Response": ["Succeeded"]
          },
          "type": "Terminate"
        }
      },
      "runAfter": {
        "Scope_-_Try": ["Failed", "Skipped"]
      },
      "type": "Scope"
    },
    "Scope_-_Try": {
      "actions": {
        "Compose_output_Response": {
          "inputs": {
            "Name_Concat": "@{variables('Name_Concat')}",
            "Name_Inter_Concat": "@{variables('Name_Inter_Concat')}",
            "Street_Concat": "@{variables('Street_Concat')}"
          },
          "runAfter": {
            "Condition_Check_for_STREET2": ["Succeeded"]
          },
          "type": "Compose"
        },
        "Condition_Check_for_Country": {
          "actions": {
            "Set_variable_Name_Concat_CN": {
              "inputs": {
                "name": "Name_Concat",
                "value": "@{concat(variables('NAME1'),variables('NAME2'),variables('NAME3'))}"
              },
              "runAfter": {},
              "type": "SetVariable"
            }
          },
          "else": {
            "actions": {
              "Second_Condition_Check_for_NAME3_": {
                "actions": {
                  "Set_variable_Second_Name_Concat3": {
                    "inputs": {
                      "name": "Name_Concat",
                      "value": "@{concat(variables('NAME1'), ' ', variables('NAME2'), ' ', variables('NAME3'))}"
                    },
                    "runAfter": {},
                    "type": "SetVariable"
                  }
                },
                "else": {
                  "actions": {
                    "Second_Condition_Check_for_NAME2": {
                      "actions": {
                        "Set_variable_Second_Name_Concat2": {
                          "inputs": {
                            "name": "Name_Concat",
                            "value": "@{concat(variables('NAME1'), ' ', variables('NAME2'))}"
                          },
                          "runAfter": {},
                          "type": "SetVariable"
                        }
                      },
                      "else": {
                        "actions": {
                          "Set_variable_Second_Name_Concat1": {
                            "inputs": {
                              "name": "Name_Concat",
                              "value": "@variables('NAME1')"
                            },
                            "runAfter": {},
                            "type": "SetVariable"
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": ["@variables('NAME2')", ""]
                            }
                          },
                          {
                            "not": {
                              "equals": ["@variables('NAME2')", "@null"]
                            }
                          }
                        ]
                      },
                      "runAfter": {},
                      "type": "If"
                    }
                  }
                },
                "expression": {
                  "and": [
                    {
                      "not": {
                        "equals": ["@variables('NAME3')", ""]
                      }
                    },
                    {
                      "not": {
                        "equals": ["@variables('NAME3')", "@null"]
                      }
                    }
                  ]
                },
                "runAfter": {},
                "type": "If"
              }
            }
          },
          "expression": {
            "and": [
              {
                "equals": ["@variables('COUNTRY')", "@string('CN')"]
              }
            ]
          },
          "runAfter": {},
          "type": "If"
        },
        "Condition_Check_for_NAME3_I": {
          "actions": {
            "Set_variable_Name_Inter_Concat": {
              "inputs": {
                "name": "Name_Inter_Concat",
                "value": "@{concat(variables('NAME1_I'), ' ', variables('NAME2_I'), ' ', variables('NAME3_I'))}"
              },
              "runAfter": {},
              "type": "SetVariable"
            }
          },
          "else": {
            "actions": {
              "Condition_Check_for_NAME2_I": {
                "actions": {
                  "Set_variable_Name_Inter_Concat2": {
                    "inputs": {
                      "name": "Name_Inter_Concat",
                      "value": "@{concat(variables('NAME1_I'), ' ', variables('NAME2_I'))}"
                    },
                    "runAfter": {},
                    "type": "SetVariable"
                  }
                },
                "else": {
                  "actions": {
                    "Condition_Check_for_NAME1_I": {
                      "actions": {
                        "Set_variable_Name_Inter_Concat1": {
                          "inputs": {
                            "name": "Name_Inter_Concat",
                            "value": "@variables('NAME1_I')"
                          },
                          "runAfter": {},
                          "type": "SetVariable"
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": ["@variables('NAME1_I')", ""]
                            }
                          },
                          {
                            "not": {
                              "equals": ["@variables('NAME1_I')", "@null"]
                            }
                          }
                        ]
                      },
                      "runAfter": {},
                      "type": "If"
                    }
                  }
                },
                "expression": {
                  "and": [
                    {
                      "not": {
                        "equals": ["@variables('NAME2_I')", ""]
                      }
                    },
                    {
                      "not": {
                        "equals": ["@variables('NAME2_I')", "@null"]
                      }
                    }
                  ]
                },
                "runAfter": {},
                "type": "If"
              }
            }
          },
          "expression": {
            "and": [
              {
                "not": {
                  "equals": ["@variables('NAME3_I')", ""]
                }
              },
              {
                "not": {
                  "equals": ["@variables('NAME3_I')", "@null"]
                }
              }
            ]
          },
          "runAfter": {
            "Condition_Check_for_Country": ["Succeeded"]
          },
          "type": "If"
        },
        "Condition_Check_for_STREET2": {
          "actions": {
            "Set_variable_Street_Concat2": {
              "inputs": {
                "name": "Street_Concat",
                "value": "@{concat(variables('STREET'), ' ', variables('STREET_2'))}"
              },
              "runAfter": {},
              "type": "SetVariable"
            }
          },
          "else": {
            "actions": {
              "Set_variable_Street_Concat": {
                "inputs": {
                  "name": "Street_Concat",
                  "value": "@variables('STREET')"
                },
                "runAfter": {},
                "type": "SetVariable"
              }
            }
          },
          "expression": {
            "and": [
              {
                "not": {
                  "equals": ["@variables('STREET_2')", ""]
                }
              },
              {
                "not": {
                  "equals": ["@variables('STREET_2')", "@null"]
                }
              }
            ]
          },
          "runAfter": {
            "Condition_Check_for_NAME3_I": ["Succeeded"]
          },
          "type": "If"
        },
        "Success_Response": {
          "inputs": {
            "body": "@outputs('Compose_output_Response')",
            "statusCode": 200
          },
          "kind": "Http",
          "runAfter": {
            "Compose_output_Response": ["Succeeded"]
          },
          "type": "Response"
        }
      },
      "runAfter": {
        "Initialize_variable_COUNTRY": ["Succeeded"],
        "Initialize_variable_NAME1": ["Succeeded"],
        "Initialize_variable_NAME1_I": ["Succeeded"],
        "Initialize_variable_NAME2": ["Succeeded"],
        "Initialize_variable_NAME2_I": ["Succeeded"],
        "Initialize_variable_NAME3": ["Succeeded"],
        "Initialize_variable_NAME3_I": ["Succeeded"],
        "Initialize_variable_Name_Concat": ["Succeeded"],
        "Initialize_variable_Name_Inter_Concat": ["Succeeded"],
        "Initialize_variable_STREET": ["Succeeded"],
        "Initialize_variable_STREET_2": ["Succeeded"],
        "Initialize_variable_Street_Concat": ["Succeeded"],
        "Initialize_variable_concat": ["Succeeded"]
      },
      "trackedProperties": {
        "apimRouting": "@{coalesce(triggerOutputs()?['headers']?['apimRouting'], 'external')}",
        "citizenName": "c00031",
        "correlationId": "@{coalesce(triggerOutputs()?['headers']?['correlationId'], triggerOutputs()?['headers']?['x-ms-client-tracking-id'], 'not-defined')}",
        "interfaceName": "@{coalesce(triggerOutputs()?['headers']?['interfaceName'], 'CMD')}",
        "interfacePartner": "@{coalesce(triggerOutputs()?['headers']?['Username'], 'CMD')}",
        "interfaceVersion": "@{coalesce(triggerOutputs()?['headers']?['interfaceVersion'], 'not-defined')}",
        "operationName": "@{coalesce(triggerOutputs()?['headers']?['operationName'], 'dataEXvalidation')}",
        "parentWorkflow": "@{coalesce(triggerOutputs()?['headers']?['x-ms-workflow-name'],'not-defined')}",
        "clientCertificateThumbprint": "@{coalesce(triggerOutputs()?['headers']?['client-certificate-thumbprint'],'not-defined')}",
        "clientIPAddress": "@{coalesce(triggerOutputs()?['headers']?['client-ip-address'],'not-defined')}"
      },
      "type": "Scope"
    }
  },
  "contentVersion": "1.0.0.0",
  "outputs": {},
  "parameters": {},
  "triggers": {
    "manual": {
      "inputs": {
        "method": "POST",
        "schema": {
          "properties": {
            "COUNTRY": {
              "type": "string"
            },
            "NAME1": {
              "type": "string"
            },
            "NAME1_I": {
              "type": "string"
            },
            "NAME2": {
              "type": "string"
            },
            "NAME2_I": {
              "type": "string"
            },
            "NAME3": {
              "type": "string"
            },
            "NAME3_I": {
              "type": "string"
            },
            "STREET": {
              "type": "string"
            },
            "STREET_2": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "kind": "Http",
      "type": "Request"
    }
  }
}

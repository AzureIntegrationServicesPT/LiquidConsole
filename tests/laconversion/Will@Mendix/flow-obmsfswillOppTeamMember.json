{    
    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
    "actions": {
        "GetConfiguration": {
            "inputs": {
                "body": {
                    "key": "obm-config"
                },
                "host": {
                    "triggerName": "manual",
                    "workflow": {
                        "id": "${getConfiguration_logicAppId}"
                    }
                },
                "retryPolicy": {
                    "type": "none"
                }
            },
            "runAfter": {},
            ${secureDataIPOP}
            "type": "Workflow"
        },
            "Scope-CatchExternalWillMendixService": {
                "actions": {
                    "Response": {
                        "inputs": {
                            "body": "<soapenv:Envelope \nxmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" \nxmlns:out=\"http://soap.sforce.com/2005/09/outbound\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <out:notificationsResponse>\n         <out:Ack>false</out:Ack>\n      </out:notificationsResponse>\n   </soapenv:Body>\n</soapenv:Envelope>",
                            "headers": {
                                "Content-Type": "text/xml"
                            },
                            "statusCode": 500
                        },
                        "kind": "Http",
                        "runAfter": {},
                        ${secureDataIP}
                        "type": "Response"
                    },
                    "Terminate-Catch-Response": {
                        "inputs": {
                            "runStatus": "Failed"
                        },
                        "runAfter": {
                            "Response": [
                                "Succeeded"
                            ]
                        },
                        "type": "Terminate"
                    }
                },
                "runAfter": {
                    "Scope-TryExternalWillMendixService": [
                        "Failed",
                        "Skipped",
                        "TimedOut"
                    ]
                },
                "type": "Scope"
            },
            "Scope-TryExternalWillMendixService": {
                "actions": {
                    "For_each_notification": {
                        "actions": {
                            "HTTP-ExternalWillMendixService": {
                                "inputs": {
                                    "authentication": {
                                        "password": "@json(body('GetConfiguration'))?['WillMendix']?['password']",
                                        "type": "Basic",
                                        "username": "@json(body('GetConfiguration'))?['WillMendix']?['username']"
                                    },
                                    "body": {
                                        "OpportunityId": "@{trim(xpath(xml(items('For_each_notification')), 'string(/*[local-name()=\"Notification\"]/*[local-name()=\"sObject\"]/*[local-name()=\"OpportunityId\"])'))}"
                                    },
                                    "headers": {
                                        "Accept": "application/json",
                                        "Content-Type": "application/json",
                                        "key": "@{json(body('GetConfiguration'))?['WillMendix']?['key']}"
                                    },
                                    "method": "POST",
                                    "retryPolicy": {
                                        "type": "none"
                                    },
                                    "uri": "@{json(body('GetConfiguration'))?['WillMendix']?['Url']}"
                                },
                                "runAfter": {},
                                ${secureDataIPOP}
                                "type": "Http"
                            }
                        },
                        "foreach": "@xpath(xml(triggerBody()), '/*[local-name()=\"Envelope\"]/*[local-name()=\"Body\"]/*[local-name()=\"notifications\"]/*[local-name()=\"Notification\"]')",
                        "runAfter": {},
                        "type": "Foreach"
                    },
                    "SuccessResponse": {
                        "inputs": {
                            "body": "<soapenv:Envelope \nxmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" \nxmlns:out=\"http://soap.sforce.com/2005/09/outbound\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <out:notificationsResponse>\n         <out:Ack>true</out:Ack>\n      </out:notificationsResponse>\n   </soapenv:Body>\n</soapenv:Envelope>",
                            "headers": {
                                "Content-Type": "text/xml"
                            },
                            "statusCode": 200
                        },
                        "kind": "Http",
                        "runAfter": {
                            "For_each_notification": [
                                "Succeeded"
                            ]
                        },
                        "type": "Response"
                    }
                },
                "runAfter": {
                    "GetConfiguration": [
                        "Succeeded"
                    ],
                    "log-OpportunityID": [
                        "Succeeded"
                    ]
                },
                "trackedProperties": {
                    "apimRouting": "external",
                    "citizenName": "c00031",
                    "correlationId": "not-defined",
                    "interfaceName": "SFS",
                    "interfacePartner": "not-defined",
                    "interfaceVersion": "not-defined",
                    "operationName": "Will_oppTeamMember",
                    "parentWorkflow": "not-defined"
                },
                "type": "Scope"
            },
            "log-OpportunityID": {
                "inputs": {
                    "body": {
                        "message": "Opportunity Id is @{trim(xpath(xml(triggerBody()),'string(/*[local-name()=\"Envelope\"]/*[local-name()=\"Body\"]/*[local-name()=\"notifications\"]/*[local-name()=\"Notification\"]/*[local-name()=\"sObject\"]/*[local-name()=\"OpportunityId\"])'))} OBM SFS Will OppTeamMember",
                        "severity": "INFO"
                    },
                    "host": {
                        "triggerName": "manual",
                        "workflow": {
                            "id": "[parameters('sf4sLog_logicApp_id')]"
                        }
                    }
                },
                "runAfter": {},
                ${secureDataIPOP}
                "type": "Workflow"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {},
        "triggers": {
            "manual": {
                "inputs": {
                    "schema": {}
                },
                "kind": "Http",
            ${secureDataIPOP}
            "type": "Request"
        }
    }    
}
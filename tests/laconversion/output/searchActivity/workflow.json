{
  "definition": {
    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
    "actions": {
      "Catch_Scope": {
        "actions": {
          "Response": {
            "runAfter": {},
            "type": "Response",
            "kind": "Http",
            "inputs": {
              "body": {
                "ErrorCode": 500,
                "ErrorMessage": "@result('Try_Scope')"
              },
              "headers": {
                "Content-Type": "application/json"
              },
              "statusCode": 500
            }
          }
        },
        "runAfter": {
          "Try_Scope": [
            "Failed"
          ]
        },
        "type": "Scope"
      },
      "Try_Scope": {
        "actions": {
          "Get_Events": {
            "inputs": {
              "body": {
                "query": "SELECT Id, Who.Name, Who.Email, What.Name, What.Email, Subject, Location, IsAllDayEvent, ActivityDateTime, ActivityDate, DurationInMinutes, StartDateTime, EndDateTime, EndDate, Description, AccountId, Account.Name, Account.S4SIfA__c, Owner.Name, CurrencyIsoCode, Type, IsPrivate, ShowAs, IsDeleted, IsChild, IsGroupEvent, GroupEventType, IsArchived, IsVisibleInSelfService, RecurrenceActivityId, IsRecurrence, RecurrenceStartDateTime, RecurrenceEndDateOnly, RecurrenceTimeZoneSidKey, RecurrenceType, RecurrenceInterval, RecurrenceDayOfWeekMask, RecurrenceDayOfMonth, RecurrenceInstance, RecurrenceMonthOfYear, ReminderDateTime, IsReminderSet, EventSubtype, IsRecurrence2Exclusion, Recurrence2PatternText, Recurrence2PatternVersion, IsRecurrence2, IsRecurrence2Exception, Recurrence2PatternStartDate, Recurrence2PatternTimeZone, LID__Date_Sent__c, LID__URL__c, S4SActivity_Date__c, S4SAdditional_Information__c, S4SBU__c, S4SCompleted_Date__c, S4SDelegated_By__c, S4SDelegated_By__r.Name, S4SDelegated_By__r.Email, S4SDivision__c, S4SEVENT_LegacyID__c, S4SKey_Fact_1__c, S4SNumber_of_Participants__c, S4SOpportunity_Milestone__c, S4SOther_Topics__c, S4SReason__c, S4SStatus__c, S4SSurvey_Interview_Details__c, S4STraining_Topic__c, DB_Activity_Type__c, S4SDocLocation_BeLux__c, S4SExternal_Source__c, S4SConfidential__c from Event WHERE WhatId ='@{body('Parse_Input_to_Opportunity_Id')?['searchActivity']?['OpportunityId']}' LIMIT 200"
              },
              "path": "/soql/executesoqlquery",
              "host": {
                "referenceName": "SalesForceConnection"
              },
              "method": "post"
            },
            "runAfter": {
              "Parse_Input_to_Opportunity_Id": [
                "Succeeded"
              ]
            },
            "type": "ApiConnection"
          },
          "Get_Tasks": {
            "inputs": {
              "body": {
                "query": "SELECT Id, RecordType.Name, Who.Name, Who.Email, What.Name, What.Email, Subject,ActivityDate,Status,Priority,IsHighPriority,Owner.Name,CurrencyIsoCode,Type,IsDeleted,Account.Name, Account.S4SIfA__c, IsClosed,IsArchived,IsVisibleInSelfService,CallDurationInSeconds,CallType,CallDisposition,CallObject,Description,ReminderDateTime,IsReminderSet,RecurrenceActivityId,IsRecurrence,RecurrenceStartDateOnly,RecurrenceEndDateOnly,RecurrenceTimeZoneSidKey,RecurrenceType,RecurrenceInterval,RecurrenceDayOfWeekMask,RecurrenceDayOfMonth,RecurrenceInstance,RecurrenceMonthOfYear,RecurrenceRegeneratedType,TaskSubtype,CompletedDateTime,LID__Date_Sent__c,LID__URL__c,S4SActivity_Date__c,S4SAdditional_Information__c,S4SBU__c,S4SCompleted_Date__c,S4SDelegated_By__c,S4SDivision__c,S4SEVENT_LegacyID__c,S4SKey_Fact_1__c,S4SNumber_of_Participants__c,S4SOpportunity_Milestone__c,S4SOther_Topics__c,S4SReason__c,S4SStatus__c,S4SSurvey_Interview_Details__c,S4SSurvey_Interview_ID__c,S4STASK_LegacyID__c,S4STraining_Topic__c,DB_Activity_Type__c,S4SDocLocation_BeLux__c,S4SExternal_Source__c,S4SConfidential__c\nFROM Task WHERE WhatId = '@{body('Parse_Input_to_Opportunity_Id')?['searchActivity']?['OpportunityId']}' LIMIT 200"
              },
              "path": "/soql/executesoqlquery",
              "host": {
                "referenceName": "SalesForceConnection"
              },
              "method": "post"
            },
            "runAfter": {
              "Parse_Input_to_Opportunity_Id": [
                "Succeeded"
              ]
            },
            "type": "ApiConnection"
          },
          "Parse_Input_to_Opportunity_Id": {
            "runAfter": {},
            "type": "ParseJson",
            "inputs": {
              "content": "@triggerBody()",
              "schema": {
                "properties": {
                  "searchActivity": {
                    "properties": {
                      "OpportunityId": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          },
          "Response_Success": {
            "runAfter": {
              "Transform_Salesforce_Results_into_Response": [
                "Succeeded"
              ]
            },
            "type": "Response",
            "kind": "Http",
            "inputs": {
              "body": "@body('Transform_Salesforce_Results_into_Response')",
              "statusCode": 200
            }
          },
          "Transform_Salesforce_Results_into_Response": {
            "inputs": {
              "body": {
                "EventsQuery": "@body('Get_Events')",
                "TasksQuery": "@body('Get_Tasks')"
              },
              "function": {
                "connectionName": "Liquid"
              },
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/json",
                "Filename": "parameters('liquid')"
              },
              "method": "POST"
            },
            "runAfter": {
              "Get_Events": [
                "Succeeded"
              ],
              "Get_Tasks": [
                "Succeeded"
              ]
            },
            "type": "Function"
          }
        },
        "runAfter": {},
        "type": "Scope"
      }
    },
    "contentVersion": "1.0.0.0",
    "outputs": {},
    "triggers": {
      "manual": {
        "type": "Request",
        "kind": "Http",
        "inputs": {
          "schema": {
            "properties": {
              "searchActivity": {
                "properties": {
                  "OpportunityId": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        }
      }
    }
  },
  "kind": "Stateful"
}

{
  "definition": {
    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
    "actions": {
      "Catch_Scope": {
        "actions": {
          "Response_-_Error_Message": {
            "inputs": {
              "body": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:out=\"http://soap.sforce.com/2005/09/outbound\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <out:notificationsResponse>\n         <out:Ack>true</out:Ack>\n      </out:notificationsResponse>\n   </soapenv:Body>\n</soapenv:Envelope>",
              "headers": {
                "Content-Type": "application/xml"
              },
              "statusCode": 500
            },
            "kind": "Http",
            "runAfter": {},
            "type": "Response"
          },
          "Terminate": {
            "inputs": {
              "runError": {
                "code": "@{coalesce(body('Create_Quote_GOI_H')?['status'],'500')}",
                "message": "@{outputs('Response_Failure')}"
              },
              "runStatus": "Failed"
            },
            "runAfter": {
              "Response_-_Error_Message": [
                "Succeeded"
              ]
            },
            "type": "Terminate"
          }
        },
        "runAfter": {
          "Try_Scope": [
            "Failed",
            "Skipped",
            "TimedOut"
          ]
        },
        "type": "Scope"
      },
      "Try_Scope": {
        "actions": {
          "Create_Quote_GOI_H": {
            "inputs": {
              "body": {
                "upsertOppObjectsRequest": {
                  "Opportunity": [
                    {
                      "Id": "@{body('Parse_JSON')?['sObject']?['OpportunityId']}",
                      "S4SExternal_Source__c": "iService",
                      "deleteQuote": "2",
                      "NextStep": "@{body('Parse_JSON')?['sObject']?['NextStep']}",
                      "Quote": [
                        {
                          "Description": "@{body('Parse_JSON')?['sObject']?['Description']}",
                          "Name": "@{body('Parse_JSON')?['sObject']?['Name']}",
                          "OpportunityId": "@{body('Parse_JSON')?['sObject']?['OpportunityId']}",
                          "S4SExternal_Source__c": "iService",
                          "S4SMain_Offer__c": "@body('Parse_JSON')?['sObject']?['S4SMain_Offer__c']",
                          "S4SOffer_Date__c": "@{formatDateTime(body('Parse_JSON')?['sObject']?['S4SOffer_Date__c'], 'yyyy-MM-dd')}",
                          "S4SOffer_Engineer__c": "@{body('Parse_JSON')?['sObject']?['S4SOffer_Engineer__c']}",
                          "S4SOffer_ID__c": "@{body('Parse_JSON')?['sObject']?['S4SOffer_ID__c']}",
                          "S4SPromise_Date__c": "@{body('Parse_JSON')?['sObject']?['S4SPromise_Date__c']}",
                          "S4SSource_System__c": "@{body('Parse_JSON')?['sObject']?['S4SSource_System__c']}",
                          "S4SVolume__c": "@{body('Parse_JSON')?['sObject']?['S4SVolume__c']}",
                          "Status": "@{body('Parse_JSON')?['sObject']?['Status']}"
                        }
                      ]
                    }
                  ]
                }
              },
              "headers": {
                "Content-Type": "application/json",
                "Ocp-Apim-Subscription-Key": "parameters('apimKey')"
              },
              "method": "POST",
              "uri": "parameters('goi_v0_upsertopp_url')"
            },
            "runAfter": {
              "Parse_JSON": [
                "Succeeded"
              ]
            },
            "type": "Http"
          },
          "Get_Token_iService": {
            "inputs": {
              "headers": {
                "Ocp-Apim-Subscription-Key": "parameters('apimKey')"
              },
              "method": "POST",
              "retryPolicy": {
                "type": "none"
              },
              "uri": "parameters('apimURL')"
            },
            "runAfter": {},
            "type": "Http"
          },
          "Map_XML_to_JSON": {
            "inputs": {
              "body": "@triggerBody()",
              "function": {
                "connectionName": "Liquid"
              },
              "headers": {
                "Accept": "application/json",
                "Content-Type": "application/xml",
                "Filename": "iService2SieSalesOpportunity-mappings"
              },
              "method": "POST"
            },
            "runAfter": {
              "Get_Token_iService": [
                "Succeeded"
              ]
            },
            "type": "Function"
          },
          "Parse_JSON": {
            "inputs": {
              "content": "@body('Map_XML_to_JSON')",
              "schema": {
                "properties": {
                  "Id": {
                    "type": "string"
                  },
                  "sObject": {
                    "properties": {
                      "Description": {
                        "type": "string"
                      },
                      "Id": {
                        "type": "string"
                      },
                      "Name": {
                        "type": "string"
                      },
                      "OpportunityId": {
                        "type": "string"
                      },
                      "S4SMain_Offer__c": {
                        "type": "string"
                      },
                      "S4SOffer_Date__c": {
                        "type": "string"
                      },
                      "S4SOffer_Engineer__c": {
                        "type": "string"
                      },
                      "S4SOffer_ID__c": {
                        "type": "string"
                      },
                      "S4SPromise_Date__c": {
                        "type": "string"
                      },
                      "S4SSource_System__c": {
                        "type": "string"
                      },
                      "S4SVolume__c": {
                        "type": "string"
                      },
                      "Status": {
                        "type": "string"
                      },
                      "NextStep": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "runAfter": {
              "Map_XML_to_JSON": [
                "Succeeded"
              ]
            },
            "type": "ParseJson"
          },
          "check_for_success": {
            "actions": {
              "OK_Response_to_iService": {
                "inputs": {
                  "body": {
                    "IS_Siesales_Sync_Error__c": " ",
                    "IS_Siesales_Sync_Status__c": "In Sync"
                  },
                  "headers": {
                    "Authorization": "Bearer @{body('Get_Token_iService')}",
                    "Content-Type": "application/json"
                  },
                  "method": "PATCH",
                  "retryPolicy": {
                    "type": "none"
                  },
                  "uri": "parameters('instanceURL_iService')/services/data/v55.0/sobjects/Quote_Information__c/@{body('Parse_JSON')?['sObject']?['Id']}"
                },
                "runAfter": {},
                "type": "Http"
              },
              "True_Ack_Response": {
                "inputs": {
                  "body": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:out=\"http://soap.sforce.com/2005/09/outbound\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <out:notificationsResponse>\n         <out:Ack>true</out:Ack>\n      </out:notificationsResponse>\n   </soapenv:Body>\n</soapenv:Envelope>",
                  "headers": {
                    "Content-Type": "application/xml"
                  },
                  "statusCode": 200
                },
                "kind": "Http",
                "runAfter": {
                  "OK_Response_to_iService": [
                    "Succeeded"
                  ]
                },
                "type": "Response"
              }
            },
            "else": {
              "actions": {
                "Not_OK_Response_to_iService": {
                  "inputs": {
                    "body": {
                      "IS_Siesales_Sync_Error__c": "@{coalesce(body('Create_Quote_GOI_H')?['upsertOppObjectsResponse']?['Opportunity'][0]?['Message'][0],'')}",
                      "IS_Siesales_Sync_Status__c": "Sync Error"
                    },
                    "headers": {
                      "Authorization": "Bearer @{body('Get_Token_iService')}",
                      "Content-Type": "application/json"
                    },
                    "method": "PATCH",
                    "retryPolicy": {
                      "type": "none"
                    },
                    "uri": "parameters('instanceURL_iService')/services/data/v55.0/sobjects/Quote_Information__c/@{body('Parse_JSON')?['sObject']?['Id']}"
                  },
                  "runAfter": {},
                  "type": "Http"
                },
                "Response_Failure": {
                  "inputs": {
                    "body": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:out=\"http://soap.sforce.com/2005/09/outbound\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <out:notificationsResponse>\n         <out:Ack>true</out:Ack>\n      </out:notificationsResponse>\n   </soapenv:Body>\n</soapenv:Envelope>",
                    "headers": {
                      "Content-Type": "application/xml"
                    },
                    "statusCode": 200
                  },
                  "kind": "Http",
                  "runAfter": {
                    "Not_OK_Response_to_iService": [
                      "Succeeded"
                    ]
                  },
                  "type": "Response"
                }
              }
            },
            "expression": {
              "and": [
                {
                  "equals": [
                    "@coalesce(body('Create_Quote_GOI_H')?['upsertOppObjectsResponse']?['Opportunity'][0]?['Success'],false)",
                    true
                  ]
                }
              ]
            },
            "runAfter": {
              "Create_Quote_GOI_H": [
                "Succeeded"
              ]
            },
            "type": "If"
          }
        },
        "runAfter": {},
        "trackedProperties": {},
        "type": "Scope"
      }
    },
    "contentVersion": "1.0.0.0",
    "outputs": {},
    "triggers": {
      "manual": {
        "inputs": {
          "schema": {}
        },
        "kind": "Http",
        "type": "Request"
      }
    }
  },
  "kind": "Stateful"
}

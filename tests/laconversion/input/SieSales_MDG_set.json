{
  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Select fields": {
      "defaultValue": "S4SCID_Number__c,S4SIfA__c,Name,BillingStreet,BillingPostalCode,BillingCity,BillingCountryCode,BillingState,S4SCMD_KUKLA__c,S4SDUNS__c,S4SPO_box__c,S4SPO_Box_Postcode__c,S4SCity_PO_Box__c,S4SISIC__c,S4SNat_Company_ID__c,S4SCMD_NAME1_I__c,S4SCMD_NAME2_I__c,S4SCMD_NAME3__c,S4SCMD_NAME3_I__c,S4SInternational_Street_Name_1__c,S4SInternational_Steet_Name_2__c,S4SInternational_City__c,BillingStateCode,S4STax_ID__c,S4SCompany_Postal_Code__c,S4SLegal_Status__c,S4SNotification_from_CMD__c,Id,S4SMD_Status__c,S4SCMD_NAME1__c,S4SLegalOwner__c,Ownership,S4SSISIC_Direct_Name__c,S4SSISIC_Ship_To_Name__c",
      "type": "String"
    },
    "fetchAccountWhereClausefromMDStatus": {
      "defaultValue": "S4SMD_Status__c IN ( 'CMD Subscription Pending','Unsubscribe from CMD')",
      "type": "String"
    },
    "fetchAccountWhereClausefromRecordType": {
      "defaultValue": "recordtypeId",
      "type": "String"
    },
    "fetchRecordTypesWhereClause": {
      "defaultValue": "SELECT Id FROM RecordType where SobjectType = 'Account' and DeveloperName in ('S4SAccount','S4SInternal_Account')",
      "type": "String"
    },
    "tokenConfig-SieSales": {
      "defaultValue": "oAuthToken-nonsfs-config",
      "type": "String"
    }
  },
  "triggers": {
    "Recurrence": {
      "recurrence": {
        "frequency": "Minute",
        "interval": 15,
        "timeZone": "W. Europe Standard Time",
        "startTime": "2022-07-11T08:08:00Z"
      },
      "type": "Recurrence"
    }
  },
  "actions": {
    "Check_negation_if_the_0th_record_exists_in_the_fetch_call": {
      "actions": {
        "For_each": {
          "actions": {
            "Call_int_SF_MDG_set": {
              "inputs": {
                "body": {
                  "BearerToken": "Bearer @{body('logic-c00031-getSFOauthToken-weu-dev')?['access_token']}",
                  "InstanceURL": "@{body('logic-c00031-getSFOauthToken-weu-dev')?['instance_url']}",
                  "MDGRequest": "@{items('For_each')}",
                  "Sender": "@{string('SieSales')}"
                },
                "host": {
                  "triggerName": "manual",
                  "workflow": {
                    "id": "${logic_MDG_int_SF_MDG_set}"
                  }
                },
                "retryPolicy": {
                  "type": "none"
                }
              },
              "runAfter": {},
              "type": "Workflow"
              }
          },
          "foreach": "@body('HTTP_fetchAccountsToProcess')?['records']",
          "runAfter": {},
          "type": "Foreach"
        }
      },
      "runAfter": {
        "HTTP_fetchAccountsToProcess": ["Succeeded"]
      },
      "else": {
        "actions": {
          "Terminate": {
            "runAfter": {},
            "type": "Terminate",
            "inputs": {
              "runStatus": "Succeeded"
            }
          }
        }
      },
      "expression": {
        "and": [
          {
            "greaterOrEquals": [
              "@body('HTTP_fetchAccountsToProcess')?['totalSize']",
              1
            ]
          }
        ]
      },
      "type": "If"
    },
    "Get_RecordTypeIds": {
      "runAfter": {
        "HTTP_fetchRecordTypes": ["Succeeded"]
      },
      "type": "Function",
      "inputs": {
        "authentication": {
          "type": "Raw",
          "value": "[parameters('functionAppKey')]"
        },
        "body": "@body('HTTP_fetchRecordTypes')",
        "function": {
          "id": "[concat(parameters('funcApp'), '/functions/LiquidTransformer')]"
        },
        "headers": {
          "Accept": "application/json",
          "Content-Type": "application/json",
          "Filename": "SalesforceToMDGGetRecordTypeIDs"
        },
        "retryPolicy": {
          "type": "none"
        }
      }
    },
    "HTTP_fetchAccountsToProcess": {
      "runAfter": {
        "Get_RecordTypeIds": ["Succeeded"]
      },
      "type": "Http",
      "inputs": {
        "headers": {
          "Authorization": "Bearer @{body('logic-c00031-getSFOauthToken-weu-dev')?['access_token']}"
        },
        "method": "GET",
        "queries": {
          "q": "select @{parameters('Select fields')} from Account where @{parameters('fetchAccountWhereClausefromMDStatus')} and @{parameters('fetchAccountWhereClausefromRecordType')} in ('@{body('Get_RecordTypeIds')?['Ids']}') limit 100"
        },
        "retryPolicy": {
          "type": "none"
        },
        "uri": "@{body('logic-c00031-getSFOauthToken-weu-dev')?['instance_url']}/services/data/v55.0/query"
      }
    },
    "HTTP_fetchRecordTypes": {
      "runAfter": {
        "logic-c00031-getSFOauthToken-weu-dev": ["Succeeded"]
      },
      "type": "Http",
      "inputs": {
        "headers": {
          "Authorization": "Bearer @{body('logic-c00031-getSFOauthToken-weu-dev')?['access_token']}"
        },
        "method": "GET",
        "queries": {
          "q": "@parameters('fetchRecordTypesWhereClause')"
        },
        "retryPolicy": {
          "type": "none"
        },
        "uri": "@{body('logic-c00031-getSFOauthToken-weu-dev')?['instance_url']}/services/data/v55.0/query"
      }
    },
    "logic-c00031-getSFOauthToken-weu-dev": {
      "runAfter": {},
      "type": "Workflow",
      "inputs": {
        "body": {
          "tokenType": "nonsfs"
        },
        "host": {
          "triggerName": "manual",
          "workflow": {
            "id": "${logic_getSFOauthToken}"
          }
        },
        "retryPolicy": {
          "type": "none"
        }
      }
    }
  },
  "outputs": {}
}

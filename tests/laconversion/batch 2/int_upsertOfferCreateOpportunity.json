{
    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "$connections": {
            "defaultValue": {},
            "type": "Object"
        }
    },
    "triggers": {
        "manual": {
            "type": "Request",
            "kind": "Http",
            "inputs": {}
        }
    },
    "actions": {
      "HTTP_Get_SF_Token_for_Non__SFS": {
        "inputs": {
          "headers": {
              "Ocp-Apim-Subscription-Key":  "${apimKey}"
          },
          "method": "POST",
          "uri": "${baseUrl_apim_ise}/c00031/token/oAuth/nonsfs"
        },
        "runAfter": {
            "InitializeVariable-varOptyType": [
                "Succeeded"
            ],
            "Initialize_variable'UpsertOffer_Response'": [
                "Succeeded"
            ],
            "Initialize_variable-closeDate": [
                "Succeeded"
            ],
            "Initialize_variable-salesStatus": [
                "Succeeded"
            ],
            "Initialize_variable-stageName": [
                "Succeeded"
            ],
            "Initialize_variable-varCompanyId": [
                "Succeeded"
            ],
            "Initialize_variable_'OPP_ID'": [
                "Succeeded"
            ],
            "Initialize_variable_SOQLAccount_ID": [
                "Succeeded"
            ],
            "Initializevariable-varStageName": [
                "Succeeded"
            ]
        },
        "type": "Http"
      },
        "InitializeVariable-varOptyType": {
            "runAfter": {},
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "varOptyType",
                        "type": "string"
                    }
                ]
            }
        },
        "Initialize_variable'UpsertOffer_Response'": {
            "runAfter": {},
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "UpsertOffer_Response",
                        "type": "string",
                        "value": "<response><Result>####UpsertOffer_Response####<ACTION/><SUCCESS>##Result##</SUCCESS><ERROR_MSG>##ERROR_MSG##</ERROR_MSG><OfferLineItemResult><PRODUCT_REVENUE_ID/><OFFER_PRODUCT_NAME/><SUCCESS/><ERROR_MSG/><OfferLineVariantResult><ATTRIBUTE_ID/><SUCCESS/><ERROR_MSG/></OfferLineVariantResult></OfferLineItemResult></Result></response>"
                    }
                ]
            }
        },
        "Initialize_variable-closeDate": {
            "runAfter": {},
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "closeDate",
                        "type": "string"
                    }
                ]
            }
        },
        "Initialize_variable-salesStatus": {
            "runAfter": {},
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "salesStatus",
                        "type": "string",
                        "value": "@{substring(trim(xpath(xml(triggerBody()),'.//STATUS/text()')?[0]),1)}"
                    }
                ]
            }
        },
        "Initialize_variable-stageName": {
            "runAfter": {},
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "stageName",
                        "type": "string",
                        "value": "@{first(trim(xpath(xml(triggerBody()),'.//STATUS/text()')?[0]))}"
                    }
                ]
            }
        },
        "Initialize_variable-varCompanyId": {
            "runAfter": {},
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "varCompanyId",
                        "type": "string"
                    }
                ]
            }
        },
        "Initialize_variable_'OPP_ID'": {
            "runAfter": {},
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "OPP_ID",
                        "type": "string",
                        "value": "@{xpath(xml(triggerBody()),'.//OPP_ID/text()')?[0]}"
                    }
                ]
            }
        },
        "Initialize_variable_SOQLAccount_ID": {
            "runAfter": {},
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "SoqlAccountId",
                        "type": "string"
                    }
                ]
            }
        },
        "Initializevariable-varStageName": {
            "runAfter": {},
            "type": "InitializeVariable",
            "inputs": {
                "variables": [
                    {
                        "name": "varStageName",
                        "type": "string",
                        "value": "@{first(trim(xpath(xml(triggerBody()),'.//STATUS/text()')?[0]))}"
                    }
                ]
            }
        },
        "Scope-Catch": {
            "actions": {
                "ComposeFailedResponse": {
                    "runAfter": {},
                    "type": "Compose",
                    "inputs": "@xml(replace(replace(replace(variables('UpsertOffer_Response'),'####UpsertOffer_Response####',''),'##Result##','Failure'),'##ERROR_MSG##',''))"
                },
                "FailedResponse_": {
                    "runAfter": {
                        "ComposeFailedResponse": [
                            "Succeeded"
                        ]
                    },
                    "type": "Response",
                    "kind": "Http",
                    "inputs": {
                        "body": "@outputs('ComposeFailedResponse')",
                        "headers": {
                            "Content-Type": "text/xml"
                        },
                        "statusCode": 500
                    }
                },
                "Terminate": {
                    "runAfter": {
                        "FailedResponse_": [
                            "Succeeded"
                        ]
                    },
                    "type": "Terminate",
                    "inputs": {
                        "runStatus": "Failed"
                    }
                }
            },
            "runAfter": {
                "Scope-Try": [
                    "Failed",
                    "Skipped",
                    "TimedOut"
                ]
            },
            "type": "Scope"
        },
        "Scope-Try": {
            "actions": {
                "Check-MainContactPerson_AND_OPP_ID": {
                    "actions": {
                        "Condition_to_check_TotalSize": {
                            "actions": {
                                "Create_record_-OppContactRole": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "headers": {
                                            "Authorization": "Bearer @{body('HTTP_Get_SF_Token_for_Non__SFS')}"
                                        },
                                        "body": {
                                            "ContactId": "@{xpath(xml(triggerBody()),'.//MAIN_CONTACT_PERSON_ID/text()')?[0]}",
                                            "IsPrimary": true,
                                            "OpportunityId": "@variables('OPP_ID')"
                                        },
                                        
                                        "method": "post",
            
                                        "uri": "${instance_NonSFS_URL}/sobjects/OpportunityContactRole/"
                                      }
                                },
                                "Response_Failure_Message": {
                                    "runAfter": {
                                        "Create_record_-OppContactRole": [
                                            "Failed"
                                        ]
                                    },
                                    "type": "Response",
                                    "kind": "Http",
                                    "inputs": {
                                        "body": "@xml(replace(replace(replace(variables('UpsertOffer_Response'),'####UpsertOffer_Response####',''),'##Result##','Failure'),'##ERROR_MSG##',body('Create_record_-OppContactRole')?['message']))",
                                        "headers": {
                                            "Content-Type": "text/xml"
                                        },
                                        "statusCode": 500
                                    }
                                },
                                "Terminate_OppContactRole": {
                                    "runAfter": {
                                        "Response_Failure_Message": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Terminate",
                                    "inputs": {
                                        "runStatus": "Succeeded"
                                    }
                                }
                            },
                            "runAfter": {
                                "Execute_a_SOQL_query-SIE_SF4S_getOpportunityContactDetail": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@body('Execute_a_SOQL_query-SIE_SF4S_getOpportunityContactDetail')['totalSize']",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Execute_a_SOQL_query-SIE_SF4S_getOpportunityContactDetail": {
                            "runAfter": {},
                            "type": "Http",
                            "inputs": {
                                "headers": {
                                    "Authorization": "Bearer @{body('HTTP_Get_SF_Token_for_Non__SFS')}"
                                },
                                "queries": {
                                    "q": "SELECT Id,OpportunityId,ContactID,IsPrimary,CreatedDate,Contact.Id,Contact.LastName,Contact.FirstName,Contact.Salutation,Contact.MiddleName,Contact.Suffix,Contact.OtherStreet,Contact.OtherCity,Contact.OtherPostalCode,Contact.OtherCountry,Contact.Phone,Contact.Fax,Contact.MobilePhone,Contact.HomePhone,Contact.Email,Contact.Department,Contact.Description,Contact.OwnerId,Contact.DoNotCall,Contact.CreatedDate,Contact.CreatedById,Contact.LastModifiedDate,Contact.S4SAcademic_Title__c,Contact.S4SDepartment_Type__c,Contact.S4SDouble_Opt_In__c,Contact.S4SFull_Name__c,Contact.S4SGender__c,Contact.S4SJob_Description__c,Contact.S4SJob_Specification__c,Contact.S4SLanguage__c,Contact.S4SMarked_for_Deletion__c,Contact.S4SNever_Email__c,Contact.S4SNever_Mail__c,Contact.S4SNo_Marketing__c,Contact.S4SStatus__c,Contact.S4SInitial__c FROM OpportunityContactRole WHERE OpportunityId = '@{variables('OPP_ID')}'"
                                },
                                
                                "method": "GET",
                                "uri": "${instance_NonSFS_URL}/query"
                            }
                        }
                    },
                    "runAfter": {
                        "Check-OPP_ID": [
                            "Succeeded"
                        ]
                    },
                    "else": {
                        "actions": {
                            "MAIN_CONTACT_PERSON_ID’-FALSE": {
                                "actions": {
                                    "Check_Size": {
                                        "actions": {
                                            "Create_record-Opp_Contact_Role": {
                                                "runAfter": {},
                                                "type": "Http",
                                                "inputs": {
                                                    "headers": {
                                                        "Authorization": "Bearer @{body('HTTP_Get_SF_Token_for_Non__SFS')}"
                                                    },
                                                    "body": {
                                                        "ContactId": "@{xpath(xml(triggerBody()),'.//MAIN_CONTACT_PERSON_ID/text()')?[0]}",
                                                        "IsPrimary": true,
                                                        "OpportunityId": "@variables('OPP_ID')"
                                                    },
                                                   
                                                    "method": "post",
                                                  
                                                    "uri": "${instance_NonSFS_URL}/sobjects/OpportunityContactRole/"
                                                }
                                            }
                                        },
                                        "runAfter": {
                                            "SIE_SF4S_getOpportunityContactDetail": [
                                                "Succeeded"
                                            ]
                                        },
                                        "expression": {
                                            "and": [
                                                {
                                                    "equals": [
                                                        "@body('SIE_SF4S_getOpportunityContactDetail')['totalSize']",
                                                        0
                                                    ]
                                                }
                                            ]
                                        },
                                        "type": "If"
                                    },
                                    "SIE_SF4S_getOpportunityContactDetail": {
                                        "runAfter": {},
                                        "type": "Http",
                                        "inputs": {
                                            "headers": {
                                                "Authorization": "Bearer @{body('HTTP_Get_SF_Token_for_Non__SFS')}"
                                            },
                                            "queries": {
                                                "q": "SELECT Id,OpportunityId,ContactID,IsPrimary,CreatedDate,Contact.Id,Contact.LastName,Contact.FirstName,Contact.Salutation,Contact.MiddleName,Contact.Suffix,Contact.OtherStreet,Contact.OtherCity,Contact.OtherPostalCode,Contact.OtherCountry,Contact.Phone,Contact.Fax,Contact.MobilePhone,Contact.HomePhone,Contact.Email,Contact.Department,Contact.Description,Contact.OwnerId,Contact.DoNotCall,Contact.CreatedDate,Contact.CreatedById,Contact.LastModifiedDate,Contact.S4SAcademic_Title__c,Contact.S4SDepartment_Type__c,Contact.S4SDouble_Opt_In__c,Contact.S4SFull_Name__c,Contact.S4SGender__c,Contact.S4SJob_Description__c,Contact.S4SJob_Specification__c,Contact.S4SLanguage__c,Contact.S4SMarked_for_Deletion__c,Contact.S4SNever_Email__c,Contact.S4SNever_Mail__c,Contact.S4SNo_Marketing__c,Contact.S4SStatus__c,Contact.S4SInitial__c FROM OpportunityContactRole WHERE OpportunityId '@{variables('OPP_ID')}'"
                                            },
                                            
                                            "method": "GET",
                                            "uri": "${instance_NonSFS_URL}/query"
                                        }
                                    }
                                },
                                "runAfter": {},
                                "else": {
                                    "actions": {
                                        "Condition_4": {
                                            "actions": {
                                                "Compose_3": {
                                                    "runAfter": {},
                                                    "type": "Compose",
                                                    "inputs": "<OPPORTUNITY_ID>@{body('SIE_SF4S_createOpportunityFalse')?['records']?[0]?['Id']}</OPPORTUNITY_ID>"
                                                }
                                            },
                                            "runAfter": {},
                                            "else": {
                                                "actions": {
                                                    "Compose_4": {
                                                        "runAfter": {},
                                                        "type": "Compose",
                                                        "inputs": "<OPPORTUNITY_ID>@{body('SIE_SF4S_createOpportunity')?['records']?[0]?['Id']}</OPPORTUNITY_ID>"
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@body('SIE_SF4S_createOpportunityFalse')?['records']?[0]?['Id']",
                                                                "@null"
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    }
                                },
                                "expression": {
                                    "and": [
                                        {
                                            "not": {
                                                "equals": [
                                                    "@xpath(xml(triggerBody()),'.//MAIN_CONTACT_PERSON_ID/text()')?[0]",
                                                    "@string('')"
                                                ]
                                            }
                                        },
                                        {
                                            "not": {
                                                "equals": [
                                                    "@xpath(xml(triggerBody()),'.//MAIN_CONTACT_PERSON_ID/text()')?[0]",
                                                    "@string('null')"
                                                ]
                                            }
                                        },
                                        {
                                            "not": {
                                                "equals": [
                                                    "@variables('OPP_ID')",
                                                    "@null"
                                                ]
                                            }
                                        },
                                        {
                                            "not": {
                                                "equals": [
                                                    "@variables('OPP_ID')",
                                                    "@string('')"
                                                ]
                                            }
                                        },
                                        {
                                            "not": {
                                                "equals": [
                                                    "@variables('OPP_ID')",
                                                    "@string('null')"
                                                ]
                                            }
                                        },
                                        {
                                            "not": {
                                                "equals": [
                                                    "@xpath(xml(triggerBody()),'.//MAIN_CONTACT_PERSON_ID/text()')?[0]",
                                                    "@null"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "type": "If"
                            }
                        }
                    },
                    "expression": {
                        "and": [
                            {
                                "not": {
                                    "equals": [
                                        "@xpath(xml(triggerBody()),'.//MAIN_CONTACT_PERSON_ID/text()')?[0]",
                                        "@null"
                                    ]
                                }
                            },
                            {
                                "not": {
                                    "equals": [
                                        "@variables('OPP_ID')",
                                        "@string('')"
                                    ]
                                }
                            },
                            {
                                "not": {
                                    "equals": [
                                        "@variables('OPP_ID')",
                                        "@string('null')"
                                    ]
                                }
                            },
                            {
                                "not": {
                                    "equals": [
                                        "@variables('OPP_ID')",
                                        "@null"
                                    ]
                                }
                            },
                            {
                                "not": {
                                    "equals": [
                                        "@xpath(xml(triggerBody()),'.//MAIN_CONTACT_PERSON_ID/text()')?[0]",
                                        "@string('')"
                                    ]
                                }
                            },
                            {
                                "not": {
                                    "equals": [
                                        "@xpath(xml(triggerBody()),'.//MAIN_CONTACT_PERSON_ID/text()')?[0]",
                                        "@string('null')"
                                    ]
                                }
                            }
                        ]
                    },
                    "type": "If"
                },
                "Check-OPPORTUNITY_NUMBER’_": {
                    "actions": {
                        "Execute_a_SOQL_query-SIE_SF4S_getOpportunityAccount": {
                            "runAfter": {},
                            "type": "Http",
                            "inputs": {
                                "headers": {
                                    "Authorization": "Bearer @{body('HTTP_Get_SF_Token_for_Non__SFS')}"
                                },
                                "queries": {
                                    "q": "SELECT Id,AccountId,Name,S4SSalesforce_ID__c,S4SSales_Status__c,CloseDate,Account.S4SIfA__c FROM Opportunity WHERE S4SReference_ID__c = '@{xpath(xml(triggerBody()),'.//OPPORTUNITY_NUMBER/text()')?[0]}'"
                                },
                                
                                "method": "GET",
                                "uri": "${instance_NonSFS_URL}/query"
                            }
                        },
                        "Set_variable_3": {
                            "runAfter": {
                                "Execute_a_SOQL_query-SIE_SF4S_getOpportunityAccount": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "OPP_ID",
                                "value": "@{if(greater(body('Execute_a_SOQL_query-SIE_SF4S_getOpportunityAccount')?['totalSize'],0),body('Execute_a_SOQL_query-SIE_SF4S_getOpportunityAccount')?['records']?[0]?['Id'],xpath(xml(triggerBody()),'.//OPP_ID/text()')?[0])}"
                            }
                        }
                    },
                    "runAfter": {
                        "Check-SISIC_Code": [
                            "Succeeded"
                        ]
                    },
                    "expression": {
                        "and": [
                            {
                                "not": {
                                    "equals": [
                                        "@xpath(xml(triggerBody()),'.//OPPORTUNITY_NUMBER/text()')?[0]",
                                        "@null"
                                    ]
                                }
                            },
                            {
                                "not": {
                                    "equals": [
                                        "@xpath(xml(triggerBody()),'.//OPPORTUNITY_NUMBER/text()')?[0]",
                                        "@string('')"
                                    ]
                                }
                            },
                            {
                                "not": {
                                    "equals": [
                                        "@xpath(xml(triggerBody()),'.//OPPORTUNITY_NUMBER/text()')?[0]",
                                        "@string('null')"
                                    ]
                                }
                            }
                        ]
                    },
                    "type": "If"
                },
                "Check-OPP_ID": {
                    "actions": {
                        "Check-SAPNumber": {
                            "actions": {
                                "ComposeUpdateOppSAP": {
                                    "runAfter": {},
                                    "type": "Compose",
                                    "inputs": {
                                        "Id": "@{variables('OPP_ID')}",
                                        "S4SChance_of_Execution__c": "100%",
                                        "S4SChance_of_Success__c": "100%",
                                        "S4SExternal_Source__c": "@{if(equals(xpath(xml(triggerBody()),'.//SOURCE_SYSTEM_CODE/text()')?[0], string('null')), null, string(xpath(xml(triggerBody()),'.//SOURCE_SYSTEM_CODE/text()')?[0]))}",
                                        "S4SSAP_Number__c": "@{if(equals(xpath(xml(triggerBody()),'.//SAP_NUMBER/text()')?[0], string('null')), null, string(xpath(xml(triggerBody()),'.//SAP_NUMBER/text()')?[0]))}",
                                        "S4SSales_Status__c": "@{variables('salesStatus')}",
                                        "StageName": "@{variables('stageName')}"
                                    }
                                },
                                "Condition_check_on_createOpportunity_status_code": {
                                    "actions": {
                                        "Set_variable_-CompanyId": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "varCompanyId",
                                                "value": "@{body('SIE_SF4S_createOpportunity')?['AccountId']}"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "SIE_SF4S_createOpportunity": [
                                            "Succeeded",
                                            "Failed"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Compose_Error_Message_for_createOpportunity": {
                                                "runAfter": {},
                                                "type": "Compose",
                                                "inputs": "@xml(replace(replace(replace(variables('UpsertOffer_Response'),'####UpsertOffer_Response####',''),'##Result##','Failure'),'##ERROR_MSG##',coalesce(json(string(body('SIE_SF4S_createOpportunity')))?['error']?['innerError']?['message'],json(string(body('SIE_SF4S_createOpportunity')))?['message'])))"
                                            },
                                            "FailedResponse_createOpportunity": {
                                                "runAfter": {
                                                    "Compose_Error_Message_for_createOpportunity": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "Response",
                                                "kind": "Http",
                                                "inputs": {
                                                    "body": "@outputs('Compose_Error_Message_for_createOpportunity')",
                                                    "headers": {
                                                        "Content-Type": "text/xml"
                                                    },
                                                    "statusCode": 200
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@json(string(outputs('SIE_SF4S_createOpportunity')))?['statusCode']",
                                                    200
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "SIE_SF4S_createOpportunity": {
                                    "runAfter": {
                                        "ComposeUpdateOppSAP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": "@outputs('ComposeUpdateOppSAP')",
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                              "id": "[parameters('InsertUpdateOpportunity_logicApp_id')]"
                                            }
                                        },
                                        "method": "patch",
                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Opportunity'))}/externalIdFields/@{encodeURIComponent(encodeURIComponent('S4SOPPORTUNITY_LegacyID__c'))}/@{encodeURIComponent(encodeURIComponent(xpath(xml(triggerBody()),'.//OPP_ID/text()')?[0]))}",
                                        "retryPolicy": {
                                            "type": "none"
                                        }
                                    }
                                }
                            },
                            "runAfter": {},
                            "else": {
                                "actions": {
                                    "ComposeUpdateOppSAP_False": {
                                        "runAfter": {},
                                        "type": "Compose",
                                        "inputs": {
                                            "Id": "@{variables('OPP_ID')}",
                                            "S4SExternal_Source__c": "@{if(equals(xpath(xml(triggerBody()),'.//SOURCE_SYSTEM_CODE/text()')?[0], string('null')), null, string(xpath(xml(triggerBody()),'.//SOURCE_SYSTEM_CODE/text()')?[0]))}",
                                            "S4SGross_Margin__c": "@{if(equals(xpath(xml(triggerBody()),'.//GROSS_MARGIN/text()')?[0], string('null')), null, string(xpath(xml(triggerBody()),'.//GROSS_MARGIN/text()')?[0]))}",
                                            "S4SSAP_Number__c": "@{if(equals(xpath(xml(triggerBody()),'.//SAP_NUMBER/text()')?[0], string('null')), null, string(xpath(xml(triggerBody()),'.//SAP_NUMBER/text()')?[0]))}",
                                            "S4SSales_Status__c": "@{variables('salesStatus')}",
                                            "StageName": "@{variables('stageName')}"
                                        }
                                    },
                                    "Condition_check_on_createOpportunityFalse_status_code": {
                                        "actions": {
                                            "Set_CompanyID": {
                                                "runAfter": {},
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "varCompanyId",
                                                    "value": "@{body('SIE_SF4S_createOpportunityFalse')?['AccountId']}"
                                                }
                                            }
                                        },
                                        "runAfter": {
                                            "SIE_SF4S_createOpportunityFalse": [
                                                "Succeeded",
                                                "Failed"
                                            ]
                                        },
                                        "else": {
                                            "actions": {
                                                "Compose_Error_Message_for_createOpportunityFalse": {
                                                    "runAfter": {},
                                                    "type": "Compose",
                                                    "inputs": "@xml(replace(replace(replace(variables('UpsertOffer_Response'),'####UpsertOffer_Response####',''),'##Result##','Failure'),'##ERROR_MSG##',coalesce(json(string(body('SIE_SF4S_createOpportunityFalse')))?['error']?['innerError']?['message'],json(string(body('SIE_SF4S_createOpportunityFalse')))?['message'])))"
                                                },
                                                "FailedResponse_createOpportunityFalse": {
                                                    "runAfter": {
                                                        "Compose_Error_Message_for_createOpportunityFalse": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Response",
                                                    "kind": "Http",
                                                    "inputs": {
                                                        "body": "@outputs('Compose_Error_Message_for_createOpportunityFalse')",
                                                        "headers": {
                                                            "Content-Type": "text/xml"
                                                        },
                                                        "statusCode": 200
                                                    }
                                                }
                                            }
                                        },
                                        "expression": {
                                            "and": [
                                                {
                                                    "equals": [
                                                        "@json(string(outputs('SIE_SF4S_createOpportunityFalse')))?['statusCode']",
                                                        200
                                                    ]
                                                }
                                            ]
                                        },
                                        "type": "If"
                                    },
                                    "SIE_SF4S_createOpportunityFalse": {
                                        "runAfter": {
                                            "ComposeUpdateOppSAP_False": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Workflow",
                                        "inputs": {
                                            "body": "@outputs('ComposeUpdateOppSAP_False')",
                                            "host": {
                                                "triggerName": "manual",
                                                "workflow": {
                                                  "id": "[parameters('InsertUpdateOpportunity_logicApp_id')]"
                                                }
                                            },
                                            "method": "patch",
                                            "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Opportunity'))}/externalIdFields/@{encodeURIComponent(encodeURIComponent('S4SOPPORTUNITY_LegacyID__c'))}/@{encodeURIComponent(encodeURIComponent(variables('OPP_ID')))}",
                                            "retryPolicy": {
                                                "type": "none"
                                            }
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "not": {
                                            "equals": [
                                                "@xpath(xml(triggerBody()),'.//SAP_NUMBER/text()')?[0]",
                                                "@null"
                                            ]
                                        }
                                    },
                                    {
                                        "not": {
                                            "equals": [
                                                "@xpath(xml(triggerBody()),'.//SAP_NUMBER/text()')?[0]",
                                                "@string('null')"
                                            ]
                                        }
                                    },
                                    {
                                        "not": {
                                            "equals": [
                                                "@xpath(xml(triggerBody()),'.//SAP_NUMBER/text()')?[0]",
                                                "@string('')"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If"
                        }
                    },
                    "runAfter": {
                        "Check-OPPORTUNITY_NUMBER’_": [
                            "Succeeded"
                        ]
                    },
                    "else": {
                        "actions": {
                            "ComposeCreateOpp": {
                                "runAfter": {},
                                "type": "Compose",
                                "inputs": {
                                    "AccountId": "@{if(empty(variables('SoqlAccountId')),xpath(xml(triggerBody()),'.//NATIONAL_ACCOUNT__NAME/text()')?[0],variables('SoqlAccountId'))}",
                                    "CloseDate": "@{coalesce(body('Execute_a_SOQL_query-SIE_SF4S_getOpportunityAccount')?['records']?[0]?['CloseDate'], xpath(xml(triggerBody()),'.//EST_OI_DATE/text()')?[0])}",
                                    "CurrencyIsoCode": "@{if(equals(xpath(xml(triggerBody()),'.//CURRENCY/text()')?[0], string('null')), null, string(xpath(xml(triggerBody()),'.//CURRENCY/text()')?[0]))}",
                                    "Name": "@{if(equals(xpath(xml(triggerBody()),'.//OFFER_NAME/text()')?[0], string('null')), null, string(xpath(xml(triggerBody()),'.//OFFER_NAME/text()')?[0]))}",
                                    "OwnerId": "@{coalesce(body('ExecuteSOQL-User')?['records']?[0]?['Id'], xpath(xml(triggerBody()),'.//OPPORTUNITY_OWNER/text()')?[0])}",
                                    "S4SAcceptance_Closure__c": "@{if(equals(xpath(xml(triggerBody()),'.//EST_PROJECT_CLOSURE/text()')?[0], string('null')), null, string(xpath(xml(triggerBody()),'.//EST_PROJECT_CLOSURE/text()')?[0]))}",
                                    "S4SBid_approval_PM040__c": "@{if(equals(xpath(xml(triggerBody()),'.//BID_APPROVAL/text()')?[0], string('null')), null, string(xpath(xml(triggerBody()),'.//BID_APPROVAL/text()')?[0]))}",
                                    "S4SChance_of_Execution__c": "100%",
                                    "S4SChance_of_Success__c": "@{json(body('FetchKVSecret'))?['CoS']?[coalesce(xpath(xml(triggerBody()),'.//SUCCESS_CHANCE/text()')?[0],'10')]}",
                                    "S4SDivision__c": "@{if(equals(xpath(xml(triggerBody()),'.//DEPTH_STRUCTURE/DIVISION/text()')?[0], string('null')), null, string(xpath(xml(triggerBody()),'.//DEPTH_STRUCTURE/DIVISION/text()')?[0]))}",
                                    "S4SEnd_Account__c": "@{if(equals(xpath(xml(triggerBody()),'.//END_CUSTOMER_ID/text()')?[0], string('null')), null, string(xpath(xml(triggerBody()),'.//END_CUSTOMER_ID/text()')?[0]))}",
                                    "S4SExternal_Source__c": "@{if(equals(xpath(xml(triggerBody()),'.//SOURCE_SYSTEM_CODE/text()')?[0], string('null')), null, string(xpath(xml(triggerBody()),'.//SOURCE_SYSTEM_CODE/text()')?[0]))}",
                                    "S4SGross_Margin__c": "@{if(equals(xpath(xml(triggerBody()),'.//GROSS_MARGIN/text()')?[0], string('null')), null, string(xpath(xml(triggerBody()),'.//GROSS_MARGIN/text()')?[0]))}",
                                    "S4SSite__c": "@{if(equals(xpath(xml(triggerBody()),'.//SITE_ID/text()')?[0], string('null')), null, string(xpath(xml(triggerBody()),'.//SITE_ID/text()')?[0]))}",
                                    "S4SOpportunity_Industry_Search__c": "@{coalesce(body('ExecuteSOQL-SISIC')?['records']?[0]?['Id'], body('Create_SISIC')?['Id'])}",
                                    "S4SReference_ID__c": "@{if(equals(xpath(xml(triggerBody()),'.//OPPORTUNITY_NUMBER/text()')?[0], string('null')), null, string(xpath(xml(triggerBody()),'.//OPPORTUNITY_NUMBER/text()')?[0]))}",
                                    "S4SRelevant_for_Forecast__c": "@{if(equals(xpath(xml(triggerBody()),'.//RELEVANT_FOR_FORECAST/text()')?[0], string('null')), null, string(xpath(xml(triggerBody()),'.//RELEVANT_FOR_FORECAST/text()')?[0]))}",
                                    "S4SSAP_Number__c": "@{if(equals(xpath(xml(triggerBody()),'.//SAP_NUMBER/text()')?[0], string('null')), null, string(xpath(xml(triggerBody()),'.//SAP_NUMBER/text()')?[0]))}",
                                    "S4SSales_Status__c": "@{variables('salesStatus')}",
                                    "S4SSales_Type__c": "@{if(equals(xpath(xml(triggerBody()),'.//SALES_TYPE/text()')?[0], string('null')), null, string(xpath(xml(triggerBody()),'.//SALES_TYPE/text()')?[0]))}",
                                    "S4SStatus_since__c": "@{if(equals(xpath(xml(triggerBody()),'.//STATUS_SINCE/text()')?[0], string('null')), null, string(xpath(xml(triggerBody()),'.//STATUS_SINCE/text()')?[0]))}",
                                    "StageName": "@{variables('stageName')}",
                                    "Type": "@{variables('varOptyType')}"
                                }
                            },
                            "Condition_check_on_createNewOpportunity_status_code": {
                                "actions": {
                                    "Set_CompanyID_when_new_opportunity_is_created": {
                                        "runAfter": {
                                            "Set_OpportunityID_when_new_opportunity_is_created": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "varCompanyId",
                                            "value": "@{body('createNewOpportunity')?['AccountId']}"
                                        }
                                    },
                                    "Set_OpportunityID_when_new_opportunity_is_created": {
                                        "runAfter": {},
                                        "type": "SetVariable",
                                        "inputs": {
                                            "name": "OPP_ID",
                                            "value": "@{body('createNewOpportunity')?['Id']}"
                                        }
                                    }
                                },
                                "runAfter": {
                                    "createNewOpportunity": [
                                        "Succeeded",
                                        "Failed"
                                    ]
                                },
                                "else": {
                                    "actions": {
                                        "Compose_Error_Message_for_createNewOpportunity": {
                                            "runAfter": {},
                                            "type": "Compose",
                                            "inputs": "@xml(replace(replace(replace(variables('UpsertOffer_Response'),'####UpsertOffer_Response####',''),'##Result##','Failure'),'##ERROR_MSG##',coalesce(json(string(body('createNewOpportunity')))?['error']?['innerError']?['message'],json(string(body('createNewOpportunity')))?['message'])))"
                                        },
                                        "FailedResponse_createNewOpportunity": {
                                            "runAfter": {
                                                "Compose_Error_Message_for_createNewOpportunity": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Response",
                                            "kind": "Http",
                                            "inputs": {
                                                "body": "@outputs('Compose_Error_Message_for_createNewOpportunity')",
                                                "headers": {
                                                    "Content-Type": "text/xml"
                                                },
                                                "statusCode": 200
                                            }
                                        },
                                        "Terminate_Failed": {
                                            "runAfter": {
                                                "FailedResponse_createNewOpportunity": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Terminate",
                                            "inputs": {
                                                "runStatus": "Failed"
                                            }
                                        }
                                    }
                                },
                                "expression": {
                                    "and": [
                                        {
                                            "equals": [
                                                "@json(string(outputs('createNewOpportunity')))?['statusCode']",
                                                200
                                            ]
                                        }
                                    ]
                                },
                                "type": "If"
                            },
                            "createNewOpportunity": {
                                "runAfter": {
                                    "ComposeCreateOpp": [
                                        "Succeeded"
                                    ]
                                },
                                "type": "Workflow",
                                "inputs": {
                                    "body": "@outputs('ComposeCreateOpp')",
                                    "host": {
                                        "triggerName": "manual",
                                        "workflow": {
                                            "id": "[parameters('InsertUpdateOpportunity_logicApp_id')]"
                                        }
                                    },
                                    "retryPolicy": {
                                        "type": "none"
                                    }
                                }
                            }
                        }
                    },
                    "expression": {
                        "and": [
                            {
                                "not": {
                                    "equals": [
                                        "@variables('OPP_ID')",
                                        "@null"
                                    ]
                                }
                            },
                            {
                                "not": {
                                    "equals": [
                                        "@variables('OPP_ID')",
                                        "@string('')"
                                    ]
                                }
                            },
                            {
                                "not": {
                                    "equals": [
                                        "@variables('OPP_ID')",
                                        "@string('null')"
                                    ]
                                }
                            }
                        ]
                    },
                    "type": "If"
                },
                "Check-SISIC_Code": {
                    "actions": {
                        "Condition_to_check_SISIC_ID": {
                            "actions": {},
                            "runAfter": {
                                "ExecuteSOQL-SISIC": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Create_SISIC": {
                                        "runAfter": {},
                                        "type": "Http",
                                        "inputs": {
                                            "headers": {
                                                "Authorization": "Bearer @{body('HTTP_Get_SF_Token_for_Non__SFS')}"
                                            },
                                            "body": {
                                                "Name": "@{xpath(xml(triggerBody()),'.//SISIC_CODE/text()')?[0]}"
                                            },
                                          
                                            "method": "post",
  
                                            "uri": "${instance_NonSFS_URL}/sobjects/S4SSISIC__c/"
                                          }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "not": {
                                            "equals": [
                                                "@body('ExecuteSOQL-SISIC')?['records']?[0]?['Id']",
                                                "@null"
                                            ]
                                        }
                                    },
                                    {
                                        "not": {
                                            "equals": [
                                                "@body('ExecuteSOQL-SISIC')?['records']?[0]?['Id']",
                                                "@string('')"
                                            ]
                                        }
                                    },
                                    {
                                        "not": {
                                            "equals": [
                                                "@body('ExecuteSOQL-SISIC')?['records']?[0]?['Id']",
                                                "@string('null')"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "ExecuteSOQL-SISIC": {
                            "runAfter": {},
                            "type": "Http",
                            "inputs": {
                              "headers": {
                                "Authorization": "Bearer @{body('HTTP_Get_SF_Token_for_Non__SFS')}"
                                },
                                "queries": {
                                    "q": "SELECT Id,Name,S4SIndustry_Description__c,S4SIndustry_Segment__c FROM S4SSISIC__c WHERE Name = '@{xpath(xml(triggerBody()),'.//SISIC_CODE/text()')?[0]}'"
                                },
                                
                                "method": "GET",
                                "uri": "${instance_NonSFS_URL}/query"
                            }
                        }
                    },
                    "runAfter": {
                        "Check-StageName": [
                            "Succeeded"
                        ],
                        "Check_-OPTY_TYPE": [
                            "Succeeded"
                        ],
                        "Check_-SUCCESS_CHANCE": [
                            "Succeeded"
                        ]
                    },
                    "expression": {
                        "and": [
                            {
                                "not": {
                                    "equals": [
                                        "@xpath(xml(triggerBody()),'.//SISIC_CODE/text()')?[0]",
                                        "@null"
                                    ]
                                }
                            },
                            {
                                "not": {
                                    "equals": [
                                        "@xpath(xml(triggerBody()),'.//SISIC_CODE/text()')?[0]",
                                        "@string('')"
                                    ]
                                }
                            },
                            {
                                "not": {
                                    "equals": [
                                        "@xpath(xml(triggerBody()),'.//SISIC_CODE/text()')?[0]",
                                        "@string('null')"
                                    ]
                                }
                            }
                        ]
                    },
                    "type": "If"
                },
                "Check-StageName": {
                    "actions": {
                        "Set_stagename": {
                            "runAfter": {},
                            "type": "SetVariable",
                            "inputs": {
                                "name": "stageName",
                                "value": "@{coalesce(json(body('FetchKVSecret'))?['StageName']?[variables('varStageName')], null)}"
                            }
                        }
                    },
                    "runAfter": {
                        "FetchKVSecret": [
                            "Succeeded"
                        ]
                    },
                    "expression": {
                        "and": [
                            {
                                "not": {
                                    "equals": [
                                        "@variables('stageName')",
                                        "@string('')"
                                    ]
                                }
                            },
                            {
                                "not": {
                                    "equals": [
                                        "@variables('stageName')",
                                        "@null"
                                    ]
                                }
                            },
                            {
                                "not": {
                                    "equals": [
                                        "@variables('stageName')",
                                        "@string('null')"
                                    ]
                                }
                            }
                        ]
                    },
                    "type": "If"
                },
                "Check_-OPTY_TYPE": {
                    "actions": {
                        "SetVariable-OptyType": {
                            "runAfter": {},
                            "type": "SetVariable",
                            "inputs": {
                                "name": "varOptyType",
                                "value": "@{coalesce(json(body('FetchKVSecret'))?['OpportunityType']?[xpath(xml(triggerBody()),'.//OPTY_TYPE/text()')?[0]], xpath(xml(triggerBody()),'.//OPTY_TYPE/text()')?[0])}"
                            }
                        }
                    },
                    "runAfter": {
                        "FetchKVSecret": [
                            "Succeeded"
                        ]
                    },
                    "expression": {
                        "and": [
                            {
                                "not": {
                                    "equals": [
                                        "@xpath(xml(triggerBody()),'.//OPTY_TYPE/text()')?[0]",
                                        "@string('')"
                                    ]
                                }
                            },
                            {
                                "not": {
                                    "equals": [
                                        "@xpath(xml(triggerBody()),'.//OPTY_TYPE/text()')?[0]",
                                        "@null"
                                    ]
                                }
                            },
                            {
                                "not": {
                                    "equals": [
                                        "@xpath(xml(triggerBody()),'.//OPTY_TYPE/text()')?[0]",
                                        "@string('null')"
                                    ]
                                }
                            }
                        ]
                    },
                    "type": "If"
                },
                "Check_-SUCCESS_CHANCE": {
                    "actions": {},
                    "runAfter": {
                        "FetchKVSecret": [
                            "Succeeded"
                        ]
                    },
                    "expression": {
                        "and": [
                            {
                                "not": {
                                    "equals": [
                                        "@xpath(xml(triggerBody()),'.//SUCCESS_CHANCE/text()')?[0]",
                                        "@null"
                                    ]
                                }
                            },
                            {
                                "not": {
                                    "equals": [
                                        "@xpath(xml(triggerBody()),'.//SUCCESS_CHANCE/text()')?[0]",
                                        "@string('')"
                                    ]
                                }
                            },
                            {
                                "not": {
                                    "equals": [
                                        "@xpath(xml(triggerBody()),'.//SUCCESS_CHANCE/text()')?[0]",
                                        "@string('null')"
                                    ]
                                }
                            }
                        ]
                    },
                    "type": "If"
                },
                "ComposeResponse": {
                    "runAfter": {
                        "Check-MainContactPerson_AND_OPP_ID": [
                            "Succeeded"
                        ]
                    },
                    "type": "Compose",
                    "inputs": "<OFFER_ID>@{xpath(xml(triggerBody()),'.//OFFER_ID/text()')?[0]}</OFFER_ID>\n<OPPORTUNITY_ID>@{variables('OPP_ID')}</OPPORTUNITY_ID>\n<IFA_NUMBER>@{xpath(xml(triggerBody()),'.//IFA_NUMBER/text()')?[0]}</IFA_NUMBER>\n<COMPANY_ID>@{variables('varCompanyId')}</COMPANY_ID>"
                },
                "ComposeSuccessResponse": {
                    "runAfter": {
                        "Set_responseVariable": [
                            "Succeeded"
                        ]
                    },
                    "type": "Compose",
                    "inputs": "@xml(replace(replace(replace(variables('UpsertOffer_Response'),'####UpsertOffer_Response####',string(variables('OPP_ID'))),'##Result##','true'),'##ERROR_MSG##',''))"
                },
                "Condition_to_Check_IFA_Number": {
                    "actions": {
                        "ExecuteSOQL-Account": {
                            "runAfter": {},
                            "type": "Http",
                            "inputs": {
                                "headers": {
                                  "Authorization": "Bearer @{body('HTTP_Get_SF_Token_for_Non__SFS')}"
                                },
                                "queries": {
                                    "q": "SELECT Id,IsDeleted,Name,BillingStreet,BillingCity,BillingState,BillingPostalCode,BillingCountry,BillingCountryCode,ShippingStreet,ShippingCity,ShippingState,ShippingPostalCode,ShippingCountry,Website,Ownership,CreatedDate,LastModifiedDate,S4SAccount_Name_International__c,S4SCID_Number__c,S4SCMD_KUKLA__c,S4SCMD_NAME1__c,S4SCMD_NAME2__c,S4SCMD_NAME3__c,S4SCMD_REGION__c,S4SCity_PO_Box_International__c,S4SCity_PO_Box__c,S4SCompany_Postal_Code__c,S4SDUNS__c,S4SDomestic_Ultimate_DUNS__c,S4SGlobal_Ultimate_DUNS__c,S4SISIC__c,S4SIfA__c,S4SInternational_City__c,S4SInternational_CountryGP__c,S4SInternational_Country__c,S4SInternational_Postal_Code__c,S4SInternational_RegionGP__c,S4SInternational_Region__c,S4SInternational_Steet_Name_2__c,S4SInternational_Street_Name_1__c,S4SLegalOwner__c,S4SMD_Status__c,S4SNat_Company_ID__c,S4SNo_Legal_Form_available__c,S4SNotification_from_CMD__c,S4SPO_Box_Postcode__c,S4SPO_box__c,S4SSISIC_Direct__c,S4STax_ID__c,LastModifiedBy.LastModifiedDate FROM Account WHERE S4SIfA__c='@{xpath(xml(triggerBody()),'.//IFA_NUMBER/text()')?[0]}'"
                                },
                                
                                "method": "GET",
                                "uri": "${instance_NonSFS_URL}/query"
                            }
                        },
                        "Set_variable_-AccounID": {
                            "runAfter": {
                                "ExecuteSOQL-Account": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "SoqlAccountId",
                                "value": "@{body('ExecuteSOQL-Account')?['records']?[0]?['Id']}"
                            }
                        }
                    },
                    "runAfter": {},
                    "expression": {
                        "and": [
                            {
                                "not": {
                                    "equals": [
                                        "@xpath(xml(triggerBody()),'.//IFA_NUMBER/text()')?[0]",
                                        "@string('')"
                                    ]
                                }
                            },
                            {
                                "not": {
                                    "equals": [
                                        "@xpath(xml(triggerBody()),'.//IFA_NUMBER/text()')?[0]",
                                        "@null"
                                    ]
                                }
                            },
                            {
                                "not": {
                                    "equals": [
                                        "@xpath(xml(triggerBody()),'.//IFA_NUMBER/text()')?[0]",
                                        "@string('null')"
                                    ]
                                }
                            }
                        ]
                    },
                    "type": "If"
                },
                "ExecuteSOQL-User": {
                    "runAfter": {
                        "Condition_to_Check_IFA_Number": [
                            "Succeeded"
                        ]
                    },
                    "type": "Http",
                    "inputs": {
                        "headers": {
                            "Authorization": "Bearer @{body('HTTP_Get_SF_Token_for_Non__SFS')}"
                        },
  
                        "queries": {
                            "q": "SELECT Id, LastName, FirstName, Department, Country, CountryCode, Email, Phone, MobilePhone, isActive, S4SGID_Technical__c, S4SLead_Country__c, S4SUser_s_Country__c FROM User WHERE S4SGID_Technical__c='@{xpath(xml(triggerBody()),'.//SALESREP_GID/text()')?[0]}'"
                        },
                        
                        "method": "GET",
                        "uri": "${instance_NonSFS_URL}/query"
                    }
                },
                "FetchKVSecret": {
                    "runAfter": {
                        "ExecuteSOQL-User": [
                            "Succeeded"
                        ]
                    },
                    "type": "Workflow",
                    "inputs": {
                        "CoS": {
                            "10": "10%",
                            "20": "30%",
                            "30": "30%",
                            "40": "50%",
                            "50": "50%",
                            "60": "70%",
                            "70": "70%",
                            "80": "80%",
                            "90": "90%",
                            "100": "100%"
                        },
                        "OpportunityType": {
                            "Oppt. Product": "Product / System",
                            "Oppt. Service": "Service",
                            "Oppt. Solution": "Project / Solution",
                            "Oppt. System": "Project / Solution"
                        },
                        "StageName": {
                            "1": "1 - Opportunity Development",
                            "2": "2 - Bid Preparation",
                            "3": "3 - Contract Negotiation",
                            "4": "Closed Won"
                        },
                        "body": {
                            "key": "goi-lookup-config"
                        },
                        "host": {
                            "triggerName": "manual",
                            "workflow": {
                                "id": "[parameters('getConfiguration_logicAppId')]"
                            }
                        }
                    }
                },
                "Response": {
                    "runAfter": {
                        "ComposeSuccessResponse": [
                            "Succeeded"
                        ]
                    },
                    "type": "Response",
                    "kind": "Http",
                    "inputs": {
                        "body": "@xml(replace(trim(string(xml(string(outputs('ComposeSuccessResponse'))))),'<ERROR_MSG />',''))",
                        "headers": {
                            "Content-Type": "text/xml"
                        },
                        "statusCode": 200
                    }
                },
                "Set_responseVariable": {
                    "runAfter": {
                        "ComposeResponse": [
                            "Succeeded"
                        ]
                    },
                    "type": "SetVariable",
                    "inputs": {
                        "name": "OPP_ID",
                        "value": "@{outputs('ComposeResponse')}"
                    }
                }
            },
            "runAfter": {
              "HTTP_Get_SF_Token_for_Non__SFS": [
                "Succeeded"
              ]
            },
            "type": "Scope"
        }
    },
    "outputs": {}
  }

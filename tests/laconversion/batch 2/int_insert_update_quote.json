{
	"$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"$connections": {
			"defaultValue": {},
			"type": "Object"
		}
	},
	"triggers": {
		"manual": {
			"type": "Request",
			"kind": "Http",
			"inputs": {}
		}
	},
	"actions": {
		"HTTP_Get_SF_Token_for_Non__SFS": {
			"inputs": {
				"headers": {
					"Ocp-Apim-Subscription-Key": "${apimKey}"
				},
				"method": "POST",
				"uri": "${baseUrl_apim_ise}/c00031/token/oAuth/nonsfs"
			},
			"runAfter": {},
			"type": "Http"
		},
		"Scope_Catch": {
			"actions": {
				"Response_in_Catch": {
					"runAfter": {},
					"type": "Response",
					"kind": "Http",
					"inputs": {
						"body": {
							"Message": "@concat('Some error occurred while processing the request. Please find more details using tracking id : ', workflow()['run']['name'],' for Logic App: ', workflow()?['name'])",
							"Status": "Failure"
						},
						"headers": {
							"Content-Type": "application/json"
						},
						"statusCode": 500
					}
				},
				"Terminate": {
					"runAfter": {
						"Response_in_Catch": [
							"Succeeded"
						]
					},
					"type": "Terminate",
					"inputs": {
						"runStatus": "Failed"
					}
				}
			},
			"runAfter": {
				"Scope_Try": [
					"Failed",
					"Skipped",
					"TimedOut"
				]
			},
			"type": "Scope"
		},
		"Scope_Try": {
			"actions": {
				"Condition_to_check_Id": {
					"actions": {
						"Condition_to_check_create_statusCode": {
							"actions": {
								"Create_Opportunity_Response": {
									"runAfter": {},
									"type": "Response",
									"kind": "Http",
									"inputs": {
										"body": "@body('Create_record')",
										"headers": {
											"Content-Type": "application/json"
										},
										"statusCode": 200
									}
								}
							},
							"runAfter": {
								"Create_record": [
									"Succeeded",
									"Failed"
								]
							},
							"else": {
								"actions": {
									"Failure_Response": {
										"runAfter": {},
										"type": "Response",
										"kind": "Http",
										"inputs": {
											"body": {
												"message": "@{coalesce(outputs('Create_record')?['body']?[0]?['message'])}",
												"Workflow Run Id": "@{triggerOutputs()['headers']?['x-ms-workflow-run-id']}",
												"success": false
											},
											"headers": {
												"Content-Type": "application/json"
											},
											"statusCode": "@outputs('Create_record')?['statusCode']"
										}
									}
								}
							},
							"expression": {
								"or": [
									{
										"equals": [
											"@outputs('Create_record')?['statusCode']",
											200
										]
									},
									{
										"equals": [
											"@outputs('Create_record')?['statusCode']",
											201
										]
									}
								]
							},
							"type": "If"
						},
						"Create_record": {
							"runAfter": {},
							"type": "Http",
							"inputs": {
								"headers": {
									"Authorization": "Bearer @{body('HTTP_Get_SF_Token_for_Non__SFS')}"
									},
								"body": "@json(body('JsonRemoveNullOrEmptyFunc')?['result']?['restructuredJson'])",
								
								"method": "post",
								
								"uri": "${instance_NonSFS_URL}/sobjects/Quote/",
								"retryPolicy": {
									"type": "none"
								}
							}
						}
					},
					"runAfter": {
						"JsonRemoveNullOrEmptyFunc": [
							"Succeeded"
						]
					},
					"else": {
						"actions": {
							"Condition_to_check_statusCode_of_Update": {
								"actions": {
									"Success_Response": {
										"runAfter": {},
										"type": "Response",
										"kind": "Http",
										"inputs": {
											"body": "@body('Insert_or_Update_(Upsert)_a_Record_by_External_ID')",
											"headers": {
												"Content-Type": "application/json"
											},
											"statusCode": 200
										}
									}
								},
								"runAfter": {
									"Insert_or_Update_(Upsert)_a_Record_by_External_ID": [
										"Succeeded",
										"Failed"
									]
								},
								"else": {
									"actions": {
										"Error_Response": {
											"runAfter": {},
											"type": "Response",
											"kind": "Http",
											"inputs": {
												"body": {
													"message": "@{coalesce(outputs('Insert_or_Update_(Upsert)_a_Record_by_External_ID')?['body']?[0]?['message'])}",
													"Workflow Run Id": "@{triggerOutputs()['headers']?['x-ms-workflow-run-id']}",
													"success": false
												},
												"headers": {
													"Content-Type": "application/json"
												},
												"statusCode": "@outputs('Insert_or_Update_(Upsert)_a_Record_by_External_ID')?['statusCode']"
											}
										}
									}
								},
								"expression": {
									"and": [
										{
											"equals": [
												"@outputs('Insert_or_Update_(Upsert)_a_Record_by_External_ID')?['statusCode']",
												200
											]
										}
									]
								},
								"type": "If"
							},
							"Insert_or_Update_(Upsert)_a_Record_by_External_ID": {
								"runAfter": {},
								"type": "Http",
								"inputs": {
									"headers": {
										"Authorization": "Bearer @{body('HTTP_Get_SF_Token_for_Non__SFS')}"
										},
									"body": "@removeProperty(json(body('JsonRemoveNullOrEmptyFunc')?['result']?['restructuredJson']),'Id')",
									
									"method": "patch",
								
									"uri": "${instance_NonSFS_URL}/sobjects/Quote/Id/@{triggerBody()?['Id']}",
									"retryPolicy": {
										"type": "none"
									}
								}
							}
						}
					},
					"expression": {
						"or": [
							{
								"equals": [
									"@json(body('JsonRemoveNullOrEmptyFunc')?['result']?['restructuredJson'])?['Id']",
									"@null"
								]
							},
							{
								"equals": [
									"@json(body('JsonRemoveNullOrEmptyFunc')?['result']?['restructuredJson'])?['Id']",
									"@string('')"
								]
							}
						]
					},
					"type": "If"
				},
				"JsonRemoveNullOrEmptyFunc": {
					"runAfter": {},
					"type": "Function",
					"inputs": {
						"authentication": {
							"type": "Raw",
							"value": "[parameters('functionAppKey')]"
						},
						"body": {
							"CorrelationId": "@{triggerOutputs()['headers']?['correlationid']}",
							"InputRequestBase64": "@{base64(triggerBody())}",
							"InterfaceName": "internal_insert_update_quote",
							"Username": "@{triggerOutputs()['headers']?['Username']}",
							"operation": "JsonRemoveNullOrEmpty"
						},
						"function": {
							"id": "[concat(parameters('funcApp'), '/functions/JsonRemoveNullOrEmptyFunc')]"
						}
					}
				}
			},
			"runAfter": {"HTTP_Get_SF_Token_for_Non__SFS": [
				"Succeeded"
			]},
			"trackedProperties": {
				"apimRouting": "@{coalesce(triggerOutputs()?['headers']?['apimRouting'], 'external')}",
				"citizenName": "c00031",
				"correlationId": "@{coalesce(triggerOutputs()?['headers']?['correlationId'], triggerOutputs()?['headers']?['x-ms-client-tracking-id'], 'not-defined')}",
				"interfaceName": "@{coalesce(triggerOutputs()?['headers']?['interfaceName'], 'shared')}",
				"interfacePartner": "@{coalesce(triggerOutputs()?['headers']?['Username'], 'not-defined')}",
				"interfaceVersion": "@{coalesce(triggerOutputs()?['headers']?['interfaceVersion'], 'not-defined')}",
				"operationName": "@{coalesce(triggerOutputs()?['headers']?['operationName'], 'internal_insert_update_Quote')}",
				"parentWorkflow": "@{coalesce(triggerOutputs()?['headers']?['x-ms-workflow-name'],'not-defined')}"
			},
			"type": "Scope"
		}
	},
	"outputs": {}

}
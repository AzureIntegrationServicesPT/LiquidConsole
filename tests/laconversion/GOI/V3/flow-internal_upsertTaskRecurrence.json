{
    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Scope_Catch": {
                "actions": {
                    "Response_in_Catch": {
                        "inputs": {
                            "body": {
                                "errormessagedetails": "@concat('Some error occurred while connection. Please find more details using tracking id : ', workflow()['run']['name'])"
                            },
                            "headers": {
                                "Content-Type": "application/json"
                            },
                            "statusCode": 500
                        },
                        "kind": "Http",
                        "runAfter": {},
                        "type": "Response"
                    },
                    "Terminate": {
                        "inputs": {
                            "runStatus": "Failed"
                        },
                        "runAfter": {
                            "Response_in_Catch": [
                                "Succeeded"
                            ]
                        },
                        "type": "Terminate"
                    }
                },
                "runAfter": {
                    "Scope_Try": [
                        "Failed",
                        "Skipped",
                        "TimedOut"
                    ]
                },
                "type": "Scope"
            },
            "Scope_Try": {
                "actions": {
                    "Compose_Request_Body": {
                        "inputs": "@triggerBody()?['Task']",
                        "runAfter": {},
                        "type": "Compose"
                    },
                    "Compose_request_for_insert": {
                        "inputs": {
                            "ActivityDate": "@{outputs('Compose_Request_Body')?['DueDate']}",
                            "Description": "@{outputs('Compose_Request_Body')?['Comments']}",
                            "OwnerId": "@{outputs('Compose_Request_Body')?['Assigned_to_ID']}",
                            "Priority": "@{outputs('Compose_Request_Body')?['Priority']}",
                            "S4SAdditional_Information__c": "@{outputs('Compose_Request_Body')?['S4SAdditional_Information__c']}",
                            "S4SBU__c": "@{outputs('Compose_Request_Body')?['S4SBU__c']}",
                            "S4SCompleted_Date__c": "@{outputs('Compose_Request_Body')?['S4SCompleted_Date__c']}",
                            "S4SDelegated_By__c": "@{outputs('Compose_Request_Body')?['Delegated_by_ID']}",
                            "S4SDivision__c": "@{outputs('Compose_Request_Body')?['S4SDivision__c']}",
                            "S4SDocLocation_BeLux__c": "@{outputs('Compose_Request_Body')?['S4SDocLocation_BeLux__c']}",
                            "S4SOpportunity_Milestone__c": "@{outputs('Compose_Request_Body')?['S4SOpportunity_Milestone__c']}",
                            "S4SOther_Topics__c": "@{outputs('Compose_Request_Body')?['S4SOther_Topic__c']}",
                            "S4SReason__c": "@{outputs('Compose_Request_Body')?['S4SReason__c']}",
                            "Status": "@{outputs('Compose_Request_Body')?['S4SStatus__c']}",
                            "S4STraining_Topic__c": "@{outputs('Compose_Request_Body')?['S4STraining_Topic__c']}",
                            "Subject": "@{outputs('Compose_Request_Body')?['Subject']}",
                            "Type": "@{outputs('Compose_Request_Body')?['Type']}",
                            "WhatId": "@{coalesce(if(equals(outputs('Compose_Request_Body')?['AccountId'],''),null,outputs('Compose_Request_Body')?['AccountId']),if(equals(outputs('Compose_Request_Body')?['OpportunityId'],''),null,outputs('Compose_Request_Body')?['OpportunityId']))}",
                            "WhoId": "@{outputs('Compose_Request_Body')?['ContactId']}"
                        },
                        "runAfter": {
                            "Compose_Request_Body": [
                                "Succeeded"
                            ]
                        },
                        "type": "Compose"
                    },
                    "Condition_check_for_Assigned_to_ID": {
                        "actions": {
                            "Condition_Check_for_S4SStatus__c": {
                                "actions": {
                                    "Condition_Check_for_Priority": {
                                        "actions": {
                                            "Condition_check_for_S4SDivision__c": {
                                                "actions": {
                                                    "Create_record": {
                                                        "inputs": {
                                                            "body": "@outputs('Compose_request_for_insert')",
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['salesForceConnection']['connectionId']"
                                                                }
                                                            },
                                                            "method": "post",
                                                            "path": "/v2/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('Task'))}/items",
                                                            "retryPolicy": {
                                                                "type": "none"
                                                            }
                                                        },
                                                        "runAfter": {},
                                                        "type": "ApiConnection"
                                                    },
                                                    "Response_for_Create_Record": {
                                                        "inputs": {
                                                            "body": "@body('Create_record')",
                                                            "headers": {
                                                                "Content-Type": "application/json"
                                                            },
                                                            "statusCode": 200
                                                        },
                                                        "kind": "Http",
                                                        "runAfter": {
                                                            "Create_record": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "Response"
                                                    }
                                                },
                                                "else": {
                                                    "actions": {
                                                        "Response_for_S4SDivision": {
                                                            "inputs": {
                                                                "body": "Please provide S4SDivition value....",
                                                                "statusCode": 422
                                                            },
                                                            "kind": "Http",
                                                            "runAfter": {},
                                                            "type": "Response"
                                                        }
                                                    }
                                                },
                                                "expression": {
                                                    "and": [
                                                        {
                                                            "not": {
                                                                "equals": [
                                                                    "@outputs('Compose_Request_Body')?['S4SDivision__c']",
                                                                    ""
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "not": {
                                                                "equals": [
                                                                    "@outputs('Compose_Request_Body')?['S4SDivision__c']",
                                                                    "@null"
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                },
                                                "runAfter": {},
                                                "type": "If"
                                            }
                                        },
                                        "else": {
                                            "actions": {
                                                "Response_for_Priority": {
                                                    "inputs": {
                                                        "body": "Please provide Priority value.....",
                                                        "statusCode": 422
                                                    },
                                                    "kind": "Http",
                                                    "runAfter": {},
                                                    "type": "Response"
                                                }
                                            }
                                        },
                                        "expression": {
                                            "and": [
                                                {
                                                    "not": {
                                                        "equals": [
                                                            "@outputs('Compose_Request_Body')?['Priority']",
                                                            ""
                                                        ]
                                                    }
                                                },
                                                {
                                                    "not": {
                                                        "equals": [
                                                            "@outputs('Compose_Request_Body')?['Priority']",
                                                            "@null"
                                                        ]
                                                    }
                                                }
                                            ]
                                        },
                                        "runAfter": {},
                                        "type": "If"
                                    }
                                },
                                "else": {
                                    "actions": {
                                        "Response_S4SStatus": {
                                            "inputs": {
                                                "body": "Please provide S4SStatus value......",
                                                "statusCode": 422
                                            },
                                            "kind": "Http",
                                            "runAfter": {},
                                            "type": "Response"
                                        }
                                    }
                                },
                                "expression": {
                                    "and": [
                                        {
                                            "not": {
                                                "equals": [
                                                    "@outputs('Compose_Request_Body')?['S4SStatus__c']",
                                                    ""
                                                ]
                                            }
                                        },
                                        {
                                            "not": {
                                                "equals": [
                                                    "@outputs('Compose_Request_Body')?['S4SStatus__c']",
                                                    "@null"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "runAfter": {},
                                "type": "If"
                            }
                        },
                        "else": {
                            "actions": {
                                "Response_Assigned_To_Id": {
                                    "inputs": {
                                        "body": "Please provide Assigned To Id value.......",
                                        "statusCode": 422
                                    },
                                    "kind": "Http",
                                    "runAfter": {},
                                    "type": "Response"
                                }
                            }
                        },
                        "expression": {
                            "and": [
                                {
                                    "not": {
                                        "equals": [
                                            "@outputs('Compose_Request_Body')?['Assigned_to_ID']",
                                            ""
                                        ]
                                    }
                                },
                                {
                                    "not": {
                                        "equals": [
                                            "@outputs('Compose_Request_Body')?['Assigned_to_ID']",
                                            "@null"
                                        ]
                                    }
                                }
                            ]
                        },
                        "runAfter": {
                            "Compose_request_for_insert": [
                                "Succeeded"
                            ]
                        },
                        "type": "If"
                    }
                },
                "runAfter": {},
                  "trackedProperties": {
                    "apimRouting": "@{coalesce(triggerOutputs()?['headers']?['apimRouting'], 'external')}",
                    "citizenName": "c00031",
                    "correlationId": "@{coalesce(triggerOutputs()?['headers']?['correlationId'], triggerOutputs()?['headers']?['x-ms-client-tracking-id'], 'not-defined')}",
                    "interfaceName": "@{coalesce(triggerOutputs()?['headers']?['interfaceName'], 'GOI')}",
                    "interfacePartner": "@{coalesce(triggerOutputs()?['headers']?['Username'], 'not-defined')}",
                    "interfaceVersion": "@{coalesce(triggerOutputs()?['headers']?['interfaceVersion'], 'V3')}",
                    "operationName": "@{coalesce(triggerOutputs()?['headers']?['operationName'], 'upsertTaskRecurrence')}",
                    "parentWorkflow": "@{coalesce(triggerOutputs()?['headers']?['x-ms-workflow-name'],'not-defined')}"
                },
                  "type": "Scope"
              }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {},
          "parameters": {
              "$connections": {
                  "defaultValue": {},
                  "type": "Object"
              }
          },
          "triggers": {
              "manual": {
                  "inputs": {
                      "schema": {}
                  },
                  "kind": "Http",
                  "type": "Request"
              }
    
      }
    }
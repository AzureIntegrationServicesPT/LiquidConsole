{
	"$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
	"actions": {
        "Condition_on_file_extension": {
            "actions": {
                "Move_file_from_incoming_to_working_dir": {
                    "actions": {
                        "BlobToZipConverterFunction": {
                            "inputs": {
                                "authentication": {
                                    "type": "Raw",
                                    "value": "Wmm9chA0i3HBHoREWKBrhiBSOXIRvYv/ace6yqeM7Seas8aPl3pyGQ=="
                                },
                                "body": {
                                    "blobContainerName": "@{parameters('BlobContainerName')}",
                                    "incomingBlobPath": "@{workflow()['run']['name']}/incoming",
                                    "incominigBlobName": "@{triggerBody()?['Name']}",
                                    "outcomingBlobPath": "@{workflow()['run']['name']}/zip"
                                },
                                "function": {
                                    "id": "[concat(parameters('funcApp'), '/functions/BlobToZipConverterFunction')]"
                                }
                            },
                            "runAfter": {
                                "Create_incoming_blob": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function"
                        },
                        "Create_incoming_blob": {
                            "inputs": {
                                "body": "@body('Get_received_file_content')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureBlobConnection']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('${st_name}'))}/files",
                                "queries": {
                                    "folderPath": "@{parameters('blobContainerName')}/@{workflow()['run']['name']}/incoming",
                                    "name": "@triggerBody()?['Name']",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runAfter": {
                                "Get_received_file_content": [
                                    "Succeeded"
                                ]
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            },
                            "type": "ApiConnection"
                        },
                        "Create_new_file_in_working_directory": {
                            "inputs": {
                                "body": "@body('Get_zip_blob_content_(V2)')",
                                "headers": {
                                    "ReadFileMetadataFromServer": false
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblobsftpssh']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files",
                                "queries": {
                                    "folderPath": "@parameters('workingPath')",
                                    "name": "@{substring(triggerBody()?['Name'], 0, sub(length(triggerBody()?['Name']), 4))}(@{convertTimeZone(utcNow(), 'UTC', 'Central Europe Standard Time')}).zip",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runAfter": {
                                "Get_zip_blob_content_(V2)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "Delete_file_from_incoming": {
                            "inputs": {
                                "headers": {
                                    "SkipDeleteIfFileNotFoundOnServer": false
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblobsftpssh']['connectionId']"
                                    }
                                },
                                "method": "delete",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files/@{encodeURIComponent(encodeURIComponent(triggerBody()?['Path']))}"
                            },
                            "runAfter": {
                                "Create_new_file_in_working_directory": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "Delete_zip_file_from_Blob_Container": {
                            "inputs": {
                                "headers": {
                                    "SkipDeleteIfFileNotFoundOnServer": false
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureBlobConnection']['connectionId']"
                                    }
                                },
                                "method": "delete",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files/@{encodeURIComponent(encodeURIComponent(parameters('BlobContainerName'),'/',body('BlobToZipConverterFunction')?['Value']))}"
                            },
                            "runAfter": {
                                "Delete_file_from_incoming": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "Get_received_file_content": {
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblobsftpssh']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files/@{encodeURIComponent(encodeURIComponent(triggerBody()?['Path']))}/content",
                                "queries": {
                                    "inferContentType": false
                                }
                            },
                            "runAfter": {},
                            "type": "ApiConnection"
                        },
                        "Get_zip_blob_content_(V2)": {
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureBlobConnection']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files/@{encodeURIComponent(encodeURIComponent(parameters('BlobContainerName'),'/',body('BlobToZipConverterFunction')?['Value']))}/content"
                            },
                            "runAfter": {
                                "BlobToZipConverterFunction": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        }
                    },
                    "runAfter": {},
                    "type": "Scope"
                }
            },
            "else": {
                "actions": {
                    "File_extension_not_correct": {
                        "inputs": {
                            "runError": {
                                "message": "File extension is not correct"
                            },
                            "runStatus": "Failed"
                        },
                        "runAfter": {},
                        "type": "Terminate"
                    }
                }
            },
            "expression": {
                "and": [
                    {
                        "contains": [
                            "@triggerBody()?['MediaType']",
                            "@parameters('fileFilter')"
                        ]
                    }
                ]
            },
            "runAfter": {
                "HTTP_Get_Token": [
                    "Succeeded"
                ],
                "Initialize_IncomingFileID": [
                    "Succeeded"
                ],
                "Initialize_ParentRunID": [
                    "Succeeded"
                ],
                "Initialize_variable_ErrorsCount": [
                    "Succeeded"
                ]
            },
            "type": "If"
        },
        "HTTP_Get_Token": {
            "inputs": {
                "headers": {
                    "Ocp-Apim-Subscription-Key": "${apimKey}"
                },
                "method": "POST",
                "uri": "${apimURL}"
            },
            "runAfter": {
                "Initialize_SecondBulkData": [
                    "Succeeded"
                ]
            },
            "type": "Http"
        },
        "Initialize_BulkData": {
            "inputs": {
                "variables": [
                    {
                        "name": "BulkData",
                        "type": "string"
                    }
                ]
            },
            "runAfter": {},
            "type": "InitializeVariable"
        },
        "Initialize_BulkState": {
            "inputs": {
                "variables": [
                    {
                        "name": "BulkState",
                        "type": "boolean",
                        "value": false
                    }
                ]
            },
            "runAfter": {
                "Initialize_BulkData": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_ConfigData": {
            "inputs": {
                "variables": [
                    {
                        "name": "configData",
                        "type": "string"
                    }
                ]
            },
            "runAfter": {},
            "type": "InitializeVariable"
        },
        "Initialize_IncomingFileID": {
            "inputs": {
                "variables": [
                    {
                        "name": "IncomingFileID",
                        "type": "string"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_CurrentTime": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_ParentRunID": {
            "inputs": {
                "variables": [
                    {
                        "name": "ParentRunID",
                        "type": "string"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_DeletedRecordsCount": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_Response": {
            "inputs": {
                "variables": [
                    {
                        "name": "Response",
                        "type": "string",
                        "value": "\"sf__Id\";\"sf__Error\";\"S4SDUNS__c\";\"S4SParent_DUNS__c\";\"S4SDomestic_Ultimate_DUNS__c\";\"S4SGlobal_Ultimate_DUNS__c\";\"S4SIfa__c\"\n"
                    }
                ]
            },
            "runAfter": {},
            "type": "InitializeVariable"
        },
        "Initialize_SecondBulkData": {
            "inputs": {
                "variables": [
                    {
                        "name": "SecondBulkData",
                        "type": "string"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_DeletionStatus": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_CurrentTime": {
            "inputs": {
                "variables": [
                    {
                        "name": "CurrentTime",
                        "type": "string",
                        "value": "@{convertTimeZone(utcNow(), 'UTC', 'Central Europe Standard Time')}"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_DeletionResult": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_DeletedRecordsCount": {
            "inputs": {
                "variables": [
                    {
                        "name": "DeletedRecordsCount",
                        "type": "integer",
                        "value": 0
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_FunctionResponse": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_DeletionResult": {
            "inputs": {
                "variables": [
                    {
                        "name": "DeletionResult",
                        "type": "string"
                    }
                ]
            },
            "runAfter": {
                "Initialize_ConfigData": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_DeletionStatus": {
            "inputs": {
                "variables": [
                    {
                        "name": "DeletionStatus",
                        "type": "boolean",
                        "value": false
                    }
                ]
            },
            "runAfter": {
                "Initialize_BulkState": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_ErrorsCount": {
            "inputs": {
                "variables": [
                    {
                        "name": "ErrorsCount",
                        "type": "integer",
                        "value": 0
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable__UnprocessedUpsertCounter": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_FunctionResponse": {
            "inputs": {
                "variables": [
                    {
                        "name": "FunctionResponse",
                        "type": "array"
                    }
                ]
            },
            "runAfter": {
                "Initialize_Response": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_RecordsCounter": {
            "inputs": {
                "variables": [
                    {
                        "name": "RecordsCounter",
                        "type": "integer",
                        "value": 0
                    }
                ]
            },
            "runAfter": {},
            "type": "InitializeVariable"
        },
        "Initialize_variable__UnprocessedUpsertCounter": {
            "inputs": {
                "variables": [
                    {
                        "name": "UnprocessedUpsertCounter",
                        "type": "integer",
                        "value": 0
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_RecordsCounter": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Move_file_to_error_dir": {
            "actions": {
                "Copy_file_to_error_dir": {
                    "inputs": {
                        "headers": {
                            "ReadFileMetadataFromServer": true
                        },
                        "host": {
                            "connection": {
                                "name": "@parameters('$connections')['azureblobsftpssh']['connectionId']"
                            }
                        },
                        "method": "post",
                        "path": "/datasets/default/copyFile",
                        "queries": {
                            "destination": "@parameters('errorPath')",
                            "overwrite": false,
                            "queryParametersSingleEncoded": true,
                            "source": "@body('Create_new_file_in_working_directory')?['Path']"
                        }
                    },
                    "runAfter": {},
                    "type": "ApiConnection"
                },
                "Delete_file_from_working_dir": {
                    "inputs": {
                        "headers": {
                            "SkipDeleteIfFileNotFoundOnServer": false
                        },
                        "host": {
                            "connection": {
                                "name": "@parameters('$connections')['azureblobsftpssh']['connectionId']"
                            }
                        },
                        "method": "delete",
                        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files/@{encodeURIComponent(encodeURIComponent(body('Create_new_file_in_working_directory')?['Path']))}"
                    },
                    "runAfter": {
                        "Copy_file_to_error_dir": [
                            "Succeeded"
                        ]
                    },
                    "type": "ApiConnection"
                },
                "File_processing_failed": {
                    "inputs": {
                        "runStatus": "Failed"
                    },
                    "runAfter": {
                        "Delete_file_from_working_dir": [
                            "Succeeded"
                        ]
                    },
                    "type": "Terminate"
                }
            },
            "runAfter": {
                "Proceed_file": [
                    "Failed",
                    "Skipped",
                    "TimedOut"
                ]
            },
            "type": "Scope"
        },
        "Move_file_to_processed_dir": {
            "actions": {
                "Copy_file_to_processed_dir": {
                    "inputs": {
                        "headers": {
                            "ReadFileMetadataFromServer": true
                        },
                        "host": {
                            "connection": {
                                "name": "@parameters('$connections')['azureblobsftpssh']['connectionId']"
                            }
                        },
                        "method": "post",
                        "path": "/datasets/default/copyFile",
                        "queries": {
                            "destination": "@parameters('processedPath')",
                            "overwrite": false,
                            "queryParametersSingleEncoded": true,
                            "source": "@body('Create_new_file_in_working_directory')?['Path']"
                        }
                    },
                    "runAfter": {},
                    "type": "ApiConnection"
                },
                "Delete_file_from_working": {
                    "inputs": {
                        "headers": {
                            "SkipDeleteIfFileNotFoundOnServer": false
                        },
                        "host": {
                            "connection": {
                                "name": "@parameters('$connections')['azureblobsftpssh']['connectionId']"
                            }
                        },
                        "method": "delete",
                        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files/@{encodeURIComponent(encodeURIComponent(body('Create_new_file_in_working_directory')?['Path']))}"
                    },
                    "runAfter": {
                        "Copy_file_to_processed_dir": [
                            "Succeeded"
                        ]
                    },
                    "type": "ApiConnection"
                }
            },
            "runAfter": {
                "Proceed_file": [
                    "Succeeded"
                ]
            },
            "type": "Scope"
        },
        "Proceed_file": {
            "actions": {
                "Get_blob_content_using_path_(V2)": {
                    "inputs": {
                        "host": {
                            "connection": {
                                "name": "@parameters('$connections')['azureBlobConnection']['connectionId']"
                            }
                        },
                        "method": "get",
                        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('${st_name}'))}/GetFileContentByPath",
                        "queries": {
                            "inferContentType": false,
                            "path": "@{parameters('blobContainerName')}/@{workflow()['run']['name']}/incoming/@{body('Create_incoming_blob')?['Name']}",
                            "queryParametersSingleEncoded": true
                        }
                    },
                    "runAfter": {},
                    "type": "ApiConnection"
                },
                "HTTP_Call_Batch_Job": {
                    "inputs": {
                        "body": "S4SDUNS__c;S4SParent_DUNS__c;S4SDomestic_Ultimate_DUNS__c;S4SGlobal_Ultimate_DUNS__c;S4SIfa__c\n@{body('Get_blob_content_using_path_(V2)')}",
                        "headers": {
                            "columnDelimiter": "SEMICOLON",
                            "externalIdFieldName": "S4SIfa__c",
                            "lineEnding": "LF",
                            "object": "Account",
                            "operation": "upsert",
                            "token": "@{body('HTTP_Get_Token')}"
                        },
                        "method": "POST",
                        "uri": "[concat('${las_uploadBatchGeneric_path}','?','${las_uploadBatchGeneric_querystring}')]"
                    },
                    "runAfter": {
                        "Get_blob_content_using_path_(V2)": [
                            "Succeeded"
                        ]
                    },
                    "type": "Http"
                }
            },
            "runAfter": {
                "Condition_on_file_extension": [
                    "Succeeded"
                ]
            },
            "type": "Scope"
        },
        "Save_error_logs": {
            "actions": {
                "Create_blob_for_Log_File": {
                    "inputs": {
                        "body": "@variables('Response')",
                        "headers": {
                            "ReadFileMetadataFromServer": true
                        },
                        "host": {
                            "connection": {
                                "name": "@parameters('$connections')['azureBlobConnection']['connectionId']"
                            }
                        },
                        "method": "post",
                        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files",
                        "queries": {
                            "folderPath": "@{parameters('BlobContainerName')}/@{workflow()['run']['name']}/incoming",
                            "name": "CSV_Log@{formatDateTime(utcNow(), 'yyyyMMddHHmmss')}.csv",
                            "queryParametersSingleEncoded": true
                        }
                    },
                    "runAfter": {},
                    "runtimeConfiguration": {
                        "contentTransfer": {
                            "transferMode": "Chunked"
                        }
                    },
                    "type": "ApiConnection"
                },
                "Create_error_log_file": {
                    "inputs": {
                        "body": "@body('Get_Log_blob_content')",
                        "headers": {
                            "ReadFileMetadataFromServer": true
                        },
                        "host": {
                            "connection": {
                                "name": "@parameters('$connections')['azureblobsftpssh']['connectionId']"
                            }
                        },
                        "method": "post",
                        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files",
                        "queries": {
                            "folderPath": "@parameters('logPath')",
                            "name": "Logs@{utcNow()}.zip",
                            "queryParametersSingleEncoded": true
                        }
                    },
                    "runAfter": {
                        "Get_Log_blob_content": [
                            "Succeeded"
                        ]
                    },
                    "runtimeConfiguration": {
                        "contentTransfer": {
                            "transferMode": "Chunked"
                        }
                    },
                    "type": "ApiConnection"
                },
                "Delete_Log_blob": {
                    "inputs": {
                        "headers": {
                            "SkipDeleteIfFileNotFoundOnServer": false
                        },
                        "host": {
                            "connection": {
                                "name": "@parameters('$connections')['azureBlobConnection']['connectionId']"
                            }
                        },
                        "method": "delete",
                        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files/@{encodeURIComponent(encodeURIComponent(body('Create_blob_for_Log_File')?['Id']))}"
                    },
                    "runAfter": {
                        "Create_error_log_file": [
                            "Succeeded"
                        ]
                    },
                    "type": "ApiConnection"
                },
                "Get_Log_blob_content": {
                    "inputs": {
                        "host": {
                            "connection": {
                                "name": "@parameters('$connections')['azureBlobConnection']['connectionId']"
                            }
                        },
                        "method": "get",
                        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files/@{encodeURIComponent(encodeURIComponent(parameters('BlobContainerName'),'/',body('Log_BlobToZipConverterFunction')?['Value']))}/content",
                        "queries": {
                            "inferContentType": true
                        }
                    },
                    "runAfter": {
                        "Log_BlobToZipConverterFunction": [
                            "Succeeded"
                        ]
                    },
                    "type": "ApiConnection"
                },
                "Log_BlobToZipConverterFunction": {
                    "inputs": {
                        "authentication": {
                            "type": "Raw",
                            "value": "Wmm9chA0i3HBHoREWKBrhiBSOXIRvYv/ace6yqeM7Seas8aPl3pyGQ=="
                        },
                        "body": {
                            "blobContainerName": "@{parameters('BlobContainerName')}",
                            "incomingBlobPath": "@{workflow()['run']['name']}/incoming",
                            "incominigBlobName": "@{body('Create_blob_for_Log_File')?['DisplayName']}",
                            "outcomingBlobPath": "@{workflow()['run']['name']}/logZip"
                        },
                        "function": {
                            "id": "[concat(parameters('funcApp'), '/functions/BlobToZipConverterFunction')]"
                        }
                    },
                    "runAfter": {
                        "Create_blob_for_Log_File": [
                            "Succeeded"
                        ]
                    },
                    "type": "Function"
                }
            },
            "runAfter": {
                "Move_file_to_processed_dir": [
                    "Succeeded"
                ]
            },
            "type": "Scope"
        }
    },
	"contentVersion": "1.0.0.0",
	"outputs": {},
	"parameters": {
        "$connections": {
            "defaultValue": {},
            "type": "Object"
        },
        "BlobContainerName": {
            "defaultValue": "sftp-container-c00031-dbnumbers",
            "type": "String"
        },
        "InterfaceRootPath": {
            "defaultValue": "/sftp-container-c00031/sftp-c00031/D&B/",
            "type": "String"
        },
        "delimeter": {
            "defaultValue": ";",
            "type": "String"
        },
        "errorPath": {
            "defaultValue": "/sftp-container-c00031/sftp-c00031/D&B/error",
            "type": "String"
        },
        "fileFilter": {
            "defaultValue": "text/csv",
            "type": "String"
        },
        "incomingPath": {
            "defaultValue": "/sftp-container-c00031/sftp-c00031/D&B/incoming",
            "type": "String"
        },
        "logPath": {
            "defaultValue": "/sftp-container-c00031/sftp-c00031/D&B/log",
            "type": "String"
        },
        "processedPath": {
            "defaultValue": "/sftp-container-c00031/sftp-c00031/D&B/archive",
            "type": "String"
        },
        "workingPath": {
            "defaultValue": "/sftp-container-c00031/sftp-c00031/D&B/working",
            "type": "String"
        }
    },
	"triggers": {
        "When_files_are_added_or_modified_(properties_only)": {
            "evaluatedRecurrence": {
                "frequency": "Minute",
                "interval": 20
            },
            "inputs": {
                "host": {
                    "connection": {
                        "name": "@parameters('$connections')['azureblobsftpssh']['connectionId']"
                    }
                },
                "method": "get",
                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/triggers/batch/onupdatedfile",
                "queries": {
                    "checkBothCreatedAndModifiedDateTime": false,
                    "folderId": "@parameters('incomingPath')",
                    "maxFileCount": 1
                }
            },
            "recurrence": {
                "frequency": "Minute",
                "interval": 20
            },
            "runtimeConfiguration": {
                "concurrency": {
                    "runs": 5
                }
            },
            "splitOn": "@triggerBody()",
            "type": "ApiConnection"
        }
    }
}
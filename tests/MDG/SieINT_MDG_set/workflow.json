{
  "definition": {
    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
    "actions": {
      "Check_negation_if_the_0th_record_exists_in_the_fetch_call": {
        "actions": {
          "For_each": {
            "actions": {
              "Call_int_SF_MDG_set": {
                "inputs": {
                  "host": {
                    "workflow": {
                      "id": "logic_mdg"
                    }
                  },
                  "body": {
                    "BearerToken": "Bearer @{body('logic-c00031-getSFOauthToken-weu-dev')?['access_token']}",
                    "InstanceURL": "@{body('logic-c00031-getSFOauthToken-weu-dev')?['instance_url']}",
                    "MDGRequest": "@{items('For_each')}",
                    "Sender": "@{body('Get_Sender_Name')?['Sender']}"
                  },
                  "headers": null
                },
                "runAfter": {
                  "Get_Sender_Name": [
                    "Succeeded"
                  ]
                },
                "type": "Workflow"
              },
              "Get_Sender_Name": {
                "inputs": {
                  "body": {
                    "Ids": "@body('Get_RecordTypeIds')?['IdArray']",
                    "Names": "@body('Get_RecordTypeIds')?['NameArray']",
                    "Record": "@items('For_each')"
                  },
                  "function": {
                    "connectionName": "Liquid"
                  },
                  "headers": {
                    "Accept": "application/json",
                    "Content-Type": "application/json",
                    "Filename": "SalesforceToMDGGetSenderName"
                  },
                  "method": "POST"
                },
                "runAfter": {},
                "type": "Function"
              }
            },
            "foreach": "@body('HTTP_fetchAccountsToProcess')?['records']",
            "runAfter": {},
            "type": "Foreach"
          }
        },
        "else": {
          "actions": {
            "Terminate": {
              "inputs": {
                "runStatus": "Succeeded"
              },
              "runAfter": {},
              "type": "Terminate"
            }
          }
        },
        "expression": {
          "and": [
            {
              "greaterOrEquals": [
                "@body('HTTP_fetchAccountsToProcess')?['totalSize']",
                1
              ]
            }
          ]
        },
        "runAfter": {
          "HTTP_fetchAccountsToProcess": [
            "Succeeded"
          ]
        },
        "type": "If"
      },
      "Get_RecordTypeIds": {
        "inputs": {
          "body": "@body('HTTP_fetchRecordTypes')",
          "function": {
            "connectionName": "Liquid"
          },
          "headers": {
            "Accept": "application/json",
            "Content-Type": "application/json",
            "Filename": "SalesforceToMDGGetRecordTypeIDs"
          },
          "method": "POST"
        },
        "runAfter": {
          "HTTP_fetchRecordTypes": [
            "Succeeded"
          ]
        },
        "type": "Function"
      },
      "HTTP_fetchAccountsToProcess": {
        "inputs": {
          "headers": {
            "Authorization": "Bearer @{body('logic-c00031-getSFOauthToken-weu-dev')?['access_token']}"
          },
          "method": "GET",
          "queries": {
            "q": "select @{parameters('Select fields')} from Account where @{parameters('fetchAccountWhereClausefromMDStatus')} and @{parameters('fetchAccountWhereClausefromRecordType')} in ('@{body('Get_RecordTypeIds')?['Ids']}') limit 100"
          },
          "retryPolicy": {
            "type": "none"
          },
          "uri": "@{body('logic-c00031-getSFOauthToken-weu-dev')?['instance_url']}/services/data/v55.0/query"
        },
        "runAfter": {
          "Get_RecordTypeIds": [
            "Succeeded"
          ]
        },
        "type": "Http"
      },
      "HTTP_fetchRecordTypes": {
        "inputs": {
          "headers": {
            "Authorization": "Bearer @{body('logic-c00031-getSFOauthToken-weu-dev')?['access_token']}"
          },
          "method": "GET",
          "queries": {
            "q": "@parameters('fetchRecordTypesWhereClause')"
          },
          "retryPolicy": {
            "type": "none"
          },
          "uri": "@{body('logic-c00031-getSFOauthToken-weu-dev')?['instance_url']}/services/data/v55.0/query"
        },
        "runAfter": {
          "logic-c00031-getSFOauthToken-weu-dev": [
            "Succeeded"
          ]
        },
        "type": "Http"
      },
      "logic-c00031-getSFOauthToken-weu-dev": {
        "inputs": {
          "host": {
            "workflow": {
              "id": "logic_getsfoauthtoken}"
            }
          },
          "body": {
            "tokenType": "SieINT"
          },
          "headers": null
        },
        "runAfter": {},
        "type": "Workflow"
      }
    },
    "contentVersion": "1.0.0.0",
    "outputs": {},
    "triggers": {
      "Recurrence": {
        "recurrence": {
          "frequency": "Minute",
          "interval": 15,
          "timeZone": "W. Europe Standard Time",
          "startTime": "2022-07-11T08:08:00Z"
        },
        "type": "Recurrence"
      }
    }
  },
  "kind": "Stateful"
}

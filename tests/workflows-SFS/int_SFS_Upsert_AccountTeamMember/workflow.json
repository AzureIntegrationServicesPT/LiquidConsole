{
  "definition": {
    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
    "actions": {
      "Check_status": {
        "actions": {
          "Response_success": {
            "inputs": {
              "body": "@coalesce(body('Create_record'), body('Insert_or_Update_(Upsert)_a_Record_by_External_ID'))",
              "statusCode": "@coalesce(outputs('Create_record')?['statusCode'],outputs('Insert_or_Update_(Upsert)_a_Record_by_External_ID')?['statusCode'])"
            },
            "kind": "Http",
            "runAfter": {},
            "runtimeConfiguration": {
              "secureData": {
                "properties": [
                  "inputs"
                ]
              }
            },
            "type": "Response"
          }
        },
        "else": {
          "actions": {
            "Response_failure": {
              "inputs": {
                "body": "@coalesce(body('Create_record'), body('Insert_or_Update_(Upsert)_a_Record_by_External_ID'))",
                "statusCode": "@coalesce(outputs('Create_record')?['statusCode'],outputs('Insert_or_Update_(Upsert)_a_Record_by_External_ID')?['statusCode'],500)"
              },
              "kind": "Http",
              "runAfter": {},
              "runtimeConfiguration": {
                "secureData": {
                  "properties": [
                    "inputs"
                  ]
                }
              },
              "type": "Response"
            },
            "Terminate": {
              "inputs": {
                "runStatus": "Failed"
              },
              "runAfter": {
                "Response_failure": [
                  "Succeeded"
                ]
              },
              "type": "Terminate"
            }
          }
        },
        "expression": {
          "or": [
            {
              "equals": [
                "@coalesce(outputs('Create_record')?['statusCode'],outputs('Insert_or_Update_(Upsert)_a_Record_by_External_ID')?['statusCode'])",
                200
              ]
            },
            {
              "equals": [
                "@coalesce(outputs('Create_record')?['statusCode'],outputs('Insert_or_Update_(Upsert)_a_Record_by_External_ID')?['statusCode'])",
                201
              ]
            }
          ]
        },
        "runAfter": {
          "Condition": [
            "Succeeded",
            "Failed"
          ]
        },
        "type": "If"
      },
      "Condition": {
        "actions": {
          "Create_record": {
            "inputs": {
              "body": "@removeProperty(triggerBody(),'Id')",
              "headers": {
                "Authorization": "Bearer @{body('HTTP-GetSFToken')}",
                "Content-Type": "application/json"
              },
              "method": "POST",
              "uri": "parameters('instanceURL')/sobjects/AccountTeamMember/"
            },
            "runAfter": {},
            "runtimeConfiguration": {
              "secureData": {
                "properties": [
                  "inputs",
                  "outputs"
                ]
              }
            },
            "type": "Http"
          }
        },
        "else": {
          "actions": {
            "Insert_or_Update_(Upsert)_a_Record_by_External_ID": {
              "inputs": {
                "body": "@removeProperty(triggerBody(),'Id')",
                "headers": {
                  "Authorization": "Bearer @{body('HTTP-GetSFToken')}",
                  "Content-Type": "application/json"
                },
                "method": "PATCH",
                "uri": "parameters('instanceURL')/sobjects/AccountTeamMember/Id/@{triggerBody()?['Id']}"
              },
              "runAfter": {},
              "runtimeConfiguration": {
                "secureData": {
                  "properties": [
                    "inputs",
                    "outputs"
                  ]
                }
              },
              "type": "Http"
            }
          }
        },
        "expression": {
          "or": [
            {
              "equals": [
                "@triggerBody()?['Id']",
                "@null"
              ]
            },
            {
              "equals": [
                "@triggerBody()?['Id']",
                "@string('')"
              ]
            }
          ]
        },
        "runAfter": {
          "HTTP-GetSFToken": [
            "Succeeded"
          ]
        },
        "type": "If"
      },
      "HTTP-GetSFToken": {
        "inputs": {
          "headers": {
            "Ocp-Apim-Subscription-Key": "parameters('apimKey')"
          },
          "method": "POST",
          "uri": "parameters('apimURL')"
        },
        "runAfter": {},
        "runtimeConfiguration": {
          "secureData": {
            "properties": [
              "inputs",
              "outputs"
            ]
          }
        },
        "type": "Http"
      }
    },
    "contentVersion": "1.0.0.0",
    "outputs": {},
    "triggers": {
      "manual": {
        "inputs": {},
        "kind": "Http",
        "runtimeConfiguration": {
          "secureData": {
            "properties": [
              "inputs",
              "outputs"
            ]
          }
        },
        "type": "Request"
      }
    }
  },
  "kind": "Stateful"
}

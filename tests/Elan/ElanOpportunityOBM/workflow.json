{
  "definition": {
    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
    "actions": {
      "Catch_Scope": {
        "actions": {
          "Response": {
            "inputs": {
              "body": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:out=\"http://soap.sforce.com/2005/09/outbound\">\n<soapenv:Header/>\n<soapenv:Body>\n<out:notificationsResponse>\n<out:Ack>0</out:Ack>\n</out:notificationsResponse>\n</soapenv:Body>\n</soapenv:Envelope>",
              "headers": {
                "Content-Type": "text/xml"
              },
              "statusCode": 500
            },
            "kind": "Http",
            "runAfter": {},
            "type": "Response"
          },
          "Run_failed": {
            "inputs": {
              "runError": {
                "code": "500"
              },
              "runStatus": "Failed"
            },
            "runAfter": {
              "Response": [
                "Succeeded"
              ]
            },
            "type": "Terminate"
          }
        },
        "runAfter": {
          "Try_Scope": [
            "Failed",
            "Skipped",
            "TimedOut"
          ]
        },
        "type": "Scope"
      },
      "GetConfiguration": {
        "inputs": {
          "host": {
            "workflow": {
              "id": "getConfiguration"
            }
          },
          "body": {
            "key": "obm-config"
          },
          "headers": null
        },
        "runAfter": {},
        "type": "Workflow"
      },
      "Try_Scope": {
        "actions": {
          "For_each_notification": {
            "actions": {
              "ELAN_Service_SOAP_Request": {
                "inputs": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:urn=\"urn:sap-com:document:sap:soap:functions:mc-style\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <urn:ZFinSieSalesInbound>\n         <IvOpportunityId>@{xpath(xml(items('For_each_notification')), 'string(/*[local-name()=\"Notification\"]/*[local-name()=\"sObject\"]/*[local-name()=\"Id\"])')}</IvOpportunityId>\n      </urn:ZFinSieSalesInbound>\n   </soapenv:Body>\n</soapenv:Envelope>",
                "runAfter": {},
                "type": "Compose"
              },
              "Request_to_Elan_Service": {
                "inputs": {
                  "authentication": {
                    "password": "@json(body('GetConfiguration'))?['ELAN']?['password']",
                    "type": "Basic",
                    "username": "@json(body('GetConfiguration'))?['ELAN']?['username']"
                  },
                  "body": "@outputs('ELAN_Service_SOAP_Request')",
                  "headers": {
                    "Content-Type": "text/xml"
                  },
                  "method": "POST",
                  "uri": "@{json(body('GetConfiguration'))?['ELAN']?['url']}"
                },
                "runAfter": {
                  "ELAN_Service_SOAP_Request": [
                    "Succeeded"
                  ]
                },
                "type": "Http"
              }
            },
            "foreach": "@xpath(xml(triggerBody()), '/*[local-name()=\"Envelope\"]/*[local-name()=\"Body\"]/*[local-name()=\"notifications\"]/*[local-name()=\"Notification\"]')",
            "runAfter": {},
            "type": "Foreach"
          },
          "Run_successfull": {
            "inputs": {
              "runStatus": "Succeeded"
            },
            "runAfter": {
              "SuccessResponse": [
                "Succeeded"
              ]
            },
            "type": "Terminate"
          },
          "SuccessResponse": {
            "inputs": {
              "body": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:out=\"http://soap.sforce.com/2005/09/outbound\">\n<soapenv:Header/>\n<soapenv:Body>\n<out:notificationsResponse>\n<out:Ack>1</out:Ack>\n</out:notificationsResponse>\n</soapenv:Body>\n</soapenv:Envelope>",
              "headers": {
                "Content-Type": "text/xml"
              },
              "statusCode": 200
            },
            "kind": "Http",
            "runAfter": {
              "For_each_notification": [
                "Succeeded"
              ]
            },
            "type": "Response"
          }
        },
        "runAfter": {
          "GetConfiguration": [
            "Succeeded"
          ]
        },
        "trackedProperties": {
          "citizenName": "c00031",
          "correlationId": "@{triggerOutputs()['headers']?['correlationid']}",
          "interfaceName": "OBMv4ElanOpportunity",
          "interfacePartner": "@{coalesce(triggerOutputs()?['headers']?['Username'], 'not-defined')}",
          "interfaceVersion": "@{coalesce(triggerOutputs()?['headers']?['interfaceVersion'], 'non-defined')}",
          "operationName": "@{coalesce(triggerOutputs()?['headers']?['operationName'], 'OBMv4ElanOpportunity')}",
          "parentWorkflow": "@{coalesce(triggerOutputs()?['headers']?['x-ms-workflow-name'],'not-defined')}",
          "clientCertificateThumbprint": "@{coalesce(triggerOutputs()?['headers']?['client-certificate-thumbprint'],'not-defined')}",
          "clientIPAddress": "@{coalesce(triggerOutputs()?['headers']?['client-ip-address'],'not-defined')}"
        },
        "type": "Scope"
      }
    },
    "contentVersion": "1.0.0.0",
    "outputs": {},
    "triggers": {
      "manual": {
        "inputs": {
          "schema": {}
        },
        "kind": "Http",
        "type": "Request"
      }
    }
  },
  "kind": "Stateful"
}
